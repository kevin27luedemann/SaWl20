
Sonnenaufgangsweckerlampe_2_0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001868  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000e2  00800060  00001868  000018fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000023  00800142  00800142  000019de  2**0
                  ALLOC
  3 .stab         00002b80  00000000  00000000  000019e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000854  00000000  00000000  00004560  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004db4  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000120  00000000  00000000  00004de3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003026  00000000  00000000  00004f03  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000053b  00000000  00000000  00007f29  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000aef  00000000  00000000  00008464  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000308  00000000  00000000  00008f54  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000523  00000000  00000000  0000925c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000021b6  00000000  00000000  0000977f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000138  00000000  00000000  0000b935  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	a9 c0       	rjmp	.+338    	; 0x156 <__bad_interrupt>
       4:	a8 c0       	rjmp	.+336    	; 0x156 <__bad_interrupt>
       6:	a7 c0       	rjmp	.+334    	; 0x156 <__bad_interrupt>
       8:	a6 c0       	rjmp	.+332    	; 0x156 <__bad_interrupt>
       a:	a5 c0       	rjmp	.+330    	; 0x156 <__bad_interrupt>
       c:	a4 c0       	rjmp	.+328    	; 0x156 <__bad_interrupt>
       e:	a3 c0       	rjmp	.+326    	; 0x156 <__bad_interrupt>
      10:	46 c7       	rjmp	.+3724   	; 0xe9e <__vector_8>
      12:	a1 c0       	rjmp	.+322    	; 0x156 <__bad_interrupt>
      14:	a0 c0       	rjmp	.+320    	; 0x156 <__bad_interrupt>
      16:	9f c0       	rjmp	.+318    	; 0x156 <__bad_interrupt>
      18:	9e c0       	rjmp	.+316    	; 0x156 <__bad_interrupt>
      1a:	9d c0       	rjmp	.+314    	; 0x156 <__bad_interrupt>
      1c:	9c c0       	rjmp	.+312    	; 0x156 <__bad_interrupt>
      1e:	9b c0       	rjmp	.+310    	; 0x156 <__bad_interrupt>
      20:	9a c0       	rjmp	.+308    	; 0x156 <__bad_interrupt>
      22:	99 c0       	rjmp	.+306    	; 0x156 <__bad_interrupt>
      24:	98 c0       	rjmp	.+304    	; 0x156 <__bad_interrupt>
      26:	00 40       	sbci	r16, 0x00	; 0
      28:	7a 10       	cpse	r7, r10
      2a:	f3 5a       	subi	r31, 0xA3	; 163
      2c:	00 a0       	ldd	r0, Z+32	; 0x20
      2e:	72 4e       	sbci	r23, 0xE2	; 226
      30:	18 09       	sbc	r17, r8
      32:	00 10       	cpse	r0, r0
      34:	a5 d4       	rcall	.+2378   	; 0x980 <_Z5einsth+0x34e>
      36:	e8 00       	.word	0x00e8	; ????
      38:	00 e8       	ldi	r16, 0x80	; 128
      3a:	76 48       	sbci	r23, 0x86	; 134
      3c:	17 00       	.word	0x0017	; ????
      3e:	00 e4       	ldi	r16, 0x40	; 64
      40:	0b 54       	subi	r16, 0x4B	; 75
      42:	02 00       	.word	0x0002	; ????
      44:	00 ca       	rjmp	.-3072   	; 0xfffff446 <__eeprom_end+0xff7ef446>
      46:	9a 3b       	cpi	r25, 0xBA	; 186
      48:	00 00       	nop
      4a:	00 e1       	ldi	r16, 0x10	; 16
      4c:	f5 05       	cpc	r31, r5
      4e:	00 00       	nop
      50:	80 96       	adiw	r24, 0x20	; 32
      52:	98 00       	.word	0x0098	; ????
      54:	00 00       	nop
      56:	40 42       	sbci	r20, 0x20	; 32
      58:	0f 00       	.word	0x000f	; ????
      5a:	00 00       	nop
      5c:	a0 86       	std	Z+8, r10	; 0x08
      5e:	01 00       	.word	0x0001	; ????
      60:	00 00       	nop
      62:	10 27       	eor	r17, r16
      64:	00 00       	nop
      66:	00 00       	nop
      68:	e8 03       	fmulsu	r22, r16
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	64 00       	.word	0x0064	; ????
      70:	00 00       	nop
      72:	00 00       	nop
      74:	0a 00       	.word	0x000a	; ????
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	01 00       	.word	0x0001	; ????
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	2c 76       	andi	r18, 0x6C	; 108
      82:	d8 88       	ldd	r13, Y+16	; 0x10
      84:	dc 67       	ori	r29, 0x7C	; 124
      86:	4f 08       	sbc	r4, r15
      88:	23 df       	rcall	.-442    	; 0xfffffed0 <__eeprom_end+0xff7efed0>
      8a:	c1 df       	rcall	.-126    	; 0xe <__zero_reg__+0xd>
      8c:	ae 59       	subi	r26, 0x9E	; 158
      8e:	e1 b1       	in	r30, 0x01	; 1
      90:	b7 96       	adiw	r30, 0x27	; 39
      92:	e5 e3       	ldi	r30, 0x35	; 53
      94:	e4 53       	subi	r30, 0x34	; 52
      96:	c6 3a       	cpi	r28, 0xA6	; 166
      98:	e6 51       	subi	r30, 0x16	; 22
      9a:	99 76       	andi	r25, 0x69	; 105
      9c:	96 e8       	ldi	r25, 0x86	; 134
      9e:	e6 c2       	rjmp	.+1484   	; 0x66c <_Z5einsth+0x3a>
      a0:	84 26       	eor	r8, r20
      a2:	eb 89       	ldd	r30, Y+19	; 0x13
      a4:	8c 9b       	sbis	0x11, 4	; 17
      a6:	62 ed       	ldi	r22, 0xD2	; 210
      a8:	40 7c       	andi	r20, 0xC0	; 192
      aa:	6f fc       	.word	0xfc6f	; ????
      ac:	ef bc       	out	0x2f, r14	; 47
      ae:	9c 9f       	mul	r25, r28
      b0:	40 f2       	brcs	.-112    	; 0x42 <__SREG__+0x3>
      b2:	ba a5       	ldd	r27, Y+42	; 0x2a
      b4:	6f a5       	ldd	r22, Y+47	; 0x2f
      b6:	f4 90       	lpm	r15, Z
      b8:	05 5a       	subi	r16, 0xA5	; 165
      ba:	2a f7       	brpl	.-54     	; 0x86 <__SREG__+0x47>
      bc:	5c 93       	st	X, r21
      be:	6b 6c       	ori	r22, 0xCB	; 203
      c0:	f9 67       	ori	r31, 0x79	; 121
      c2:	6d c1       	rjmp	.+730    	; 0x39e <_Z4zeitv+0xa>
      c4:	1b fc       	.word	0xfc1b	; ????
      c6:	e0 e4       	ldi	r30, 0x40	; 64
      c8:	0d 47       	sbci	r16, 0x7D	; 125
      ca:	fe f5       	brtc	.+126    	; 0x14a <.do_clear_bss_loop>
      cc:	20 e6       	ldi	r18, 0x60	; 96
      ce:	b5 00       	.word	0x00b5	; ????
      d0:	d0 ed       	ldi	r29, 0xD0	; 208
      d2:	90 2e       	mov	r9, r16
      d4:	03 00       	.word	0x0003	; ????
      d6:	94 35       	cpi	r25, 0x54	; 84
      d8:	77 05       	cpc	r23, r7
      da:	00 80       	ld	r0, Z
      dc:	84 1e       	adc	r8, r20
      de:	08 00       	.word	0x0008	; ????
      e0:	00 20       	and	r0, r0
      e2:	4e 0a       	sbc	r4, r30
      e4:	00 00       	nop
      e6:	00 c8       	rjmp	.-4096   	; 0xfffff0e8 <__eeprom_end+0xff7ef0e8>
      e8:	0c 33       	cpi	r16, 0x3C	; 60
      ea:	33 33       	cpi	r19, 0x33	; 51
      ec:	33 0f       	add	r19, r19
      ee:	98 6e       	ori	r25, 0xE8	; 232
      f0:	12 83       	std	Z+2, r17	; 0x02
      f2:	11 41       	sbci	r17, 0x11	; 17
      f4:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f6:	21 14       	cp	r2, r1
      f8:	89 3b       	cpi	r24, 0xB9	; 185
      fa:	e6 55       	subi	r30, 0x56	; 86
      fc:	16 cf       	rjmp	.-468    	; 0xffffff2a <__eeprom_end+0xff7eff2a>
      fe:	fe e6       	ldi	r31, 0x6E	; 110
     100:	db 18       	sub	r13, r11
     102:	d1 84       	ldd	r13, Z+9	; 0x09
     104:	4b 38       	cpi	r20, 0x8B	; 139
     106:	1b f7       	brvc	.-58     	; 0xce <__SREG__+0x8f>
     108:	7c 1d       	adc	r23, r12
     10a:	90 1d       	adc	r25, r0
     10c:	a4 bb       	out	0x14, r26	; 20
     10e:	e4 24       	eor	r14, r4
     110:	20 32       	cpi	r18, 0x20	; 32
     112:	84 72       	andi	r24, 0x24	; 36
     114:	5e 22       	and	r5, r30
     116:	81 00       	.word	0x0081	; ????
     118:	c9 f1       	breq	.+114    	; 0x18c <_Z8lcd_datah+0x12>
     11a:	24 ec       	ldi	r18, 0xC4	; 196
     11c:	a1 e5       	ldi	r26, 0x51	; 81
     11e:	3d 27       	eor	r19, r29

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf e5       	ldi	r28, 0x5F	; 95
     126:	d4 e0       	ldi	r29, 0x04	; 4
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	11 e0       	ldi	r17, 0x01	; 1
     12e:	a0 e6       	ldi	r26, 0x60	; 96
     130:	b0 e0       	ldi	r27, 0x00	; 0
     132:	e8 e6       	ldi	r30, 0x68	; 104
     134:	f8 e1       	ldi	r31, 0x18	; 24
     136:	02 c0       	rjmp	.+4      	; 0x13c <__do_copy_data+0x10>
     138:	05 90       	lpm	r0, Z+
     13a:	0d 92       	st	X+, r0
     13c:	a2 34       	cpi	r26, 0x42	; 66
     13e:	b1 07       	cpc	r27, r17
     140:	d9 f7       	brne	.-10     	; 0x138 <__do_copy_data+0xc>

00000142 <__do_clear_bss>:
     142:	21 e0       	ldi	r18, 0x01	; 1
     144:	a2 e4       	ldi	r26, 0x42	; 66
     146:	b1 e0       	ldi	r27, 0x01	; 1
     148:	01 c0       	rjmp	.+2      	; 0x14c <.do_clear_bss_start>

0000014a <.do_clear_bss_loop>:
     14a:	1d 92       	st	X+, r1

0000014c <.do_clear_bss_start>:
     14c:	a5 36       	cpi	r26, 0x65	; 101
     14e:	b2 07       	cpc	r27, r18
     150:	e1 f7       	brne	.-8      	; 0x14a <.do_clear_bss_loop>
     152:	ba d6       	rcall	.+3444   	; 0xec8 <main>
     154:	87 cb       	rjmp	.-2290   	; 0xfffff864 <__eeprom_end+0xff7ef864>

00000156 <__bad_interrupt>:
     156:	54 cf       	rjmp	.-344    	; 0x0 <__vectors>

00000158 <_ZL10lcd_enablev>:

////////////////////////////////////////////////////////////////////////////////
// Erzeugt einen Enable-Puls
static void lcd_enable( void )
{
	LCD_PORT |= (1<<LCD_EN);     // Enable auf 1 setzen
     158:	c5 9a       	sbi	0x18, 5	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15a:	88 e1       	ldi	r24, 0x18	; 24
     15c:	8a 95       	dec	r24
     15e:	f1 f7       	brne	.-4      	; 0x15c <_ZL10lcd_enablev+0x4>
     160:	00 c0       	rjmp	.+0      	; 0x162 <_ZL10lcd_enablev+0xa>
	_delay_us( LCD_ENABLE_US );  // kurze Pause
	LCD_PORT &= ~(1<<LCD_EN);    // Enable auf 0 setzen
     162:	c5 98       	cbi	0x18, 5	; 24
     164:	08 95       	ret

00000166 <_ZL7lcd_outh>:
// Sendet eine 4-bit Ausgabeoperation an das LCD
static void lcd_out( uint8_t data )
{
	data &= 0xF0;                       // obere 4 Bit maskieren
	
	LCD_PORT &= ~(0xF0>>(4-LCD_DB));    // Maske löschen
     166:	98 b3       	in	r25, 0x18	; 24
     168:	90 7f       	andi	r25, 0xF0	; 240
     16a:	98 bb       	out	0x18, r25	; 24
	LCD_PORT |= (data>>(4-LCD_DB));     // Bits setzen
     16c:	98 b3       	in	r25, 0x18	; 24
     16e:	82 95       	swap	r24
     170:	8f 70       	andi	r24, 0x0F	; 15
     172:	98 2b       	or	r25, r24
     174:	98 bb       	out	0x18, r25	; 24
	lcd_enable();
     176:	f0 df       	rcall	.-32     	; 0x158 <_ZL10lcd_enablev>
     178:	08 95       	ret

0000017a <_Z8lcd_datah>:
}

////////////////////////////////////////////////////////////////////////////////
// Sendet ein Datenbyte an das LCD
void lcd_data( uint8_t data )
{
     17a:	cf 93       	push	r28
     17c:	c8 2f       	mov	r28, r24
	LCD_PORT |= (1<<LCD_RS);    // RS auf 1 setzen
     17e:	c4 9a       	sbi	0x18, 4	; 24
	
	lcd_out( data );            // zuerst die oberen,
     180:	f2 df       	rcall	.-28     	; 0x166 <_ZL7lcd_outh>
	lcd_out( data<<4 );         // dann die unteren 4 Bit senden
     182:	8c 2f       	mov	r24, r28
     184:	82 95       	swap	r24
     186:	80 7f       	andi	r24, 0xF0	; 240
     188:	ee df       	rcall	.-36     	; 0x166 <_ZL7lcd_outh>
     18a:	88 e3       	ldi	r24, 0x38	; 56
     18c:	8a 95       	dec	r24
     18e:	f1 f7       	brne	.-4      	; 0x18c <_Z8lcd_datah+0x12>
     190:	00 c0       	rjmp	.+0      	; 0x192 <_Z8lcd_datah+0x18>
	
	_delay_us( LCD_WRITEDATA_US );
}
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <_Z11lcd_commandh>:

////////////////////////////////////////////////////////////////////////////////
// Sendet einen Befehl an das LCD
void lcd_command( uint8_t data )
{
     196:	cf 93       	push	r28
     198:	c8 2f       	mov	r28, r24
	LCD_PORT &= ~(1<<LCD_RS);    // RS auf 0 setzen
     19a:	c4 98       	cbi	0x18, 4	; 24
	
	lcd_out( data );             // zuerst die oberen,
     19c:	e4 df       	rcall	.-56     	; 0x166 <_ZL7lcd_outh>
	lcd_out( data<<4 );           // dann die unteren 4 Bit senden
     19e:	8c 2f       	mov	r24, r28
     1a0:	82 95       	swap	r24
     1a2:	80 7f       	andi	r24, 0xF0	; 240
     1a4:	e0 df       	rcall	.-64     	; 0x166 <_ZL7lcd_outh>
     1a6:	83 e3       	ldi	r24, 0x33	; 51
     1a8:	8a 95       	dec	r24
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <_Z11lcd_commandh+0x12>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <_Z11lcd_commandh+0x18>
	
	_delay_us( LCD_COMMAND_US );
}
     1ae:	cf 91       	pop	r28
     1b0:	08 95       	ret

000001b2 <_Z9lcd_clearv>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl zur Löschung des Displays
void lcd_clear( void )
{
	lcd_command( LCD_CLEAR_DISPLAY );
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	f0 df       	rcall	.-32     	; 0x196 <_Z11lcd_commandh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1b6:	83 e3       	ldi	r24, 0x33	; 51
     1b8:	97 e0       	ldi	r25, 0x07	; 7
     1ba:	01 97       	sbiw	r24, 0x01	; 1
     1bc:	f1 f7       	brne	.-4      	; 0x1ba <_Z9lcd_clearv+0x8>
     1be:	08 95       	ret

000001c0 <_Z8lcd_initv>:
{
	// verwendete Pins auf Ausgang schalten
	uint8_t pins = (0x0F << LCD_DB) |           // 4 Datenleitungen
	(1<<LCD_RS) |                // R/S Leitung
	(1<<LCD_EN);                 // Enable Leitung
	LCD_DDR |= pins;
     1c0:	87 b3       	in	r24, 0x17	; 23
     1c2:	8f 63       	ori	r24, 0x3F	; 63
     1c4:	87 bb       	out	0x17, r24	; 23
	
	// initial alle Ausgänge auf Null
	LCD_PORT &= ~pins;
     1c6:	88 b3       	in	r24, 0x18	; 24
     1c8:	80 7c       	andi	r24, 0xC0	; 192
     1ca:	88 bb       	out	0x18, r24	; 24
     1cc:	8f ef       	ldi	r24, 0xFF	; 255
     1ce:	95 e3       	ldi	r25, 0x35	; 53
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <_Z8lcd_initv+0x10>
     1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <_Z8lcd_initv+0x16>
     1d6:	00 00       	nop
	
	// warten auf die Bereitschaft des LCD
	_delay_ms( LCD_BOOTUP_MS );
	
	// Soft-Reset muss 3mal hintereinander gesendet werden zur Initialisierung
	lcd_out( LCD_SOFT_RESET );
     1d8:	80 e3       	ldi	r24, 0x30	; 48
     1da:	c5 df       	rcall	.-118    	; 0x166 <_ZL7lcd_outh>
     1dc:	8f ef       	ldi	r24, 0xFF	; 255
     1de:	91 e1       	ldi	r25, 0x11	; 17
     1e0:	01 97       	sbiw	r24, 0x01	; 1
     1e2:	f1 f7       	brne	.-4      	; 0x1e0 <_Z8lcd_initv+0x20>
     1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <_Z8lcd_initv+0x26>
     1e6:	00 00       	nop
	_delay_ms( LCD_SOFT_RESET_MS1 );
	
	lcd_enable();
     1e8:	b7 df       	rcall	.-146    	; 0x158 <_ZL10lcd_enablev>
     1ea:	89 e9       	ldi	r24, 0x99	; 153
     1ec:	93 e0       	ldi	r25, 0x03	; 3
     1ee:	01 97       	sbiw	r24, 0x01	; 1
     1f0:	f1 f7       	brne	.-4      	; 0x1ee <_Z8lcd_initv+0x2e>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <_Z8lcd_initv+0x34>
	_delay_ms( LCD_SOFT_RESET_MS2 );
	
	lcd_enable();
     1f4:	b1 df       	rcall	.-158    	; 0x158 <_ZL10lcd_enablev>
     1f6:	89 e9       	ldi	r24, 0x99	; 153
     1f8:	93 e0       	ldi	r25, 0x03	; 3
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <_Z8lcd_initv+0x3a>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <_Z8lcd_initv+0x40>
	_delay_ms( LCD_SOFT_RESET_MS3 );
	
	// 4-bit Modus aktivieren
	lcd_out( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT );
     200:	80 e2       	ldi	r24, 0x20	; 32
     202:	b1 df       	rcall	.-158    	; 0x166 <_ZL7lcd_outh>
     204:	8f ef       	ldi	r24, 0xFF	; 255
     206:	91 e1       	ldi	r25, 0x11	; 17
     208:	01 97       	sbiw	r24, 0x01	; 1
     20a:	f1 f7       	brne	.-4      	; 0x208 <_Z8lcd_initv+0x48>
     20c:	00 c0       	rjmp	.+0      	; 0x20e <_Z8lcd_initv+0x4e>
     20e:	00 00       	nop
	
	// 4-bit Modus / 2 Zeilen / 5x7
	lcd_command( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT |
	LCD_FUNCTION_2LINE |
	LCD_FUNCTION_5X7 );
     210:	88 e2       	ldi	r24, 0x28	; 40
     212:	c1 df       	rcall	.-126    	; 0x196 <_Z11lcd_commandh>
	
	// Display ein / Cursor aus / Blinken aus
	lcd_command( LCD_SET_DISPLAY |
	LCD_DISPLAY_ON |
	LCD_CURSOR_OFF |
	LCD_BLINKING_OFF);
     214:	8c e0       	ldi	r24, 0x0C	; 12
     216:	bf df       	rcall	.-130    	; 0x196 <_Z11lcd_commandh>
	
	// Cursor inkrement / kein Scrollen
	lcd_command( LCD_SET_ENTRY |
	LCD_ENTRY_INCREASE |
	LCD_ENTRY_NOSHIFT );
     218:	86 e0       	ldi	r24, 0x06	; 6
     21a:	bd df       	rcall	.-134    	; 0x196 <_Z11lcd_commandh>
	
	lcd_clear();
     21c:	ca df       	rcall	.-108    	; 0x1b2 <_Z9lcd_clearv>
     21e:	08 95       	ret

00000220 <_Z8lcd_homev>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl: Cursor Home
void lcd_home( void )
{
	lcd_command( LCD_CURSOR_HOME );
     220:	82 e0       	ldi	r24, 0x02	; 2
     222:	b9 df       	rcall	.-142    	; 0x196 <_Z11lcd_commandh>
     224:	83 e3       	ldi	r24, 0x33	; 51
     226:	97 e0       	ldi	r25, 0x07	; 7
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <_Z8lcd_homev+0x8>
     22c:	08 95       	ret

0000022e <_Z13lcd_setcursorhh>:

void lcd_setcursor( uint8_t x, uint8_t y )
{
	uint8_t data;
	
	switch (y)
     22e:	62 30       	cpi	r22, 0x02	; 2
     230:	59 f0       	breq	.+22     	; 0x248 <_Z13lcd_setcursorhh+0x1a>
     232:	18 f4       	brcc	.+6      	; 0x23a <_Z13lcd_setcursorhh+0xc>
     234:	61 30       	cpi	r22, 0x01	; 1
     236:	71 f4       	brne	.+28     	; 0x254 <_Z13lcd_setcursorhh+0x26>
     238:	05 c0       	rjmp	.+10     	; 0x244 <_Z13lcd_setcursorhh+0x16>
     23a:	63 30       	cpi	r22, 0x03	; 3
     23c:	39 f0       	breq	.+14     	; 0x24c <_Z13lcd_setcursorhh+0x1e>
     23e:	64 30       	cpi	r22, 0x04	; 4
     240:	49 f4       	brne	.+18     	; 0x254 <_Z13lcd_setcursorhh+0x26>
     242:	06 c0       	rjmp	.+12     	; 0x250 <_Z13lcd_setcursorhh+0x22>
	{
		case 1:    // 1. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE1 + x;
     244:	80 58       	subi	r24, 0x80	; 128
		break;
     246:	05 c0       	rjmp	.+10     	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 2:    // 2. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE2 + x;
     248:	80 54       	subi	r24, 0x40	; 64
		break;
     24a:	03 c0       	rjmp	.+6      	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 3:    // 3. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE3 + x;
     24c:	80 57       	subi	r24, 0x70	; 112
		break;
     24e:	01 c0       	rjmp	.+2      	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 4:    // 4. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE4 + x;
     250:	80 53       	subi	r24, 0x30	; 48
		
		default:
		return;                                   // für den Fall einer falschen Zeile
	}
	
	lcd_command( data );
     252:	a1 df       	rcall	.-190    	; 0x196 <_Z11lcd_commandh>
     254:	08 95       	ret

00000256 <_Z10lcd_stringPKc>:

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	ec 01       	movw	r28, r24
	while( *data != '\0' )
     25c:	88 81       	ld	r24, Y
     25e:	88 23       	and	r24, r24
     260:	29 f0       	breq	.+10     	; 0x26c <_Z10lcd_stringPKc+0x16>
}

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
     262:	21 96       	adiw	r28, 0x01	; 1
{
	while( *data != '\0' )
	lcd_data( *data++ );
     264:	8a df       	rcall	.-236    	; 0x17a <_Z8lcd_datah>
////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
	while( *data != '\0' )
     266:	89 91       	ld	r24, Y+
     268:	81 11       	cpse	r24, r1
     26a:	fc cf       	rjmp	.-8      	; 0x264 <_Z10lcd_stringPKc+0xe>
	lcd_data( *data++ );
}
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <_Z8ADC_Readh>:
#ifndef ADC_H_
#define ADC_H_

uint16_t ADC_Read( uint8_t channel )
{
	ADMUX = (ADMUX & ~(0x1F)) | (channel & 0x1F);
     272:	97 b1       	in	r25, 0x07	; 7
     274:	8f 71       	andi	r24, 0x1F	; 31
     276:	90 7e       	andi	r25, 0xE0	; 224
     278:	98 2b       	or	r25, r24
     27a:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1<<ADSC);
     27c:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     27e:	36 99       	sbic	0x06, 6	; 6
     280:	fe cf       	rjmp	.-4      	; 0x27e <_Z8ADC_Readh+0xc>
	}
	return ADCW;
     282:	24 b1       	in	r18, 0x04	; 4
     284:	35 b1       	in	r19, 0x05	; 5
}
     286:	82 2f       	mov	r24, r18
     288:	93 2f       	mov	r25, r19
     28a:	08 95       	ret

0000028c <_Z6Weckerv>:

#ifndef ZEIT_H_
#define ZEIT_H_

void Wecker(){
	if (WochenTag!=0 && WochenTag!=6)
     28c:	80 91 61 01 	lds	r24, 0x0161
     290:	88 23       	and	r24, r24
     292:	99 f0       	breq	.+38     	; 0x2ba <_Z6Weckerv+0x2e>
     294:	86 30       	cpi	r24, 0x06	; 6
     296:	89 f0       	breq	.+34     	; 0x2ba <_Z6Weckerv+0x2e>
	{
		if(Stunden==WStunden[0]){
     298:	90 91 5f 01 	lds	r25, 0x015F
     29c:	80 91 62 01 	lds	r24, 0x0162
     2a0:	98 13       	cpse	r25, r24
     2a2:	1b c0       	rjmp	.+54     	; 0x2da <_Z6Weckerv+0x4e>
			if(Minuten==WMinuten[0]){
     2a4:	90 91 5d 01 	lds	r25, 0x015D
     2a8:	80 91 63 01 	lds	r24, 0x0163
     2ac:	98 13       	cpse	r25, r24
     2ae:	15 c0       	rjmp	.+42     	; 0x2da <_Z6Weckerv+0x4e>
				Wan = 1;
     2b0:	81 e0       	ldi	r24, 0x01	; 1
     2b2:	80 93 5c 01 	sts	0x015C, r24
				PORTC |= (1<<PC5);
     2b6:	ad 9a       	sbi	0x15, 5	; 21
     2b8:	08 95       	ret
			}
		}
	}
	else
	{
		if(Stunden==WStunden[1]){
     2ba:	90 91 60 01 	lds	r25, 0x0160
     2be:	80 91 62 01 	lds	r24, 0x0162
     2c2:	98 13       	cpse	r25, r24
     2c4:	0a c0       	rjmp	.+20     	; 0x2da <_Z6Weckerv+0x4e>
			if(Minuten==WMinuten[1]){
     2c6:	90 91 5e 01 	lds	r25, 0x015E
     2ca:	80 91 63 01 	lds	r24, 0x0163
     2ce:	98 13       	cpse	r25, r24
     2d0:	04 c0       	rjmp	.+8      	; 0x2da <_Z6Weckerv+0x4e>
				Wan = 1;
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	80 93 5c 01 	sts	0x015C, r24
				PORTC |= (1<<PC5);
     2d8:	ad 9a       	sbi	0x15, 5	; 21
     2da:	08 95       	ret

000002dc <_Z10temperaturv>:
			}
		}
	}
}

void temperatur(){
     2dc:	cf 92       	push	r12
     2de:	df 92       	push	r13
     2e0:	ef 92       	push	r14
     2e2:	ff 92       	push	r15
     2e4:	0f 93       	push	r16
     2e6:	1f 93       	push	r17
     2e8:	cf 93       	push	r28
     2ea:	df 93       	push	r29
	ADC_Read(0);
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	c1 df       	rcall	.-126    	; 0x272 <_Z8ADC_Readh>
	uint16_t adcval = ADC_Read(0);
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	bf df       	rcall	.-130    	; 0x272 <_Z8ADC_Readh>
	double span= (double)adcval*(5.0/1024.0);
     2f4:	bc 01       	movw	r22, r24
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	0c d7       	rcall	.+3608   	; 0x1114 <__floatunsisf>
     2fc:	20 e0       	ldi	r18, 0x00	; 0
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	40 ea       	ldi	r20, 0xA0	; 160
     302:	5b e3       	ldi	r21, 0x3B	; 59
     304:	95 d7       	rcall	.+3882   	; 0x1230 <__mulsf3>
     306:	06 2f       	mov	r16, r22
     308:	17 2f       	mov	r17, r23
     30a:	d8 2f       	mov	r29, r24
     30c:	c9 2f       	mov	r28, r25
	double widerst = ((double)span*2700.0)/((double)(5-(double)span));
     30e:	20 e0       	ldi	r18, 0x00	; 0
     310:	30 ec       	ldi	r19, 0xC0	; 192
     312:	48 e2       	ldi	r20, 0x28	; 40
     314:	55 e4       	ldi	r21, 0x45	; 69
     316:	8c d7       	rcall	.+3864   	; 0x1230 <__mulsf3>
     318:	6b 01       	movw	r12, r22
     31a:	7c 01       	movw	r14, r24
     31c:	20 2f       	mov	r18, r16
     31e:	31 2f       	mov	r19, r17
     320:	4d 2f       	mov	r20, r29
     322:	5c 2f       	mov	r21, r28
     324:	60 e0       	ldi	r22, 0x00	; 0
     326:	70 e0       	ldi	r23, 0x00	; 0
     328:	80 ea       	ldi	r24, 0xA0	; 160
     32a:	90 e4       	ldi	r25, 0x40	; 64
     32c:	26 d6       	rcall	.+3148   	; 0xf7a <__subsf3>
     32e:	9b 01       	movw	r18, r22
     330:	ac 01       	movw	r20, r24
     332:	c7 01       	movw	r24, r14
     334:	b6 01       	movw	r22, r12
     336:	86 d6       	rcall	.+3340   	; 0x1044 <__divsf3>
	tempera = (100.0/1387.0)*widerst+(50+tempoffset-(100.0/1387.0)*2417.0);
     338:	25 e2       	ldi	r18, 0x25	; 37
     33a:	38 ea       	ldi	r19, 0xA8	; 168
     33c:	43 e9       	ldi	r20, 0x93	; 147
     33e:	5d e3       	ldi	r21, 0x3D	; 61
     340:	77 d7       	rcall	.+3822   	; 0x1230 <__mulsf3>
     342:	6b 01       	movw	r12, r22
     344:	7c 01       	movw	r14, r24
     346:	60 91 61 00 	lds	r22, 0x0061
     34a:	77 27       	eor	r23, r23
     34c:	67 fd       	sbrc	r22, 7
     34e:	70 95       	com	r23
     350:	6e 5c       	subi	r22, 0xCE	; 206
     352:	7f 4f       	sbci	r23, 0xFF	; 255
     354:	88 27       	eor	r24, r24
     356:	77 fd       	sbrc	r23, 7
     358:	80 95       	com	r24
     35a:	98 2f       	mov	r25, r24
     35c:	dd d6       	rcall	.+3514   	; 0x1118 <__floatsisf>
     35e:	21 ed       	ldi	r18, 0xD1	; 209
     360:	32 e4       	ldi	r19, 0x42	; 66
     362:	4e e2       	ldi	r20, 0x2E	; 46
     364:	53 e4       	ldi	r21, 0x43	; 67
     366:	09 d6       	rcall	.+3090   	; 0xf7a <__subsf3>
     368:	9b 01       	movw	r18, r22
     36a:	ac 01       	movw	r20, r24
     36c:	c7 01       	movw	r24, r14
     36e:	b6 01       	movw	r22, r12
     370:	05 d6       	rcall	.+3082   	; 0xf7c <__addsf3>
     372:	60 93 57 01 	sts	0x0157, r22
     376:	70 93 58 01 	sts	0x0158, r23
     37a:	80 93 59 01 	sts	0x0159, r24
     37e:	90 93 5a 01 	sts	0x015A, r25
}
     382:	df 91       	pop	r29
     384:	cf 91       	pop	r28
     386:	1f 91       	pop	r17
     388:	0f 91       	pop	r16
     38a:	ff 90       	pop	r15
     38c:	ef 90       	pop	r14
     38e:	df 90       	pop	r13
     390:	cf 90       	pop	r12
     392:	08 95       	ret

00000394 <_Z4zeitv>:

void zeit(){
	sektemp=Sekunden;
     394:	80 91 64 01 	lds	r24, 0x0164
     398:	80 93 5b 01 	sts	0x015B, r24
	if (Sekunden >= 60){
     39c:	8c 33       	cpi	r24, 0x3C	; 60
     39e:	30 f1       	brcs	.+76     	; 0x3ec <_Z4zeitv+0x58>
		//Temperatur bestimmen
		temperatur();
     3a0:	9d df       	rcall	.-198    	; 0x2dc <_Z10temperaturv>
		
		Sekunden = 0;
     3a2:	10 92 64 01 	sts	0x0164, r1
		Minuten++;
     3a6:	80 91 63 01 	lds	r24, 0x0163
     3aa:	8f 5f       	subi	r24, 0xFF	; 255
		if(Minuten >= 60){
     3ac:	8c 33       	cpi	r24, 0x3C	; 60
     3ae:	18 f4       	brcc	.+6      	; 0x3b6 <_Z4zeitv+0x22>
	if (Sekunden >= 60){
		//Temperatur bestimmen
		temperatur();
		
		Sekunden = 0;
		Minuten++;
     3b0:	80 93 63 01 	sts	0x0163, r24
     3b4:	07 c0       	rjmp	.+14     	; 0x3c4 <_Z4zeitv+0x30>
		if(Minuten >= 60){
			Minuten = 0;
     3b6:	10 92 63 01 	sts	0x0163, r1
			Stunden++;
     3ba:	80 91 62 01 	lds	r24, 0x0162
     3be:	8f 5f       	subi	r24, 0xFF	; 255
     3c0:	80 93 62 01 	sts	0x0162, r24
		}
		if(Stunden >= 24){
     3c4:	80 91 62 01 	lds	r24, 0x0162
     3c8:	88 31       	cpi	r24, 0x18	; 24
     3ca:	80 f0       	brcs	.+32     	; 0x3ec <_Z4zeitv+0x58>
			Stunden = 0;
     3cc:	10 92 62 01 	sts	0x0162, r1
			WochenTag++;
     3d0:	80 91 61 01 	lds	r24, 0x0161
     3d4:	8f 5f       	subi	r24, 0xFF	; 255
			if (WochenTag>=7)
     3d6:	87 30       	cpi	r24, 0x07	; 7
     3d8:	18 f4       	brcc	.+6      	; 0x3e0 <_Z4zeitv+0x4c>
			Minuten = 0;
			Stunden++;
		}
		if(Stunden >= 24){
			Stunden = 0;
			WochenTag++;
     3da:	80 93 61 01 	sts	0x0161, r24
     3de:	02 c0       	rjmp	.+4      	; 0x3e4 <_Z4zeitv+0x50>
			if (WochenTag>=7)
			{
				WochenTag=0;
     3e0:	10 92 61 01 	sts	0x0161, r1
			}
			Sekunden += sekoffset; //Ausgleich der VerlustSekunden
     3e4:	80 91 56 01 	lds	r24, 0x0156
     3e8:	80 93 64 01 	sts	0x0164, r24
		}
	}
	
	if(Wan==0)
     3ec:	80 91 5c 01 	lds	r24, 0x015C
     3f0:	81 11       	cpse	r24, r1
     3f2:	01 c0       	rjmp	.+2      	; 0x3f6 <_Z4zeitv+0x62>
	{
		Wecker();
     3f4:	4b df       	rcall	.-362    	; 0x28c <_Z6Weckerv>
     3f6:	08 95       	ret

000003f8 <_Z4wtagh>:

#ifndef AUSGABE_H_
#define AUSGABE_H_

void wtag(uint8_t numm){
	switch (numm)
     3f8:	83 30       	cpi	r24, 0x03	; 3
     3fa:	b9 f0       	breq	.+46     	; 0x42a <_Z4wtagh+0x32>
     3fc:	20 f4       	brcc	.+8      	; 0x406 <_Z4wtagh+0xe>
     3fe:	81 30       	cpi	r24, 0x01	; 1
     400:	61 f0       	breq	.+24     	; 0x41a <_Z4wtagh+0x22>
     402:	78 f4       	brcc	.+30     	; 0x422 <_Z4wtagh+0x2a>
     404:	06 c0       	rjmp	.+12     	; 0x412 <_Z4wtagh+0x1a>
     406:	85 30       	cpi	r24, 0x05	; 5
     408:	c1 f0       	breq	.+48     	; 0x43a <_Z4wtagh+0x42>
     40a:	98 f0       	brcs	.+38     	; 0x432 <_Z4wtagh+0x3a>
     40c:	86 30       	cpi	r24, 0x06	; 6
     40e:	e1 f4       	brne	.+56     	; 0x448 <_Z4wtagh+0x50>
     410:	18 c0       	rjmp	.+48     	; 0x442 <_Z4wtagh+0x4a>
	{
		case 0:
		lcd_string("So ");
     412:	82 e6       	ldi	r24, 0x62	; 98
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	1f df       	rcall	.-450    	; 0x256 <_Z10lcd_stringPKc>
		break;
     418:	08 95       	ret
		
		case 1:
		lcd_string("Mo ");
     41a:	86 e6       	ldi	r24, 0x66	; 102
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	1b df       	rcall	.-458    	; 0x256 <_Z10lcd_stringPKc>
		break;
     420:	08 95       	ret
		
		case 2:
		lcd_string("Di ");
     422:	8a e6       	ldi	r24, 0x6A	; 106
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	17 df       	rcall	.-466    	; 0x256 <_Z10lcd_stringPKc>
		break;
     428:	08 95       	ret
		
		case 3:
		lcd_string("Mi ");
     42a:	8e e6       	ldi	r24, 0x6E	; 110
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	13 df       	rcall	.-474    	; 0x256 <_Z10lcd_stringPKc>
		break;
     430:	08 95       	ret
		
		case 4:
		lcd_string("Do ");
     432:	82 e7       	ldi	r24, 0x72	; 114
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	0f df       	rcall	.-482    	; 0x256 <_Z10lcd_stringPKc>
		break;
     438:	08 95       	ret
		
		case 5:
		lcd_string("Fr ");
     43a:	86 e7       	ldi	r24, 0x76	; 118
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	0b df       	rcall	.-490    	; 0x256 <_Z10lcd_stringPKc>
		break;
     440:	08 95       	ret
		
		case 6:
		lcd_string("Sa ");
     442:	8a e7       	ldi	r24, 0x7A	; 122
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	07 df       	rcall	.-498    	; 0x256 <_Z10lcd_stringPKc>
     448:	08 95       	ret

0000044a <_Z7zeitaush>:
			break;
	}
}

void zeitaus(uint8_t pos){
	switch (pos)
     44a:	88 23       	and	r24, r24
     44c:	21 f0       	breq	.+8      	; 0x456 <_Z7zeitaush+0xc>
     44e:	81 30       	cpi	r24, 0x01	; 1
     450:	09 f0       	breq	.+2      	; 0x454 <_Z7zeitaush+0xa>
     452:	42 c0       	rjmp	.+132    	; 0x4d8 <__stack+0x79>
     454:	1a c0       	rjmp	.+52     	; 0x48a <__stack+0x2b>
	{
		case 0:
			itoa( Stunden, Buffer, 10 );
     456:	4a e0       	ldi	r20, 0x0A	; 10
     458:	50 e0       	ldi	r21, 0x00	; 0
     45a:	62 e4       	ldi	r22, 0x42	; 66
     45c:	71 e0       	ldi	r23, 0x01	; 1
     45e:	80 91 62 01 	lds	r24, 0x0162
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	68 d7       	rcall	.+3792   	; 0x1336 <itoa>
			lcd_string(Buffer);
     466:	82 e4       	ldi	r24, 0x42	; 66
     468:	91 e0       	ldi	r25, 0x01	; 1
     46a:	f5 de       	rcall	.-534    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     46c:	87 ec       	ldi	r24, 0xC7	; 199
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	f2 de       	rcall	.-540    	; 0x256 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     472:	4a e0       	ldi	r20, 0x0A	; 10
     474:	50 e0       	ldi	r21, 0x00	; 0
     476:	62 e4       	ldi	r22, 0x42	; 66
     478:	71 e0       	ldi	r23, 0x01	; 1
     47a:	80 91 63 01 	lds	r24, 0x0163
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	5a d7       	rcall	.+3764   	; 0x1336 <itoa>
			lcd_string(Buffer);
     482:	82 e4       	ldi	r24, 0x42	; 66
     484:	91 e0       	ldi	r25, 0x01	; 1
     486:	e7 de       	rcall	.-562    	; 0x256 <_Z10lcd_stringPKc>
			
			break;
     488:	08 95       	ret
		
		case 1:
			itoa( Stunden, Buffer, 10 );
     48a:	4a e0       	ldi	r20, 0x0A	; 10
     48c:	50 e0       	ldi	r21, 0x00	; 0
     48e:	62 e4       	ldi	r22, 0x42	; 66
     490:	71 e0       	ldi	r23, 0x01	; 1
     492:	80 91 62 01 	lds	r24, 0x0162
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	4e d7       	rcall	.+3740   	; 0x1336 <itoa>
			lcd_string(Buffer);
     49a:	82 e4       	ldi	r24, 0x42	; 66
     49c:	91 e0       	ldi	r25, 0x01	; 1
     49e:	db de       	rcall	.-586    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     4a0:	87 ec       	ldi	r24, 0xC7	; 199
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	d8 de       	rcall	.-592    	; 0x256 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     4a6:	4a e0       	ldi	r20, 0x0A	; 10
     4a8:	50 e0       	ldi	r21, 0x00	; 0
     4aa:	62 e4       	ldi	r22, 0x42	; 66
     4ac:	71 e0       	ldi	r23, 0x01	; 1
     4ae:	80 91 63 01 	lds	r24, 0x0163
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	40 d7       	rcall	.+3712   	; 0x1336 <itoa>
			lcd_string(Buffer);
     4b6:	82 e4       	ldi	r24, 0x42	; 66
     4b8:	91 e0       	ldi	r25, 0x01	; 1
     4ba:	cd de       	rcall	.-614    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     4bc:	87 ec       	ldi	r24, 0xC7	; 199
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	ca de       	rcall	.-620    	; 0x256 <_Z10lcd_stringPKc>
			itoa(Sekunden, Buffer,10);
     4c2:	4a e0       	ldi	r20, 0x0A	; 10
     4c4:	50 e0       	ldi	r21, 0x00	; 0
     4c6:	62 e4       	ldi	r22, 0x42	; 66
     4c8:	71 e0       	ldi	r23, 0x01	; 1
     4ca:	80 91 64 01 	lds	r24, 0x0164
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	32 d7       	rcall	.+3684   	; 0x1336 <itoa>
			lcd_string(Buffer);
     4d2:	82 e4       	ldi	r24, 0x42	; 66
     4d4:	91 e0       	ldi	r25, 0x01	; 1
     4d6:	bf de       	rcall	.-642    	; 0x256 <_Z10lcd_stringPKc>
     4d8:	08 95       	ret

000004da <_Z3aushh>:
		default:
		break;
	}
}

void aus(uint8_t zeile, uint8_t pos){
     4da:	0f 93       	push	r16
     4dc:	1f 93       	push	r17
     4de:	cf 93       	push	r28
     4e0:	c6 2f       	mov	r28, r22
	
	switch (zeile)
     4e2:	81 30       	cpi	r24, 0x01	; 1
     4e4:	21 f0       	breq	.+8      	; 0x4ee <_Z3aushh+0x14>
     4e6:	82 30       	cpi	r24, 0x02	; 2
     4e8:	09 f0       	breq	.+2      	; 0x4ec <_Z3aushh+0x12>
     4ea:	72 c0       	rjmp	.+228    	; 0x5d0 <_Z3aushh+0xf6>
     4ec:	59 c0       	rjmp	.+178    	; 0x5a0 <_Z3aushh+0xc6>
	{
		case 1:
			lcd_clear();
     4ee:	61 de       	rcall	.-830    	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     4f0:	97 de       	rcall	.-722    	; 0x220 <_Z8lcd_homev>
			switch (pos)
     4f2:	c3 30       	cpi	r28, 0x03	; 3
     4f4:	11 f1       	breq	.+68     	; 0x53a <_Z3aushh+0x60>
     4f6:	20 f4       	brcc	.+8      	; 0x500 <_Z3aushh+0x26>
     4f8:	c1 30       	cpi	r28, 0x01	; 1
     4fa:	91 f0       	breq	.+36     	; 0x520 <_Z3aushh+0x46>
     4fc:	d0 f4       	brcc	.+52     	; 0x532 <_Z3aushh+0x58>
     4fe:	07 c0       	rjmp	.+14     	; 0x50e <_Z3aushh+0x34>
     500:	c5 30       	cpi	r28, 0x05	; 5
     502:	59 f1       	breq	.+86     	; 0x55a <_Z3aushh+0x80>
     504:	00 f1       	brcs	.+64     	; 0x546 <_Z3aushh+0x6c>
     506:	c6 30       	cpi	r28, 0x06	; 6
     508:	09 f0       	breq	.+2      	; 0x50c <_Z3aushh+0x32>
     50a:	62 c0       	rjmp	.+196    	; 0x5d0 <_Z3aushh+0xf6>
     50c:	43 c0       	rjmp	.+134    	; 0x594 <_Z3aushh+0xba>
			{
				case 0:
					//Alles ohne Sekunden
					wtag(WochenTag);
     50e:	80 91 61 01 	lds	r24, 0x0161
     512:	72 df       	rcall	.-284    	; 0x3f8 <_Z4wtagh>
					lcd_string(" ");
     514:	8e e9       	ldi	r24, 0x9E	; 158
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	9e de       	rcall	.-708    	; 0x256 <_Z10lcd_stringPKc>
					zeitaus(0);
     51a:	80 e0       	ldi	r24, 0x00	; 0
     51c:	96 df       	rcall	.-212    	; 0x44a <_Z7zeitaush>
					
					break;
     51e:	58 c0       	rjmp	.+176    	; 0x5d0 <_Z3aushh+0xf6>
					
				case 1:
					//Alles
					wtag(WochenTag);
     520:	80 91 61 01 	lds	r24, 0x0161
     524:	69 df       	rcall	.-302    	; 0x3f8 <_Z4wtagh>
					lcd_string(" ");
     526:	8e e9       	ldi	r24, 0x9E	; 158
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	95 de       	rcall	.-726    	; 0x256 <_Z10lcd_stringPKc>
					zeitaus(1);
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	8d df       	rcall	.-230    	; 0x44a <_Z7zeitaush>
					
					break;
     530:	4f c0       	rjmp	.+158    	; 0x5d0 <_Z3aushh+0xf6>
				case 2:
					//Nur Kalender
					wtag(WochenTag);
     532:	80 91 61 01 	lds	r24, 0x0161
     536:	60 df       	rcall	.-320    	; 0x3f8 <_Z4wtagh>
					
					break;
     538:	4b c0       	rjmp	.+150    	; 0x5d0 <_Z3aushh+0xf6>
				case 3:
					//Nur Zeit mit Sekunden mit WDAY
					wtag(WochenTag);
     53a:	80 91 61 01 	lds	r24, 0x0161
     53e:	5c df       	rcall	.-328    	; 0x3f8 <_Z4wtagh>
					zeitaus(1);
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	83 df       	rcall	.-250    	; 0x44a <_Z7zeitaush>
					
					break;
     544:	45 c0       	rjmp	.+138    	; 0x5d0 <_Z3aushh+0xf6>
					
				case 4:
					lcd_string("Guten Tag");
     546:	8e e7       	ldi	r24, 0x7E	; 126
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	85 de       	rcall	.-758    	; 0x256 <_Z10lcd_stringPKc>
					lcd_setcursor(0,2);
     54c:	62 e0       	ldi	r22, 0x02	; 2
     54e:	80 e0       	ldi	r24, 0x00	; 0
     550:	6e de       	rcall	.-804    	; 0x22e <_Z13lcd_setcursorhh>
					lcd_string("Wecker start");
     552:	88 e8       	ldi	r24, 0x88	; 136
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	7f de       	rcall	.-770    	; 0x256 <_Z10lcd_stringPKc>
					
					break;
     558:	3b c0       	rjmp	.+118    	; 0x5d0 <_Z3aushh+0xf6>
				
				case 5:
					//Wecker
					lcd_string("Weckzeit: ");
     55a:	85 e9       	ldi	r24, 0x95	; 149
     55c:	90 e0       	ldi	r25, 0x00	; 0
     55e:	7b de       	rcall	.-778    	; 0x256 <_Z10lcd_stringPKc>
					itoa(WStunden[0],Buffer,10);
     560:	4a e0       	ldi	r20, 0x0A	; 10
     562:	50 e0       	ldi	r21, 0x00	; 0
     564:	62 e4       	ldi	r22, 0x42	; 66
     566:	71 e0       	ldi	r23, 0x01	; 1
     568:	80 91 5f 01 	lds	r24, 0x015F
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	e3 d6       	rcall	.+3526   	; 0x1336 <itoa>
					lcd_string(Buffer);
     570:	82 e4       	ldi	r24, 0x42	; 66
     572:	91 e0       	ldi	r25, 0x01	; 1
     574:	70 de       	rcall	.-800    	; 0x256 <_Z10lcd_stringPKc>
					lcd_string(":");
     576:	87 ec       	ldi	r24, 0xC7	; 199
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	6d de       	rcall	.-806    	; 0x256 <_Z10lcd_stringPKc>
					itoa(WMinuten[0],Buffer,10);
     57c:	4a e0       	ldi	r20, 0x0A	; 10
     57e:	50 e0       	ldi	r21, 0x00	; 0
     580:	62 e4       	ldi	r22, 0x42	; 66
     582:	71 e0       	ldi	r23, 0x01	; 1
     584:	80 91 5d 01 	lds	r24, 0x015D
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	d5 d6       	rcall	.+3498   	; 0x1336 <itoa>
					lcd_string(Buffer);
     58c:	82 e4       	ldi	r24, 0x42	; 66
     58e:	91 e0       	ldi	r25, 0x01	; 1
     590:	62 de       	rcall	.-828    	; 0x256 <_Z10lcd_stringPKc>
					
					break;
     592:	1e c0       	rjmp	.+60     	; 0x5d0 <_Z3aushh+0xf6>
					
				case 6:
					//Zeit ohne Sekunden mit WDAY
					wtag(WochenTag);
     594:	80 91 61 01 	lds	r24, 0x0161
     598:	2f df       	rcall	.-418    	; 0x3f8 <_Z4wtagh>
					zeitaus(0);
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	56 df       	rcall	.-340    	; 0x44a <_Z7zeitaush>
					
					break;
     59e:	18 c0       	rjmp	.+48     	; 0x5d0 <_Z3aushh+0xf6>
			}
			break;
			
		case 2:
			lcd_setcursor(0,2);
     5a0:	62 e0       	ldi	r22, 0x02	; 2
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	44 de       	rcall	.-888    	; 0x22e <_Z13lcd_setcursorhh>
				switch (pos)
     5a6:	c1 30       	cpi	r28, 0x01	; 1
     5a8:	99 f4       	brne	.+38     	; 0x5d0 <_Z3aushh+0xf6>
					
						break;
						
					case 1:
						//Temperatur
						dtostrf(tempera,2,2,Buffer);
     5aa:	60 91 57 01 	lds	r22, 0x0157
     5ae:	70 91 58 01 	lds	r23, 0x0158
     5b2:	80 91 59 01 	lds	r24, 0x0159
     5b6:	90 91 5a 01 	lds	r25, 0x015A
     5ba:	02 e4       	ldi	r16, 0x42	; 66
     5bc:	11 e0       	ldi	r17, 0x01	; 1
     5be:	22 e0       	ldi	r18, 0x02	; 2
     5c0:	42 e0       	ldi	r20, 0x02	; 2
     5c2:	99 d6       	rcall	.+3378   	; 0x12f6 <dtostrf>
						lcd_string(Buffer);
     5c4:	c8 01       	movw	r24, r16
     5c6:	47 de       	rcall	.-882    	; 0x256 <_Z10lcd_stringPKc>
						lcd_data(0b11011111); //°
     5c8:	8f ed       	ldi	r24, 0xDF	; 223
     5ca:	d7 dd       	rcall	.-1106   	; 0x17a <_Z8lcd_datah>
						lcd_data(0b01000011); //C
     5cc:	83 e4       	ldi	r24, 0x43	; 67
     5ce:	d5 dd       	rcall	.-1110   	; 0x17a <_Z8lcd_datah>
						
						break;
				}
			break;
	}
}
     5d0:	cf 91       	pop	r28
     5d2:	1f 91       	pop	r17
     5d4:	0f 91       	pop	r16
     5d6:	08 95       	ret

000005d8 <_Z8erhoehenPhhhPKc>:
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     5d8:	cf 93       	push	r28
     5da:	df 93       	push	r29
     5dc:	e9 01       	movw	r28, r18

#endif /* DEFINITIONEN_H_ */

inline uint8_t debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( !(*port & (1 << pin)) )
     5de:	82 99       	sbic	0x10, 2	; 16
     5e0:	25 c0       	rjmp	.+74     	; 0x62c <_Z8erhoehenPhhhPKc+0x54>
     5e2:	ef ef       	ldi	r30, 0xFF	; 255
     5e4:	f3 eb       	ldi	r31, 0xB3	; 179
     5e6:	31 97       	sbiw	r30, 0x01	; 1
     5e8:	f1 f7       	brne	.-4      	; 0x5e6 <_Z8erhoehenPhhhPKc+0xe>
     5ea:	00 c0       	rjmp	.+0      	; 0x5ec <_Z8erhoehenPhhhPKc+0x14>
     5ec:	00 00       	nop
     5ee:	ef ef       	ldi	r30, 0xFF	; 255
     5f0:	f3 e2       	ldi	r31, 0x23	; 35
     5f2:	31 97       	sbiw	r30, 0x01	; 1
     5f4:	f1 f7       	brne	.-4      	; 0x5f2 <_Z8erhoehenPhhhPKc+0x1a>
     5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <_Z8erhoehenPhhhPKc+0x20>
     5f8:	00 00       	nop
	if(debounce(&PIND,2))
     5fa:	82 99       	sbic	0x10, 2	; 16
     5fc:	17 c0       	rjmp	.+46     	; 0x62c <_Z8erhoehenPhhhPKc+0x54>
	{
		*var +=1 ;
     5fe:	fc 01       	movw	r30, r24
     600:	20 81       	ld	r18, Z
     602:	2f 5f       	subi	r18, 0xFF	; 255
		if(*var>=obergrenze){
     604:	26 17       	cp	r18, r22
     606:	10 f4       	brcc	.+4      	; 0x60c <_Z8erhoehenPhhhPKc+0x34>
//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
	if(debounce(&PIND,2))
	{
		*var +=1 ;
     608:	20 83       	st	Z, r18
     60a:	02 c0       	rjmp	.+4      	; 0x610 <_Z8erhoehenPhhhPKc+0x38>
		if(*var>=obergrenze){
			*var=0;
     60c:	fc 01       	movw	r30, r24
     60e:	10 82       	st	Z, r1
		}
		aus(1,pos);
     610:	64 2f       	mov	r22, r20
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	62 df       	rcall	.-316    	; 0x4da <_Z3aushh>
		aus(2,0);
     616:	60 e0       	ldi	r22, 0x00	; 0
     618:	82 e0       	ldi	r24, 0x02	; 2
     61a:	5f df       	rcall	.-322    	; 0x4da <_Z3aushh>
		while( *data != '\0' )
     61c:	88 81       	ld	r24, Y
     61e:	88 23       	and	r24, r24
     620:	29 f0       	breq	.+10     	; 0x62c <_Z8erhoehenPhhhPKc+0x54>
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     622:	21 96       	adiw	r28, 0x01	; 1
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
		lcd_data( *data++ );
     624:	aa dd       	rcall	.-1196   	; 0x17a <_Z8lcd_datah>
		if(*var>=obergrenze){
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
     626:	89 91       	ld	r24, Y+
     628:	81 11       	cpse	r24, r1
     62a:	fc cf       	rjmp	.-8      	; 0x624 <_Z8erhoehenPhhhPKc+0x4c>
		lcd_data( *data++ );
		
	}
}
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	08 95       	ret

00000632 <_Z5einsth>:


//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
     632:	1f 93       	push	r17
     634:	cf 93       	push	r28
     636:	df 93       	push	r29
	uint8_t temp=0;
	//abfrage wass eingestellt werden soll
	switch (posit)
     638:	82 30       	cpi	r24, 0x02	; 2
     63a:	09 f4       	brne	.+2      	; 0x63e <_Z5einsth+0xc>
     63c:	b7 c0       	rjmp	.+366    	; 0x7ac <_Z5einsth+0x17a>
     63e:	30 f4       	brcc	.+12     	; 0x64c <_Z5einsth+0x1a>
     640:	88 23       	and	r24, r24
     642:	69 f0       	breq	.+26     	; 0x65e <_Z5einsth+0x2c>
     644:	81 30       	cpi	r24, 0x01	; 1
     646:	09 f0       	breq	.+2      	; 0x64a <_Z5einsth+0x18>
     648:	f3 c1       	rjmp	.+998    	; 0xa30 <_Z5einsth+0x3fe>
     64a:	65 c0       	rjmp	.+202    	; 0x716 <_Z5einsth+0xe4>
     64c:	84 30       	cpi	r24, 0x04	; 4
     64e:	09 f4       	brne	.+2      	; 0x652 <_Z5einsth+0x20>
     650:	4b c1       	rjmp	.+662    	; 0x8e8 <_Z5einsth+0x2b6>
     652:	08 f4       	brcc	.+2      	; 0x656 <_Z5einsth+0x24>
     654:	fa c0       	rjmp	.+500    	; 0x84a <_Z5einsth+0x218>
     656:	85 30       	cpi	r24, 0x05	; 5
     658:	09 f0       	breq	.+2      	; 0x65c <_Z5einsth+0x2a>
     65a:	ea c1       	rjmp	.+980    	; 0xa30 <_Z5einsth+0x3fe>
     65c:	97 c1       	rjmp	.+814    	; 0x98c <_Z5einsth+0x35a>
	{
	case 0:
		//Einstellen Zeit
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,6);
     65e:	66 e0       	ldi	r22, 0x06	; 6
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	3b df       	rcall	.-394    	; 0x4da <_Z3aushh>
		aus(2,0);
     664:	60 e0       	ldi	r22, 0x00	; 0
     666:	82 e0       	ldi	r24, 0x02	; 2
     668:	38 df       	rcall	.-400    	; 0x4da <_Z3aushh>
		lcd_string(NAME(Stunden));
     66a:	80 ea       	ldi	r24, 0xA0	; 160
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	f3 dd       	rcall	.-1050   	; 0x256 <_Z10lcd_stringPKc>

//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
	uint8_t temp=0;
     670:	c0 e0       	ldi	r28, 0x00	; 0
     672:	83 99       	sbic	0x10, 3	; 16
     674:	28 c0       	rjmp	.+80     	; 0x6c6 <_Z5einsth+0x94>
     676:	8f ef       	ldi	r24, 0xFF	; 255
     678:	93 eb       	ldi	r25, 0xB3	; 179
     67a:	01 97       	sbiw	r24, 0x01	; 1
     67c:	f1 f7       	brne	.-4      	; 0x67a <_Z5einsth+0x48>
     67e:	00 c0       	rjmp	.+0      	; 0x680 <_Z5einsth+0x4e>
     680:	00 00       	nop
     682:	8f ef       	ldi	r24, 0xFF	; 255
     684:	93 e2       	ldi	r25, 0x23	; 35
     686:	01 97       	sbiw	r24, 0x01	; 1
     688:	f1 f7       	brne	.-4      	; 0x686 <_Z5einsth+0x54>
     68a:	00 c0       	rjmp	.+0      	; 0x68c <_Z5einsth+0x5a>
     68c:	00 00       	nop
		aus(1,6);
		aus(2,0);
		lcd_string(NAME(Stunden));
		while(temp<3)
		{
			if(debounce(&PIND,3))
     68e:	83 99       	sbic	0x10, 3	; 16
     690:	1a c0       	rjmp	.+52     	; 0x6c6 <_Z5einsth+0x94>
			{
				temp++;
     692:	cf 5f       	subi	r28, 0xFF	; 255
				lcd_clear();
     694:	8e dd       	rcall	.-1252   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,6);
     696:	66 e0       	ldi	r22, 0x06	; 6
     698:	81 e0       	ldi	r24, 0x01	; 1
     69a:	1f df       	rcall	.-450    	; 0x4da <_Z3aushh>
				aus(2,0);
     69c:	60 e0       	ldi	r22, 0x00	; 0
     69e:	82 e0       	ldi	r24, 0x02	; 2
     6a0:	1c df       	rcall	.-456    	; 0x4da <_Z3aushh>
				switch (temp)
     6a2:	c1 30       	cpi	r28, 0x01	; 1
     6a4:	41 f0       	breq	.+16     	; 0x6b6 <_Z5einsth+0x84>
     6a6:	18 f0       	brcs	.+6      	; 0x6ae <_Z5einsth+0x7c>
     6a8:	c2 30       	cpi	r28, 0x02	; 2
     6aa:	69 f4       	brne	.+26     	; 0x6c6 <_Z5einsth+0x94>
     6ac:	08 c0       	rjmp	.+16     	; 0x6be <_Z5einsth+0x8c>
				{
					case 0:
						lcd_string(NAME(Stunden));
     6ae:	80 ea       	ldi	r24, 0xA0	; 160
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	d1 dd       	rcall	.-1118   	; 0x256 <_Z10lcd_stringPKc>
     6b4:	0e c0       	rjmp	.+28     	; 0x6d2 <_Z5einsth+0xa0>
						break;
					case 1:
						lcd_string(NAME(Minuten));
     6b6:	88 ea       	ldi	r24, 0xA8	; 168
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	cd dd       	rcall	.-1126   	; 0x256 <_Z10lcd_stringPKc>
     6bc:	13 c0       	rjmp	.+38     	; 0x6e4 <_Z5einsth+0xb2>
						break;
					case 2:
						lcd_string(NAME(WochenTag));
     6be:	80 eb       	ldi	r24, 0xB0	; 176
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	c9 dd       	rcall	.-1134   	; 0x256 <_Z10lcd_stringPKc>
     6c4:	18 c0       	rjmp	.+48     	; 0x6f6 <_Z5einsth+0xc4>
				zeit();
				//ausgabe(0);
				//Es muss eine richtge Ausgabe speziell fuer dieses Einstellung geschrieben werden
				//besonders wichtig ist, dass die alte Ausgaba ersetzt werden muss
			}*/
			switch (temp)
     6c6:	c1 30       	cpi	r28, 0x01	; 1
     6c8:	69 f0       	breq	.+26     	; 0x6e4 <_Z5einsth+0xb2>
     6ca:	18 f0       	brcs	.+6      	; 0x6d2 <_Z5einsth+0xa0>
     6cc:	c2 30       	cpi	r28, 0x02	; 2
     6ce:	e1 f4       	brne	.+56     	; 0x708 <_Z5einsth+0xd6>
     6d0:	12 c0       	rjmp	.+36     	; 0x6f6 <_Z5einsth+0xc4>
			{
			case 0:
				erhoehen(&Stunden,60,6,NAME(Stunden));
     6d2:	20 ea       	ldi	r18, 0xA0	; 160
     6d4:	30 e0       	ldi	r19, 0x00	; 0
     6d6:	46 e0       	ldi	r20, 0x06	; 6
     6d8:	6c e3       	ldi	r22, 0x3C	; 60
     6da:	82 e6       	ldi	r24, 0x62	; 98
     6dc:	91 e0       	ldi	r25, 0x01	; 1
     6de:	7c df       	rcall	.-264    	; 0x5d8 <_Z8erhoehenPhhhPKc>
				break;
     6e0:	c0 e0       	ldi	r28, 0x00	; 0
     6e2:	c7 cf       	rjmp	.-114    	; 0x672 <_Z5einsth+0x40>
			case 1:
				erhoehen(&Minuten,60,6,NAME(Minuten));
     6e4:	28 ea       	ldi	r18, 0xA8	; 168
     6e6:	30 e0       	ldi	r19, 0x00	; 0
     6e8:	46 e0       	ldi	r20, 0x06	; 6
     6ea:	6c e3       	ldi	r22, 0x3C	; 60
     6ec:	83 e6       	ldi	r24, 0x63	; 99
     6ee:	91 e0       	ldi	r25, 0x01	; 1
     6f0:	73 df       	rcall	.-282    	; 0x5d8 <_Z8erhoehenPhhhPKc>
				break;
     6f2:	c1 e0       	ldi	r28, 0x01	; 1
     6f4:	be cf       	rjmp	.-132    	; 0x672 <_Z5einsth+0x40>
			case 2:
				//nur jetzt WochenTag
				erhoehen(&WochenTag,7,6,NAME(WochenTag));
     6f6:	20 eb       	ldi	r18, 0xB0	; 176
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	46 e0       	ldi	r20, 0x06	; 6
     6fc:	67 e0       	ldi	r22, 0x07	; 7
     6fe:	81 e6       	ldi	r24, 0x61	; 97
     700:	91 e0       	ldi	r25, 0x01	; 1
     702:	6a df       	rcall	.-300    	; 0x5d8 <_Z8erhoehenPhhhPKc>
				break;
     704:	c2 e0       	ldi	r28, 0x02	; 2
     706:	b5 cf       	rjmp	.-150    	; 0x672 <_Z5einsth+0x40>
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,6);
		aus(2,0);
		lcd_string(NAME(Stunden));
		while(temp<3)
     708:	c3 30       	cpi	r28, 0x03	; 3
     70a:	08 f4       	brcc	.+2      	; 0x70e <_Z5einsth+0xdc>
     70c:	b2 cf       	rjmp	.-156    	; 0x672 <_Z5einsth+0x40>
				break;
			default:
				break;
			}
		}
		Sekunden=0;
     70e:	10 92 64 01 	sts	0x0164, r1
		return 0;
     712:	80 e0       	ldi	r24, 0x00	; 0
     714:	a0 c1       	rjmp	.+832    	; 0xa56 <_Z5einsth+0x424>
		break;
	case 1:
		//Einstellen der Lampenstärke
		//default=1
		temp = 0;
		lcd_clear();
     716:	4d dd       	rcall	.-1382   	; 0x1b2 <_Z9lcd_clearv>
		lcd_home();
     718:	83 dd       	rcall	.-1274   	; 0x220 <_Z8lcd_homev>
		lcd_string("Lampenstärke:");
     71a:	8a eb       	ldi	r24, 0xBA	; 186
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	9b dd       	rcall	.-1226   	; 0x256 <_Z10lcd_stringPKc>
		aus(2,0);
     720:	60 e0       	ldi	r22, 0x00	; 0
     722:	82 e0       	ldi	r24, 0x02	; 2
     724:	da de       	rcall	.-588    	; 0x4da <_Z3aushh>
		itoa(lampenstaerke,Buffer,10);
     726:	4a e0       	ldi	r20, 0x0A	; 10
     728:	50 e0       	ldi	r21, 0x00	; 0
     72a:	62 e4       	ldi	r22, 0x42	; 66
     72c:	71 e0       	ldi	r23, 0x01	; 1
     72e:	80 91 60 00 	lds	r24, 0x0060
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	00 d6       	rcall	.+3072   	; 0x1336 <itoa>
		lcd_string(Buffer);
     736:	82 e4       	ldi	r24, 0x42	; 66
     738:	91 e0       	ldi	r25, 0x01	; 1
     73a:	8d dd       	rcall	.-1254   	; 0x256 <_Z10lcd_stringPKc>
		if(Sekunden!=sektemp){
     73c:	90 91 64 01 	lds	r25, 0x0164
     740:	80 91 5b 01 	lds	r24, 0x015B
     744:	98 13       	cpse	r25, r24
			zeit();
     746:	26 de       	rcall	.-948    	; 0x394 <_Z4zeitv>
     748:	82 99       	sbic	0x10, 2	; 16
     74a:	74 c1       	rjmp	.+744    	; 0xa34 <_Z5einsth+0x402>
     74c:	8f ef       	ldi	r24, 0xFF	; 255
     74e:	93 eb       	ldi	r25, 0xB3	; 179
     750:	01 97       	sbiw	r24, 0x01	; 1
     752:	f1 f7       	brne	.-4      	; 0x750 <_Z5einsth+0x11e>
     754:	00 c0       	rjmp	.+0      	; 0x756 <_Z5einsth+0x124>
     756:	00 00       	nop
     758:	8f ef       	ldi	r24, 0xFF	; 255
     75a:	93 e2       	ldi	r25, 0x23	; 35
     75c:	01 97       	sbiw	r24, 0x01	; 1
     75e:	f1 f7       	brne	.-4      	; 0x75c <_Z5einsth+0x12a>
     760:	00 c0       	rjmp	.+0      	; 0x762 <_Z5einsth+0x130>
     762:	00 00       	nop
		}
		if(debounce(&PIND,2))
     764:	82 99       	sbic	0x10, 2	; 16
     766:	68 c1       	rjmp	.+720    	; 0xa38 <_Z5einsth+0x406>
		{
			lampenstaerke++;
     768:	80 91 60 00 	lds	r24, 0x0060
     76c:	8f 5f       	subi	r24, 0xFF	; 255
     76e:	80 93 60 00 	sts	0x0060, r24
			lcd_clear();
     772:	1f dd       	rcall	.-1474   	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     774:	55 dd       	rcall	.-1366   	; 0x220 <_Z8lcd_homev>
			lcd_string("Lampenstärke:");
     776:	8a eb       	ldi	r24, 0xBA	; 186
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	6d dd       	rcall	.-1318   	; 0x256 <_Z10lcd_stringPKc>
			aus(2,0);
     77c:	60 e0       	ldi	r22, 0x00	; 0
     77e:	82 e0       	ldi	r24, 0x02	; 2
     780:	ac de       	rcall	.-680    	; 0x4da <_Z3aushh>
			itoa(lampenstaerke,Buffer,10);
     782:	4a e0       	ldi	r20, 0x0A	; 10
     784:	50 e0       	ldi	r21, 0x00	; 0
     786:	62 e4       	ldi	r22, 0x42	; 66
     788:	71 e0       	ldi	r23, 0x01	; 1
     78a:	80 91 60 00 	lds	r24, 0x0060
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	d2 d5       	rcall	.+2980   	; 0x1336 <itoa>
			lcd_string(Buffer);
     792:	82 e4       	ldi	r24, 0x42	; 66
     794:	91 e0       	ldi	r25, 0x01	; 1
     796:	5f dd       	rcall	.-1346   	; 0x256 <_Z10lcd_stringPKc>
			
			if (lampenstaerke>=3)
     798:	80 91 60 00 	lds	r24, 0x0060
     79c:	83 30       	cpi	r24, 0x03	; 3
     79e:	08 f4       	brcc	.+2      	; 0x7a2 <_Z5einsth+0x170>
     7a0:	4d c1       	rjmp	.+666    	; 0xa3c <_Z5einsth+0x40a>
			{
				lampenstaerke=1;
     7a2:	81 e0       	ldi	r24, 0x01	; 1
     7a4:	80 93 60 00 	sts	0x0060, r24
			}
			
		}
		return 0;
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	55 c1       	rjmp	.+682    	; 0xa56 <_Z5einsth+0x424>
		break;
	case 2:
		//Einstellen Sekundenoffset
		//default =0
		lcd_clear();
     7ac:	02 dd       	rcall	.-1532   	; 0x1b2 <_Z9lcd_clearv>
		lcd_home();
     7ae:	38 dd       	rcall	.-1424   	; 0x220 <_Z8lcd_homev>
		lcd_string("Sekundenoffset:");
     7b0:	89 ec       	ldi	r24, 0xC9	; 201
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	50 dd       	rcall	.-1376   	; 0x256 <_Z10lcd_stringPKc>
		aus(2,0);
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	82 e0       	ldi	r24, 0x02	; 2
     7ba:	8f de       	rcall	.-738    	; 0x4da <_Z3aushh>
		itoa(sekoffset,Buffer,10);
     7bc:	80 91 56 01 	lds	r24, 0x0156
     7c0:	4a e0       	ldi	r20, 0x0A	; 10
     7c2:	50 e0       	ldi	r21, 0x00	; 0
     7c4:	62 e4       	ldi	r22, 0x42	; 66
     7c6:	71 e0       	ldi	r23, 0x01	; 1
     7c8:	99 27       	eor	r25, r25
     7ca:	87 fd       	sbrc	r24, 7
     7cc:	90 95       	com	r25
     7ce:	b3 d5       	rcall	.+2918   	; 0x1336 <itoa>
		lcd_string(Buffer);
     7d0:	82 e4       	ldi	r24, 0x42	; 66
     7d2:	91 e0       	ldi	r25, 0x01	; 1
     7d4:	40 dd       	rcall	.-1408   	; 0x256 <_Z10lcd_stringPKc>
		if(Sekunden!=sektemp){
     7d6:	90 91 64 01 	lds	r25, 0x0164
     7da:	80 91 5b 01 	lds	r24, 0x015B
     7de:	98 13       	cpse	r25, r24
			zeit();
     7e0:	d9 dd       	rcall	.-1102   	; 0x394 <_Z4zeitv>
     7e2:	82 99       	sbic	0x10, 2	; 16
     7e4:	2d c1       	rjmp	.+602    	; 0xa40 <_Z5einsth+0x40e>
     7e6:	8f ef       	ldi	r24, 0xFF	; 255
     7e8:	93 eb       	ldi	r25, 0xB3	; 179
     7ea:	01 97       	sbiw	r24, 0x01	; 1
     7ec:	f1 f7       	brne	.-4      	; 0x7ea <_Z5einsth+0x1b8>
     7ee:	00 c0       	rjmp	.+0      	; 0x7f0 <_Z5einsth+0x1be>
     7f0:	00 00       	nop
     7f2:	8f ef       	ldi	r24, 0xFF	; 255
     7f4:	93 e2       	ldi	r25, 0x23	; 35
     7f6:	01 97       	sbiw	r24, 0x01	; 1
     7f8:	f1 f7       	brne	.-4      	; 0x7f6 <_Z5einsth+0x1c4>
     7fa:	00 c0       	rjmp	.+0      	; 0x7fc <_Z5einsth+0x1ca>
     7fc:	00 00       	nop
		}
		if(debounce(&PIND,2))
     7fe:	82 99       	sbic	0x10, 2	; 16
     800:	21 c1       	rjmp	.+578    	; 0xa44 <_Z5einsth+0x412>
		{
			sekoffset++;
     802:	80 91 56 01 	lds	r24, 0x0156
     806:	8f 5f       	subi	r24, 0xFF	; 255
     808:	80 93 56 01 	sts	0x0156, r24
			lcd_clear();
     80c:	d2 dc       	rcall	.-1628   	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     80e:	08 dd       	rcall	.-1520   	; 0x220 <_Z8lcd_homev>
			lcd_string("Sekundenoffset:");
     810:	89 ec       	ldi	r24, 0xC9	; 201
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	20 dd       	rcall	.-1472   	; 0x256 <_Z10lcd_stringPKc>
			aus(2,0);
     816:	60 e0       	ldi	r22, 0x00	; 0
     818:	82 e0       	ldi	r24, 0x02	; 2
     81a:	5f de       	rcall	.-834    	; 0x4da <_Z3aushh>
			itoa(sekoffset,Buffer,10);
     81c:	80 91 56 01 	lds	r24, 0x0156
     820:	4a e0       	ldi	r20, 0x0A	; 10
     822:	50 e0       	ldi	r21, 0x00	; 0
     824:	62 e4       	ldi	r22, 0x42	; 66
     826:	71 e0       	ldi	r23, 0x01	; 1
     828:	99 27       	eor	r25, r25
     82a:	87 fd       	sbrc	r24, 7
     82c:	90 95       	com	r25
     82e:	83 d5       	rcall	.+2822   	; 0x1336 <itoa>
			lcd_string(Buffer);
     830:	82 e4       	ldi	r24, 0x42	; 66
     832:	91 e0       	ldi	r25, 0x01	; 1
     834:	10 dd       	rcall	.-1504   	; 0x256 <_Z10lcd_stringPKc>
			
			if (sekoffset>=5)
     836:	80 91 56 01 	lds	r24, 0x0156
     83a:	85 30       	cpi	r24, 0x05	; 5
     83c:	0c f4       	brge	.+2      	; 0x840 <_Z5einsth+0x20e>
     83e:	04 c1       	rjmp	.+520    	; 0xa48 <_Z5einsth+0x416>
			{
				sekoffset=-5;
     840:	8b ef       	ldi	r24, 0xFB	; 251
     842:	80 93 56 01 	sts	0x0156, r24
			}
				
		}
		
		return 0;
     846:	80 e0       	ldi	r24, 0x00	; 0
     848:	06 c1       	rjmp	.+524    	; 0xa56 <_Z5einsth+0x424>
		break;
	case 3:
		//Einstellen Temperaturoffset
		//default = 0;
		lcd_clear();
     84a:	b3 dc       	rcall	.-1690   	; 0x1b2 <_Z9lcd_clearv>
		lcd_home();
     84c:	e9 dc       	rcall	.-1582   	; 0x220 <_Z8lcd_homev>
		lcd_string("Temperaturoffset:");
     84e:	89 ed       	ldi	r24, 0xD9	; 217
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	01 dd       	rcall	.-1534   	; 0x256 <_Z10lcd_stringPKc>
		aus(2,0);
     854:	60 e0       	ldi	r22, 0x00	; 0
     856:	82 e0       	ldi	r24, 0x02	; 2
     858:	40 de       	rcall	.-896    	; 0x4da <_Z3aushh>
		itoa(tempoffset,Buffer,10);
     85a:	80 91 61 00 	lds	r24, 0x0061
     85e:	4a e0       	ldi	r20, 0x0A	; 10
     860:	50 e0       	ldi	r21, 0x00	; 0
     862:	62 e4       	ldi	r22, 0x42	; 66
     864:	71 e0       	ldi	r23, 0x01	; 1
     866:	99 27       	eor	r25, r25
     868:	87 fd       	sbrc	r24, 7
     86a:	90 95       	com	r25
     86c:	64 d5       	rcall	.+2760   	; 0x1336 <itoa>
		lcd_string(Buffer);
     86e:	82 e4       	ldi	r24, 0x42	; 66
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	f1 dc       	rcall	.-1566   	; 0x256 <_Z10lcd_stringPKc>
		
		if(Sekunden!=sektemp){
     874:	90 91 64 01 	lds	r25, 0x0164
     878:	80 91 5b 01 	lds	r24, 0x015B
     87c:	98 13       	cpse	r25, r24
			zeit();
     87e:	8a dd       	rcall	.-1260   	; 0x394 <_Z4zeitv>
     880:	82 99       	sbic	0x10, 2	; 16
     882:	e4 c0       	rjmp	.+456    	; 0xa4c <_Z5einsth+0x41a>
     884:	8f ef       	ldi	r24, 0xFF	; 255
     886:	93 eb       	ldi	r25, 0xB3	; 179
     888:	01 97       	sbiw	r24, 0x01	; 1
     88a:	f1 f7       	brne	.-4      	; 0x888 <_Z5einsth+0x256>
     88c:	00 c0       	rjmp	.+0      	; 0x88e <_Z5einsth+0x25c>
     88e:	00 00       	nop
     890:	8f ef       	ldi	r24, 0xFF	; 255
     892:	93 e2       	ldi	r25, 0x23	; 35
     894:	01 97       	sbiw	r24, 0x01	; 1
     896:	f1 f7       	brne	.-4      	; 0x894 <_Z5einsth+0x262>
     898:	00 c0       	rjmp	.+0      	; 0x89a <_Z5einsth+0x268>
     89a:	00 00       	nop
		}
		if(debounce(&PIND,2))
     89c:	82 99       	sbic	0x10, 2	; 16
     89e:	d8 c0       	rjmp	.+432    	; 0xa50 <_Z5einsth+0x41e>
		{
			tempoffset++;
     8a0:	80 91 61 00 	lds	r24, 0x0061
     8a4:	8f 5f       	subi	r24, 0xFF	; 255
     8a6:	80 93 61 00 	sts	0x0061, r24
			lcd_clear();
     8aa:	83 dc       	rcall	.-1786   	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     8ac:	b9 dc       	rcall	.-1678   	; 0x220 <_Z8lcd_homev>
			lcd_string("Temperaturoffset:");
     8ae:	89 ed       	ldi	r24, 0xD9	; 217
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	d1 dc       	rcall	.-1630   	; 0x256 <_Z10lcd_stringPKc>
			aus(2,0);
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	82 e0       	ldi	r24, 0x02	; 2
     8b8:	10 de       	rcall	.-992    	; 0x4da <_Z3aushh>
			itoa(tempoffset,Buffer,10);
     8ba:	80 91 61 00 	lds	r24, 0x0061
     8be:	4a e0       	ldi	r20, 0x0A	; 10
     8c0:	50 e0       	ldi	r21, 0x00	; 0
     8c2:	62 e4       	ldi	r22, 0x42	; 66
     8c4:	71 e0       	ldi	r23, 0x01	; 1
     8c6:	99 27       	eor	r25, r25
     8c8:	87 fd       	sbrc	r24, 7
     8ca:	90 95       	com	r25
     8cc:	34 d5       	rcall	.+2664   	; 0x1336 <itoa>
			lcd_string(Buffer);
     8ce:	82 e4       	ldi	r24, 0x42	; 66
     8d0:	91 e0       	ldi	r25, 0x01	; 1
     8d2:	c1 dc       	rcall	.-1662   	; 0x256 <_Z10lcd_stringPKc>
			
			if (tempoffset>=10)
     8d4:	80 91 61 00 	lds	r24, 0x0061
     8d8:	8a 30       	cpi	r24, 0x0A	; 10
     8da:	0c f4       	brge	.+2      	; 0x8de <_Z5einsth+0x2ac>
     8dc:	bb c0       	rjmp	.+374    	; 0xa54 <_Z5einsth+0x422>
			{
				tempoffset=-10;
     8de:	86 ef       	ldi	r24, 0xF6	; 246
     8e0:	80 93 61 00 	sts	0x0061, r24
			}
			
		}
		
		return 0;
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	b7 c0       	rjmp	.+366    	; 0xa56 <_Z5einsth+0x424>
		break;
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
     8e8:	65 e0       	ldi	r22, 0x05	; 5
     8ea:	81 e0       	ldi	r24, 0x01	; 1
     8ec:	f6 dd       	rcall	.-1044   	; 0x4da <_Z3aushh>
		aus(2,0);
     8ee:	60 e0       	ldi	r22, 0x00	; 0
     8f0:	82 e0       	ldi	r24, 0x02	; 2
     8f2:	f3 dd       	rcall	.-1050   	; 0x4da <_Z3aushh>
		lcd_string(NAME(WStunden[0]));
     8f4:	8b ee       	ldi	r24, 0xEB	; 235
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	ae dc       	rcall	.-1700   	; 0x256 <_Z10lcd_stringPKc>
		}
		
		return 0;
		break;
	case 4: //Wecker einstellen
		temp = 0;
     8fa:	c0 e0       	ldi	r28, 0x00	; 0
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
					break;
				case 1:
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
					break;
     8fc:	11 e0       	ldi	r17, 0x01	; 1
			}
			switch (temp)
			{
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
					break;
     8fe:	d0 e0       	ldi	r29, 0x00	; 0
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[0]));
		while (temp<2)
		{
			if (Sekunden!=sektemp)
     900:	20 91 64 01 	lds	r18, 0x0164
     904:	90 91 5b 01 	lds	r25, 0x015B
     908:	29 13       	cpse	r18, r25
			{
				zeit();
     90a:	44 dd       	rcall	.-1400   	; 0x394 <_Z4zeitv>
     90c:	83 99       	sbic	0x10, 3	; 16
     90e:	22 c0       	rjmp	.+68     	; 0x954 <_Z5einsth+0x322>
     910:	8f ef       	ldi	r24, 0xFF	; 255
     912:	93 eb       	ldi	r25, 0xB3	; 179
     914:	01 97       	sbiw	r24, 0x01	; 1
     916:	f1 f7       	brne	.-4      	; 0x914 <_Z5einsth+0x2e2>
     918:	00 c0       	rjmp	.+0      	; 0x91a <_Z5einsth+0x2e8>
     91a:	00 00       	nop
     91c:	8f ef       	ldi	r24, 0xFF	; 255
     91e:	93 e2       	ldi	r25, 0x23	; 35
     920:	01 97       	sbiw	r24, 0x01	; 1
     922:	f1 f7       	brne	.-4      	; 0x920 <_Z5einsth+0x2ee>
     924:	00 c0       	rjmp	.+0      	; 0x926 <_Z5einsth+0x2f4>
     926:	00 00       	nop
			}
			if(debounce(&PIND,3))
     928:	83 99       	sbic	0x10, 3	; 16
     92a:	14 c0       	rjmp	.+40     	; 0x954 <_Z5einsth+0x322>
			{
				temp++;
     92c:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,5);
     92e:	65 e0       	ldi	r22, 0x05	; 5
     930:	81 2f       	mov	r24, r17
     932:	d3 dd       	rcall	.-1114   	; 0x4da <_Z3aushh>
				aus(2,0);
     934:	6d 2f       	mov	r22, r29
     936:	82 e0       	ldi	r24, 0x02	; 2
     938:	d0 dd       	rcall	.-1120   	; 0x4da <_Z3aushh>
				switch (temp)
     93a:	cc 23       	and	r28, r28
     93c:	19 f0       	breq	.+6      	; 0x944 <_Z5einsth+0x312>
     93e:	c1 30       	cpi	r28, 0x01	; 1
     940:	49 f4       	brne	.+18     	; 0x954 <_Z5einsth+0x322>
     942:	04 c0       	rjmp	.+8      	; 0x94c <_Z5einsth+0x31a>
				{
					case 0:
						lcd_string(NAME(WStunden[0]));
     944:	8b ee       	ldi	r24, 0xEB	; 235
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	86 dc       	rcall	.-1780   	; 0x256 <_Z10lcd_stringPKc>
     94a:	09 c0       	rjmp	.+18     	; 0x95e <_Z5einsth+0x32c>
						break;
					case 1:
						lcd_string(NAME(WMinuten[0]));
     94c:	87 ef       	ldi	r24, 0xF7	; 247
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	82 dc       	rcall	.-1788   	; 0x256 <_Z10lcd_stringPKc>
     952:	0e c0       	rjmp	.+28     	; 0x970 <_Z5einsth+0x33e>
						break;
					default:
						break;
				}
			}
			switch (temp)
     954:	cc 23       	and	r28, r28
     956:	19 f0       	breq	.+6      	; 0x95e <_Z5einsth+0x32c>
     958:	c1 30       	cpi	r28, 0x01	; 1
     95a:	99 f4       	brne	.+38     	; 0x982 <_Z5einsth+0x350>
     95c:	09 c0       	rjmp	.+18     	; 0x970 <_Z5einsth+0x33e>
			{
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
     95e:	2b ee       	ldi	r18, 0xEB	; 235
     960:	30 e0       	ldi	r19, 0x00	; 0
     962:	45 e0       	ldi	r20, 0x05	; 5
     964:	68 e1       	ldi	r22, 0x18	; 24
     966:	8f e5       	ldi	r24, 0x5F	; 95
     968:	91 e0       	ldi	r25, 0x01	; 1
     96a:	36 de       	rcall	.-916    	; 0x5d8 <_Z8erhoehenPhhhPKc>
					break;
     96c:	cd 2f       	mov	r28, r29
     96e:	c8 cf       	rjmp	.-112    	; 0x900 <_Z5einsth+0x2ce>
				case 1:
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
     970:	27 ef       	ldi	r18, 0xF7	; 247
     972:	30 e0       	ldi	r19, 0x00	; 0
     974:	45 e0       	ldi	r20, 0x05	; 5
     976:	6c e3       	ldi	r22, 0x3C	; 60
     978:	8d e5       	ldi	r24, 0x5D	; 93
     97a:	91 e0       	ldi	r25, 0x01	; 1
     97c:	2d de       	rcall	.-934    	; 0x5d8 <_Z8erhoehenPhhhPKc>
					break;
     97e:	c1 2f       	mov	r28, r17
     980:	bf cf       	rjmp	.-130    	; 0x900 <_Z5einsth+0x2ce>
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[0]));
		while (temp<2)
     982:	c2 30       	cpi	r28, 0x02	; 2
     984:	08 f4       	brcc	.+2      	; 0x988 <_Z5einsth+0x356>
     986:	bc cf       	rjmp	.-136    	; 0x900 <_Z5einsth+0x2ce>
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
					break;
			}
			
		}
		return 0;
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	65 c0       	rjmp	.+202    	; 0xa56 <_Z5einsth+0x424>
		break;

	case 5:
		temp = 0;
		aus(1,5);
     98c:	65 e0       	ldi	r22, 0x05	; 5
     98e:	81 e0       	ldi	r24, 0x01	; 1
     990:	a4 dd       	rcall	.-1208   	; 0x4da <_Z3aushh>
		aus(2,0);
     992:	60 e0       	ldi	r22, 0x00	; 0
     994:	82 e0       	ldi	r24, 0x02	; 2
     996:	a1 dd       	rcall	.-1214   	; 0x4da <_Z3aushh>
		lcd_string(NAME(WStunden[1]));
     998:	83 e0       	ldi	r24, 0x03	; 3
     99a:	91 e0       	ldi	r25, 0x01	; 1
     99c:	5c dc       	rcall	.-1864   	; 0x256 <_Z10lcd_stringPKc>
		}
		return 0;
		break;

	case 5:
		temp = 0;
     99e:	c0 e0       	ldi	r28, 0x00	; 0
				case 0:
				erhoehen(&WStunden[1],24,5,NAME(WStunden[1]));
				break;
				case 1:
				erhoehen(&WMinuten[1],60,5,NAME(WMinuten[1]));
				break;
     9a0:	11 e0       	ldi	r17, 0x01	; 1
			}
			switch (temp)
			{
				case 0:
				erhoehen(&WStunden[1],24,5,NAME(WStunden[1]));
				break;
     9a2:	d0 e0       	ldi	r29, 0x00	; 0
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[1]));
		while (temp<2)
		{
			if (Sekunden!=sektemp)
     9a4:	20 91 64 01 	lds	r18, 0x0164
     9a8:	90 91 5b 01 	lds	r25, 0x015B
     9ac:	29 13       	cpse	r18, r25
			{
				zeit();
     9ae:	f2 dc       	rcall	.-1564   	; 0x394 <_Z4zeitv>
     9b0:	83 99       	sbic	0x10, 3	; 16
     9b2:	22 c0       	rjmp	.+68     	; 0x9f8 <_Z5einsth+0x3c6>
     9b4:	8f ef       	ldi	r24, 0xFF	; 255
     9b6:	93 eb       	ldi	r25, 0xB3	; 179
     9b8:	01 97       	sbiw	r24, 0x01	; 1
     9ba:	f1 f7       	brne	.-4      	; 0x9b8 <_Z5einsth+0x386>
     9bc:	00 c0       	rjmp	.+0      	; 0x9be <_Z5einsth+0x38c>
     9be:	00 00       	nop
     9c0:	8f ef       	ldi	r24, 0xFF	; 255
     9c2:	93 e2       	ldi	r25, 0x23	; 35
     9c4:	01 97       	sbiw	r24, 0x01	; 1
     9c6:	f1 f7       	brne	.-4      	; 0x9c4 <_Z5einsth+0x392>
     9c8:	00 c0       	rjmp	.+0      	; 0x9ca <_Z5einsth+0x398>
     9ca:	00 00       	nop
			}
			if(debounce(&PIND,3))
     9cc:	83 99       	sbic	0x10, 3	; 16
     9ce:	14 c0       	rjmp	.+40     	; 0x9f8 <_Z5einsth+0x3c6>
			{
				temp++;
     9d0:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,5);
     9d2:	65 e0       	ldi	r22, 0x05	; 5
     9d4:	81 2f       	mov	r24, r17
     9d6:	81 dd       	rcall	.-1278   	; 0x4da <_Z3aushh>
				aus(2,0);
     9d8:	6d 2f       	mov	r22, r29
     9da:	82 e0       	ldi	r24, 0x02	; 2
     9dc:	7e dd       	rcall	.-1284   	; 0x4da <_Z3aushh>
				switch (temp)
     9de:	cc 23       	and	r28, r28
     9e0:	19 f0       	breq	.+6      	; 0x9e8 <_Z5einsth+0x3b6>
     9e2:	c1 30       	cpi	r28, 0x01	; 1
     9e4:	49 f4       	brne	.+18     	; 0x9f8 <_Z5einsth+0x3c6>
     9e6:	04 c0       	rjmp	.+8      	; 0x9f0 <_Z5einsth+0x3be>
				{
					case 0:
					lcd_string(NAME(WStunden[1]));
     9e8:	83 e0       	ldi	r24, 0x03	; 3
     9ea:	91 e0       	ldi	r25, 0x01	; 1
     9ec:	34 dc       	rcall	.-1944   	; 0x256 <_Z10lcd_stringPKc>
     9ee:	09 c0       	rjmp	.+18     	; 0xa02 <_Z5einsth+0x3d0>
					break;
					case 1:
					lcd_string(NAME(WMinuten[1]));
     9f0:	8f e0       	ldi	r24, 0x0F	; 15
     9f2:	91 e0       	ldi	r25, 0x01	; 1
     9f4:	30 dc       	rcall	.-1952   	; 0x256 <_Z10lcd_stringPKc>
     9f6:	0e c0       	rjmp	.+28     	; 0xa14 <_Z5einsth+0x3e2>
					break;
					default:
					break;
				}
			}
			switch (temp)
     9f8:	cc 23       	and	r28, r28
     9fa:	19 f0       	breq	.+6      	; 0xa02 <_Z5einsth+0x3d0>
     9fc:	c1 30       	cpi	r28, 0x01	; 1
     9fe:	99 f4       	brne	.+38     	; 0xa26 <_Z5einsth+0x3f4>
     a00:	09 c0       	rjmp	.+18     	; 0xa14 <_Z5einsth+0x3e2>
			{
				case 0:
				erhoehen(&WStunden[1],24,5,NAME(WStunden[1]));
     a02:	23 e0       	ldi	r18, 0x03	; 3
     a04:	31 e0       	ldi	r19, 0x01	; 1
     a06:	45 e0       	ldi	r20, 0x05	; 5
     a08:	68 e1       	ldi	r22, 0x18	; 24
     a0a:	80 e6       	ldi	r24, 0x60	; 96
     a0c:	91 e0       	ldi	r25, 0x01	; 1
     a0e:	e4 dd       	rcall	.-1080   	; 0x5d8 <_Z8erhoehenPhhhPKc>
				break;
     a10:	cd 2f       	mov	r28, r29
     a12:	c8 cf       	rjmp	.-112    	; 0x9a4 <_Z5einsth+0x372>
				case 1:
				erhoehen(&WMinuten[1],60,5,NAME(WMinuten[1]));
     a14:	2f e0       	ldi	r18, 0x0F	; 15
     a16:	31 e0       	ldi	r19, 0x01	; 1
     a18:	45 e0       	ldi	r20, 0x05	; 5
     a1a:	6c e3       	ldi	r22, 0x3C	; 60
     a1c:	8e e5       	ldi	r24, 0x5E	; 94
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	db dd       	rcall	.-1098   	; 0x5d8 <_Z8erhoehenPhhhPKc>
				break;
     a22:	c1 2f       	mov	r28, r17
     a24:	bf cf       	rjmp	.-130    	; 0x9a4 <_Z5einsth+0x372>
	case 5:
		temp = 0;
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[1]));
		while (temp<2)
     a26:	c2 30       	cpi	r28, 0x02	; 2
     a28:	08 f4       	brcc	.+2      	; 0xa2c <_Z5einsth+0x3fa>
     a2a:	bc cf       	rjmp	.-136    	; 0x9a4 <_Z5einsth+0x372>
				erhoehen(&WMinuten[1],60,5,NAME(WMinuten[1]));
				break;
			}
			
		}
		return 0;
     a2c:	80 e0       	ldi	r24, 0x00	; 0
     a2e:	13 c0       	rjmp	.+38     	; 0xa56 <_Z5einsth+0x424>
		break;

	default:
		return 1;
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	11 c0       	rjmp	.+34     	; 0xa56 <_Z5einsth+0x424>
			{
				lampenstaerke=1;
			}
			
		}
		return 0;
     a34:	80 e0       	ldi	r24, 0x00	; 0
     a36:	0f c0       	rjmp	.+30     	; 0xa56 <_Z5einsth+0x424>
     a38:	80 e0       	ldi	r24, 0x00	; 0
     a3a:	0d c0       	rjmp	.+26     	; 0xa56 <_Z5einsth+0x424>
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	0b c0       	rjmp	.+22     	; 0xa56 <_Z5einsth+0x424>
				sekoffset=-5;
			}
				
		}
		
		return 0;
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	09 c0       	rjmp	.+18     	; 0xa56 <_Z5einsth+0x424>
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	07 c0       	rjmp	.+14     	; 0xa56 <_Z5einsth+0x424>
     a48:	80 e0       	ldi	r24, 0x00	; 0
     a4a:	05 c0       	rjmp	.+10     	; 0xa56 <_Z5einsth+0x424>
				tempoffset=-10;
			}
			
		}
		
		return 0;
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	03 c0       	rjmp	.+6      	; 0xa56 <_Z5einsth+0x424>
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	01 c0       	rjmp	.+2      	; 0xa56 <_Z5einsth+0x424>
     a54:	80 e0       	ldi	r24, 0x00	; 0

	default:
		return 1;
		break;
	}
}
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	08 95       	ret

00000a5e <_Z10zeitsetzenv>:

#ifndef EINSTELLUNGEN_H_
#define EINSTELLUNGEN_H_

void zeitsetzen(){
	Minuten = 34;
     a5e:	82 e2       	ldi	r24, 0x22	; 34
     a60:	80 93 63 01 	sts	0x0163, r24
	Stunden	= 5;
     a64:	85 e0       	ldi	r24, 0x05	; 5
     a66:	80 93 62 01 	sts	0x0162, r24
	Sekunden = 0;
     a6a:	10 92 64 01 	sts	0x0164, r1
	WochenTag=6;
     a6e:	96 e0       	ldi	r25, 0x06	; 6
     a70:	90 93 61 01 	sts	0x0161, r25
	WStunden[0]=5;
     a74:	80 93 5f 01 	sts	0x015F, r24
	WMinuten[0]=35;
     a78:	83 e2       	ldi	r24, 0x23	; 35
     a7a:	80 93 5d 01 	sts	0x015D, r24
	WStunden[1]=7;
     a7e:	97 e0       	ldi	r25, 0x07	; 7
     a80:	90 93 60 01 	sts	0x0160, r25
	WMinuten[1]=35;
     a84:	80 93 5e 01 	sts	0x015E, r24
	einst(4);
     a88:	84 e0       	ldi	r24, 0x04	; 4
     a8a:	d3 dd       	rcall	.-1114   	; 0x632 <_Z5einsth>
	einst(0);
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	d1 dd       	rcall	.-1118   	; 0x632 <_Z5einsth>
	sekoffset=1;
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	80 93 56 01 	sts	0x0156, r24
     a96:	08 95       	ret

00000a98 <_Z4menuv>:


#ifndef MENUE_H_
#define MENUE_H_

uint8_t menu(){
     a98:	cf 93       	push	r28
	uint8_t posit = 0;
     a9a:	80 e0       	ldi	r24, 0x00	; 0
						temperatur();
						return 1;
					}
				}
				temperatur();
				posit++;
     a9c:	c6 e0       	ldi	r28, 0x06	; 6

uint8_t menu(){
	uint8_t posit = 0;
	while (true)
	{
		switch (posit)
     a9e:	83 30       	cpi	r24, 0x03	; 3
     aa0:	09 f4       	brne	.+2      	; 0xaa4 <_Z4menuv+0xc>
     aa2:	e5 c0       	rjmp	.+458    	; 0xc6e <_Z4menuv+0x1d6>
     aa4:	30 f4       	brcc	.+12     	; 0xab2 <_Z4menuv+0x1a>
     aa6:	81 30       	cpi	r24, 0x01	; 1
     aa8:	09 f4       	brne	.+2      	; 0xaac <_Z4menuv+0x14>
     aaa:	51 c0       	rjmp	.+162    	; 0xb4e <_Z4menuv+0xb6>
     aac:	82 30       	cpi	r24, 0x02	; 2
     aae:	39 f4       	brne	.+14     	; 0xabe <_Z4menuv+0x26>
     ab0:	96 c0       	rjmp	.+300    	; 0xbde <_Z4menuv+0x146>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	09 f4       	brne	.+2      	; 0xab8 <_Z4menuv+0x20>
     ab6:	23 c1       	rjmp	.+582    	; 0xcfe <_Z4menuv+0x266>
     ab8:	85 30       	cpi	r24, 0x05	; 5
     aba:	09 f4       	brne	.+2      	; 0xabe <_Z4menuv+0x26>
     abc:	70 c1       	rjmp	.+736    	; 0xd9e <_Z4menuv+0x306>
		{
			case 0:
				//Weckzeit anzeigen und einstellen mit PD2
				lcd_clear();
     abe:	79 db       	rcall	.-2318   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,5);
     ac0:	65 e0       	ldi	r22, 0x05	; 5
     ac2:	81 e0       	ldi	r24, 0x01	; 1
     ac4:	0a dd       	rcall	.-1516   	; 0x4da <_Z3aushh>
				aus(2,0);
     ac6:	60 e0       	ldi	r22, 0x00	; 0
     ac8:	82 e0       	ldi	r24, 0x02	; 2
     aca:	07 dd       	rcall	.-1522   	; 0x4da <_Z3aushh>
				lcd_string("Werktags");
     acc:	8b e1       	ldi	r24, 0x1B	; 27
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	c2 db       	rcall	.-2172   	; 0x256 <_Z10lcd_stringPKc>
				posit = posit + 1;
				while(!debounce(&PIND,PD3))
     ad2:	2b c0       	rjmp	.+86     	; 0xb2a <_Z4menuv+0x92>
				{
					//Zeitabfrage mit einbauen
					if(Sekunden!=sektemp){
     ad4:	90 91 64 01 	lds	r25, 0x0164
     ad8:	80 91 5b 01 	lds	r24, 0x015B
     adc:	98 13       	cpse	r25, r24
						zeit();
     ade:	5a dc       	rcall	.-1868   	; 0x394 <_Z4zeitv>
     ae0:	82 99       	sbic	0x10, 2	; 16
     ae2:	13 c0       	rjmp	.+38     	; 0xb0a <_Z4menuv+0x72>
     ae4:	8f ef       	ldi	r24, 0xFF	; 255
     ae6:	93 eb       	ldi	r25, 0xB3	; 179
     ae8:	01 97       	sbiw	r24, 0x01	; 1
     aea:	f1 f7       	brne	.-4      	; 0xae8 <_Z4menuv+0x50>
     aec:	00 c0       	rjmp	.+0      	; 0xaee <_Z4menuv+0x56>
     aee:	00 00       	nop
     af0:	8f ef       	ldi	r24, 0xFF	; 255
     af2:	93 e2       	ldi	r25, 0x23	; 35
     af4:	01 97       	sbiw	r24, 0x01	; 1
     af6:	f1 f7       	brne	.-4      	; 0xaf4 <_Z4menuv+0x5c>
     af8:	00 c0       	rjmp	.+0      	; 0xafa <_Z4menuv+0x62>
     afa:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     afc:	82 99       	sbic	0x10, 2	; 16
     afe:	05 c0       	rjmp	.+10     	; 0xb0a <_Z4menuv+0x72>
					{
						einst(4);
     b00:	84 e0       	ldi	r24, 0x04	; 4
     b02:	97 dd       	rcall	.-1234   	; 0x632 <_Z5einsth>
						lcd_string("Werktags");
     b04:	8b e1       	ldi	r24, 0x1B	; 27
     b06:	91 e0       	ldi	r25, 0x01	; 1
     b08:	a6 db       	rcall	.-2228   	; 0x256 <_Z10lcd_stringPKc>
     b0a:	84 99       	sbic	0x10, 4	; 16
     b0c:	0e c0       	rjmp	.+28     	; 0xb2a <_Z4menuv+0x92>
     b0e:	8f ef       	ldi	r24, 0xFF	; 255
     b10:	93 eb       	ldi	r25, 0xB3	; 179
     b12:	01 97       	sbiw	r24, 0x01	; 1
     b14:	f1 f7       	brne	.-4      	; 0xb12 <_Z4menuv+0x7a>
     b16:	00 c0       	rjmp	.+0      	; 0xb18 <_Z4menuv+0x80>
     b18:	00 00       	nop
     b1a:	8f ef       	ldi	r24, 0xFF	; 255
     b1c:	93 e2       	ldi	r25, 0x23	; 35
     b1e:	01 97       	sbiw	r24, 0x01	; 1
     b20:	f1 f7       	brne	.-4      	; 0xb1e <_Z4menuv+0x86>
     b22:	00 c0       	rjmp	.+0      	; 0xb24 <_Z4menuv+0x8c>
     b24:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     b26:	84 9b       	sbis	0x10, 4	; 16
     b28:	8d c1       	rjmp	.+794    	; 0xe44 <_Z4menuv+0x3ac>
     b2a:	83 99       	sbic	0x10, 3	; 16
     b2c:	d3 cf       	rjmp	.-90     	; 0xad4 <_Z4menuv+0x3c>
     b2e:	8f ef       	ldi	r24, 0xFF	; 255
     b30:	93 eb       	ldi	r25, 0xB3	; 179
     b32:	01 97       	sbiw	r24, 0x01	; 1
     b34:	f1 f7       	brne	.-4      	; 0xb32 <_Z4menuv+0x9a>
     b36:	00 c0       	rjmp	.+0      	; 0xb38 <_Z4menuv+0xa0>
     b38:	00 00       	nop
     b3a:	8f ef       	ldi	r24, 0xFF	; 255
     b3c:	93 e2       	ldi	r25, 0x23	; 35
     b3e:	01 97       	sbiw	r24, 0x01	; 1
     b40:	f1 f7       	brne	.-4      	; 0xb3e <_Z4menuv+0xa6>
     b42:	00 c0       	rjmp	.+0      	; 0xb44 <_Z4menuv+0xac>
     b44:	00 00       	nop
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Werktags");
				posit = posit + 1;
				while(!debounce(&PIND,PD3))
     b46:	83 99       	sbic	0x10, 3	; 16
     b48:	c5 cf       	rjmp	.-118    	; 0xad4 <_Z4menuv+0x3c>
				//Weckzeit anzeigen und einstellen mit PD2
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Werktags");
				posit = posit + 1;
     b4a:	81 e0       	ldi	r24, 0x01	; 1
     b4c:	a8 cf       	rjmp	.-176    	; 0xa9e <_Z4menuv+0x6>
				}
				break;
			
			case 1:
			//Weckzeit anzeige und einstellungen am Wochenende
				lcd_clear();
     b4e:	31 db       	rcall	.-2462   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,5);
     b50:	65 e0       	ldi	r22, 0x05	; 5
     b52:	81 e0       	ldi	r24, 0x01	; 1
     b54:	c2 dc       	rcall	.-1660   	; 0x4da <_Z3aushh>
				aus(2,0);
     b56:	60 e0       	ldi	r22, 0x00	; 0
     b58:	82 e0       	ldi	r24, 0x02	; 2
     b5a:	bf dc       	rcall	.-1666   	; 0x4da <_Z3aushh>
				lcd_string("Wohenende");
     b5c:	84 e2       	ldi	r24, 0x24	; 36
     b5e:	91 e0       	ldi	r25, 0x01	; 1
     b60:	7a db       	rcall	.-2316   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     b62:	2b c0       	rjmp	.+86     	; 0xbba <_Z4menuv+0x122>
				{
					if(Sekunden!=sektemp){
     b64:	90 91 64 01 	lds	r25, 0x0164
     b68:	80 91 5b 01 	lds	r24, 0x015B
     b6c:	98 13       	cpse	r25, r24
						zeit();
     b6e:	12 dc       	rcall	.-2012   	; 0x394 <_Z4zeitv>
     b70:	82 99       	sbic	0x10, 2	; 16
     b72:	13 c0       	rjmp	.+38     	; 0xb9a <_Z4menuv+0x102>
     b74:	8f ef       	ldi	r24, 0xFF	; 255
     b76:	93 eb       	ldi	r25, 0xB3	; 179
     b78:	01 97       	sbiw	r24, 0x01	; 1
     b7a:	f1 f7       	brne	.-4      	; 0xb78 <_Z4menuv+0xe0>
     b7c:	00 c0       	rjmp	.+0      	; 0xb7e <_Z4menuv+0xe6>
     b7e:	00 00       	nop
     b80:	8f ef       	ldi	r24, 0xFF	; 255
     b82:	93 e2       	ldi	r25, 0x23	; 35
     b84:	01 97       	sbiw	r24, 0x01	; 1
     b86:	f1 f7       	brne	.-4      	; 0xb84 <_Z4menuv+0xec>
     b88:	00 c0       	rjmp	.+0      	; 0xb8a <_Z4menuv+0xf2>
     b8a:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     b8c:	82 99       	sbic	0x10, 2	; 16
     b8e:	05 c0       	rjmp	.+10     	; 0xb9a <_Z4menuv+0x102>
					{
						einst(5);
     b90:	85 e0       	ldi	r24, 0x05	; 5
     b92:	4f dd       	rcall	.-1378   	; 0x632 <_Z5einsth>
						lcd_string("Wohenende");
     b94:	84 e2       	ldi	r24, 0x24	; 36
     b96:	91 e0       	ldi	r25, 0x01	; 1
     b98:	5e db       	rcall	.-2372   	; 0x256 <_Z10lcd_stringPKc>
     b9a:	84 99       	sbic	0x10, 4	; 16
     b9c:	0e c0       	rjmp	.+28     	; 0xbba <_Z4menuv+0x122>
     b9e:	8f ef       	ldi	r24, 0xFF	; 255
     ba0:	93 eb       	ldi	r25, 0xB3	; 179
     ba2:	01 97       	sbiw	r24, 0x01	; 1
     ba4:	f1 f7       	brne	.-4      	; 0xba2 <_Z4menuv+0x10a>
     ba6:	00 c0       	rjmp	.+0      	; 0xba8 <_Z4menuv+0x110>
     ba8:	00 00       	nop
     baa:	8f ef       	ldi	r24, 0xFF	; 255
     bac:	93 e2       	ldi	r25, 0x23	; 35
     bae:	01 97       	sbiw	r24, 0x01	; 1
     bb0:	f1 f7       	brne	.-4      	; 0xbae <_Z4menuv+0x116>
     bb2:	00 c0       	rjmp	.+0      	; 0xbb4 <_Z4menuv+0x11c>
     bb4:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     bb6:	84 9b       	sbis	0x10, 4	; 16
     bb8:	45 c1       	rjmp	.+650    	; 0xe44 <_Z4menuv+0x3ac>
     bba:	83 99       	sbic	0x10, 3	; 16
     bbc:	d3 cf       	rjmp	.-90     	; 0xb64 <_Z4menuv+0xcc>
     bbe:	8f ef       	ldi	r24, 0xFF	; 255
     bc0:	93 eb       	ldi	r25, 0xB3	; 179
     bc2:	01 97       	sbiw	r24, 0x01	; 1
     bc4:	f1 f7       	brne	.-4      	; 0xbc2 <_Z4menuv+0x12a>
     bc6:	00 c0       	rjmp	.+0      	; 0xbc8 <_Z4menuv+0x130>
     bc8:	00 00       	nop
     bca:	8f ef       	ldi	r24, 0xFF	; 255
     bcc:	93 e2       	ldi	r25, 0x23	; 35
     bce:	01 97       	sbiw	r24, 0x01	; 1
     bd0:	f1 f7       	brne	.-4      	; 0xbce <_Z4menuv+0x136>
     bd2:	00 c0       	rjmp	.+0      	; 0xbd4 <_Z4menuv+0x13c>
     bd4:	00 00       	nop
			//Weckzeit anzeige und einstellungen am Wochenende
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Wohenende");
				while (!debounce(&PIND,PD3))
     bd6:	83 99       	sbic	0x10, 3	; 16
     bd8:	c5 cf       	rjmp	.-118    	; 0xb64 <_Z4menuv+0xcc>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     bda:	82 e0       	ldi	r24, 0x02	; 2
     bdc:	60 cf       	rjmp	.-320    	; 0xa9e <_Z4menuv+0x6>
				break;
			
			case 2:
				//Lampe einstellen
				//Jetzt noch nicht implementiert
				lcd_clear();
     bde:	e9 da       	rcall	.-2606   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,2);
     be0:	62 e0       	ldi	r22, 0x02	; 2
     be2:	81 e0       	ldi	r24, 0x01	; 1
     be4:	7a dc       	rcall	.-1804   	; 0x4da <_Z3aushh>
				aus(2,0);
     be6:	60 e0       	ldi	r22, 0x00	; 0
     be8:	82 e0       	ldi	r24, 0x02	; 2
     bea:	77 dc       	rcall	.-1810   	; 0x4da <_Z3aushh>
				lcd_string("Lampenstärke:");
     bec:	8a eb       	ldi	r24, 0xBA	; 186
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	32 db       	rcall	.-2460   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     bf2:	2b c0       	rjmp	.+86     	; 0xc4a <_Z4menuv+0x1b2>
				{
					if(Sekunden!=sektemp){
     bf4:	90 91 64 01 	lds	r25, 0x0164
     bf8:	80 91 5b 01 	lds	r24, 0x015B
     bfc:	98 13       	cpse	r25, r24
						zeit();
     bfe:	ca db       	rcall	.-2156   	; 0x394 <_Z4zeitv>
     c00:	82 99       	sbic	0x10, 2	; 16
     c02:	13 c0       	rjmp	.+38     	; 0xc2a <_Z4menuv+0x192>
     c04:	8f ef       	ldi	r24, 0xFF	; 255
     c06:	93 eb       	ldi	r25, 0xB3	; 179
     c08:	01 97       	sbiw	r24, 0x01	; 1
     c0a:	f1 f7       	brne	.-4      	; 0xc08 <_Z4menuv+0x170>
     c0c:	00 c0       	rjmp	.+0      	; 0xc0e <_Z4menuv+0x176>
     c0e:	00 00       	nop
     c10:	8f ef       	ldi	r24, 0xFF	; 255
     c12:	93 e2       	ldi	r25, 0x23	; 35
     c14:	01 97       	sbiw	r24, 0x01	; 1
     c16:	f1 f7       	brne	.-4      	; 0xc14 <_Z4menuv+0x17c>
     c18:	00 c0       	rjmp	.+0      	; 0xc1a <_Z4menuv+0x182>
     c1a:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     c1c:	82 99       	sbic	0x10, 2	; 16
     c1e:	05 c0       	rjmp	.+10     	; 0xc2a <_Z4menuv+0x192>
					{
						einst(1);
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	07 dd       	rcall	.-1522   	; 0x632 <_Z5einsth>
						lcd_string("Lampenstärke");
     c24:	8e e2       	ldi	r24, 0x2E	; 46
     c26:	91 e0       	ldi	r25, 0x01	; 1
     c28:	16 db       	rcall	.-2516   	; 0x256 <_Z10lcd_stringPKc>
     c2a:	84 99       	sbic	0x10, 4	; 16
     c2c:	0e c0       	rjmp	.+28     	; 0xc4a <_Z4menuv+0x1b2>
     c2e:	8f ef       	ldi	r24, 0xFF	; 255
     c30:	93 eb       	ldi	r25, 0xB3	; 179
     c32:	01 97       	sbiw	r24, 0x01	; 1
     c34:	f1 f7       	brne	.-4      	; 0xc32 <_Z4menuv+0x19a>
     c36:	00 c0       	rjmp	.+0      	; 0xc38 <_Z4menuv+0x1a0>
     c38:	00 00       	nop
     c3a:	8f ef       	ldi	r24, 0xFF	; 255
     c3c:	93 e2       	ldi	r25, 0x23	; 35
     c3e:	01 97       	sbiw	r24, 0x01	; 1
     c40:	f1 f7       	brne	.-4      	; 0xc3e <_Z4menuv+0x1a6>
     c42:	00 c0       	rjmp	.+0      	; 0xc44 <_Z4menuv+0x1ac>
     c44:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     c46:	84 9b       	sbis	0x10, 4	; 16
     c48:	fd c0       	rjmp	.+506    	; 0xe44 <_Z4menuv+0x3ac>
     c4a:	83 99       	sbic	0x10, 3	; 16
     c4c:	d3 cf       	rjmp	.-90     	; 0xbf4 <_Z4menuv+0x15c>
     c4e:	8f ef       	ldi	r24, 0xFF	; 255
     c50:	93 eb       	ldi	r25, 0xB3	; 179
     c52:	01 97       	sbiw	r24, 0x01	; 1
     c54:	f1 f7       	brne	.-4      	; 0xc52 <_Z4menuv+0x1ba>
     c56:	00 c0       	rjmp	.+0      	; 0xc58 <_Z4menuv+0x1c0>
     c58:	00 00       	nop
     c5a:	8f ef       	ldi	r24, 0xFF	; 255
     c5c:	93 e2       	ldi	r25, 0x23	; 35
     c5e:	01 97       	sbiw	r24, 0x01	; 1
     c60:	f1 f7       	brne	.-4      	; 0xc5e <_Z4menuv+0x1c6>
     c62:	00 c0       	rjmp	.+0      	; 0xc64 <_Z4menuv+0x1cc>
     c64:	00 00       	nop
				//Jetzt noch nicht implementiert
				lcd_clear();
				aus(1,2);
				aus(2,0);
				lcd_string("Lampenstärke:");
				while (!debounce(&PIND,PD3))
     c66:	83 99       	sbic	0x10, 3	; 16
     c68:	c5 cf       	rjmp	.-118    	; 0xbf4 <_Z4menuv+0x15c>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     c6a:	83 e0       	ldi	r24, 0x03	; 3
     c6c:	18 cf       	rjmp	.-464    	; 0xa9e <_Z4menuv+0x6>
				break;
			
			case 3:
				//Zeit einstellen ohnen Sekunden
				lcd_clear();
     c6e:	a1 da       	rcall	.-2750   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,3);
     c70:	63 e0       	ldi	r22, 0x03	; 3
     c72:	81 e0       	ldi	r24, 0x01	; 1
     c74:	32 dc       	rcall	.-1948   	; 0x4da <_Z3aushh>
				aus(2,0);
     c76:	60 e0       	ldi	r22, 0x00	; 0
     c78:	82 e0       	ldi	r24, 0x02	; 2
     c7a:	2f dc       	rcall	.-1954   	; 0x4da <_Z3aushh>
				lcd_string("Zeit");
     c7c:	8c e3       	ldi	r24, 0x3C	; 60
     c7e:	91 e0       	ldi	r25, 0x01	; 1
     c80:	ea da       	rcall	.-2604   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     c82:	2b c0       	rjmp	.+86     	; 0xcda <_Z4menuv+0x242>
				{
					if(Sekunden!=sektemp){
     c84:	90 91 64 01 	lds	r25, 0x0164
     c88:	80 91 5b 01 	lds	r24, 0x015B
     c8c:	98 13       	cpse	r25, r24
						zeit();
     c8e:	82 db       	rcall	.-2300   	; 0x394 <_Z4zeitv>
     c90:	82 99       	sbic	0x10, 2	; 16
     c92:	13 c0       	rjmp	.+38     	; 0xcba <_Z4menuv+0x222>
     c94:	8f ef       	ldi	r24, 0xFF	; 255
     c96:	93 eb       	ldi	r25, 0xB3	; 179
     c98:	01 97       	sbiw	r24, 0x01	; 1
     c9a:	f1 f7       	brne	.-4      	; 0xc98 <_Z4menuv+0x200>
     c9c:	00 c0       	rjmp	.+0      	; 0xc9e <_Z4menuv+0x206>
     c9e:	00 00       	nop
     ca0:	8f ef       	ldi	r24, 0xFF	; 255
     ca2:	93 e2       	ldi	r25, 0x23	; 35
     ca4:	01 97       	sbiw	r24, 0x01	; 1
     ca6:	f1 f7       	brne	.-4      	; 0xca4 <_Z4menuv+0x20c>
     ca8:	00 c0       	rjmp	.+0      	; 0xcaa <_Z4menuv+0x212>
     caa:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     cac:	82 99       	sbic	0x10, 2	; 16
     cae:	05 c0       	rjmp	.+10     	; 0xcba <_Z4menuv+0x222>
					{
						einst(0);
     cb0:	80 e0       	ldi	r24, 0x00	; 0
     cb2:	bf dc       	rcall	.-1666   	; 0x632 <_Z5einsth>
						lcd_string("Zeit");
     cb4:	8c e3       	ldi	r24, 0x3C	; 60
     cb6:	91 e0       	ldi	r25, 0x01	; 1
     cb8:	ce da       	rcall	.-2660   	; 0x256 <_Z10lcd_stringPKc>
     cba:	84 99       	sbic	0x10, 4	; 16
     cbc:	0e c0       	rjmp	.+28     	; 0xcda <_Z4menuv+0x242>
     cbe:	8f ef       	ldi	r24, 0xFF	; 255
     cc0:	93 eb       	ldi	r25, 0xB3	; 179
     cc2:	01 97       	sbiw	r24, 0x01	; 1
     cc4:	f1 f7       	brne	.-4      	; 0xcc2 <_Z4menuv+0x22a>
     cc6:	00 c0       	rjmp	.+0      	; 0xcc8 <_Z4menuv+0x230>
     cc8:	00 00       	nop
     cca:	8f ef       	ldi	r24, 0xFF	; 255
     ccc:	93 e2       	ldi	r25, 0x23	; 35
     cce:	01 97       	sbiw	r24, 0x01	; 1
     cd0:	f1 f7       	brne	.-4      	; 0xcce <_Z4menuv+0x236>
     cd2:	00 c0       	rjmp	.+0      	; 0xcd4 <_Z4menuv+0x23c>
     cd4:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     cd6:	84 9b       	sbis	0x10, 4	; 16
     cd8:	b5 c0       	rjmp	.+362    	; 0xe44 <_Z4menuv+0x3ac>
     cda:	83 99       	sbic	0x10, 3	; 16
     cdc:	d3 cf       	rjmp	.-90     	; 0xc84 <_Z4menuv+0x1ec>
     cde:	8f ef       	ldi	r24, 0xFF	; 255
     ce0:	93 eb       	ldi	r25, 0xB3	; 179
     ce2:	01 97       	sbiw	r24, 0x01	; 1
     ce4:	f1 f7       	brne	.-4      	; 0xce2 <_Z4menuv+0x24a>
     ce6:	00 c0       	rjmp	.+0      	; 0xce8 <_Z4menuv+0x250>
     ce8:	00 00       	nop
     cea:	8f ef       	ldi	r24, 0xFF	; 255
     cec:	93 e2       	ldi	r25, 0x23	; 35
     cee:	01 97       	sbiw	r24, 0x01	; 1
     cf0:	f1 f7       	brne	.-4      	; 0xcee <_Z4menuv+0x256>
     cf2:	00 c0       	rjmp	.+0      	; 0xcf4 <_Z4menuv+0x25c>
     cf4:	00 00       	nop
				//Zeit einstellen ohnen Sekunden
				lcd_clear();
				aus(1,3);
				aus(2,0);
				lcd_string("Zeit");
				while (!debounce(&PIND,PD3))
     cf6:	83 99       	sbic	0x10, 3	; 16
     cf8:	c5 cf       	rjmp	.-118    	; 0xc84 <_Z4menuv+0x1ec>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     cfa:	84 e0       	ldi	r24, 0x04	; 4
     cfc:	d0 ce       	rjmp	.-608    	; 0xa9e <_Z4menuv+0x6>
				break;
				
			case 4:
				//Sekundenoffset einstellen
				lcd_clear();
     cfe:	59 da       	rcall	.-2894   	; 0x1b2 <_Z9lcd_clearv>
				lcd_home();
     d00:	8f da       	rcall	.-2786   	; 0x220 <_Z8lcd_homev>
				lcd_string("Sekundenoffset:");
     d02:	89 ec       	ldi	r24, 0xC9	; 201
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	a7 da       	rcall	.-2738   	; 0x256 <_Z10lcd_stringPKc>
				aus(2,0);
     d08:	60 e0       	ldi	r22, 0x00	; 0
     d0a:	82 e0       	ldi	r24, 0x02	; 2
     d0c:	e6 db       	rcall	.-2100   	; 0x4da <_Z3aushh>
				itoa(sekoffset,Buffer,10);
     d0e:	80 91 56 01 	lds	r24, 0x0156
     d12:	4a e0       	ldi	r20, 0x0A	; 10
     d14:	50 e0       	ldi	r21, 0x00	; 0
     d16:	62 e4       	ldi	r22, 0x42	; 66
     d18:	71 e0       	ldi	r23, 0x01	; 1
     d1a:	99 27       	eor	r25, r25
     d1c:	87 fd       	sbrc	r24, 7
     d1e:	90 95       	com	r25
     d20:	0a d3       	rcall	.+1556   	; 0x1336 <itoa>
				lcd_string(Buffer);
     d22:	82 e4       	ldi	r24, 0x42	; 66
     d24:	91 e0       	ldi	r25, 0x01	; 1
     d26:	97 da       	rcall	.-2770   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     d28:	28 c0       	rjmp	.+80     	; 0xd7a <_Z4menuv+0x2e2>
				{
					if(Sekunden!=sektemp){
     d2a:	90 91 64 01 	lds	r25, 0x0164
     d2e:	80 91 5b 01 	lds	r24, 0x015B
     d32:	98 13       	cpse	r25, r24
						zeit();
     d34:	2f db       	rcall	.-2466   	; 0x394 <_Z4zeitv>
     d36:	82 99       	sbic	0x10, 2	; 16
     d38:	10 c0       	rjmp	.+32     	; 0xd5a <_Z4menuv+0x2c2>
     d3a:	8f ef       	ldi	r24, 0xFF	; 255
     d3c:	93 eb       	ldi	r25, 0xB3	; 179
     d3e:	01 97       	sbiw	r24, 0x01	; 1
     d40:	f1 f7       	brne	.-4      	; 0xd3e <_Z4menuv+0x2a6>
     d42:	00 c0       	rjmp	.+0      	; 0xd44 <_Z4menuv+0x2ac>
     d44:	00 00       	nop
     d46:	8f ef       	ldi	r24, 0xFF	; 255
     d48:	93 e2       	ldi	r25, 0x23	; 35
     d4a:	01 97       	sbiw	r24, 0x01	; 1
     d4c:	f1 f7       	brne	.-4      	; 0xd4a <_Z4menuv+0x2b2>
     d4e:	00 c0       	rjmp	.+0      	; 0xd50 <_Z4menuv+0x2b8>
     d50:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     d52:	82 99       	sbic	0x10, 2	; 16
     d54:	02 c0       	rjmp	.+4      	; 0xd5a <_Z4menuv+0x2c2>
					{
						einst(2);
     d56:	82 e0       	ldi	r24, 0x02	; 2
     d58:	6c dc       	rcall	.-1832   	; 0x632 <_Z5einsth>
     d5a:	84 99       	sbic	0x10, 4	; 16
     d5c:	0e c0       	rjmp	.+28     	; 0xd7a <_Z4menuv+0x2e2>
     d5e:	8f ef       	ldi	r24, 0xFF	; 255
     d60:	93 eb       	ldi	r25, 0xB3	; 179
     d62:	01 97       	sbiw	r24, 0x01	; 1
     d64:	f1 f7       	brne	.-4      	; 0xd62 <_Z4menuv+0x2ca>
     d66:	00 c0       	rjmp	.+0      	; 0xd68 <_Z4menuv+0x2d0>
     d68:	00 00       	nop
     d6a:	8f ef       	ldi	r24, 0xFF	; 255
     d6c:	93 e2       	ldi	r25, 0x23	; 35
     d6e:	01 97       	sbiw	r24, 0x01	; 1
     d70:	f1 f7       	brne	.-4      	; 0xd6e <_Z4menuv+0x2d6>
     d72:	00 c0       	rjmp	.+0      	; 0xd74 <_Z4menuv+0x2dc>
     d74:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     d76:	84 9b       	sbis	0x10, 4	; 16
     d78:	65 c0       	rjmp	.+202    	; 0xe44 <_Z4menuv+0x3ac>
     d7a:	83 99       	sbic	0x10, 3	; 16
     d7c:	d6 cf       	rjmp	.-84     	; 0xd2a <_Z4menuv+0x292>
     d7e:	8f ef       	ldi	r24, 0xFF	; 255
     d80:	93 eb       	ldi	r25, 0xB3	; 179
     d82:	01 97       	sbiw	r24, 0x01	; 1
     d84:	f1 f7       	brne	.-4      	; 0xd82 <_Z4menuv+0x2ea>
     d86:	00 c0       	rjmp	.+0      	; 0xd88 <_Z4menuv+0x2f0>
     d88:	00 00       	nop
     d8a:	8f ef       	ldi	r24, 0xFF	; 255
     d8c:	93 e2       	ldi	r25, 0x23	; 35
     d8e:	01 97       	sbiw	r24, 0x01	; 1
     d90:	f1 f7       	brne	.-4      	; 0xd8e <_Z4menuv+0x2f6>
     d92:	00 c0       	rjmp	.+0      	; 0xd94 <_Z4menuv+0x2fc>
     d94:	00 00       	nop
				lcd_home();
				lcd_string("Sekundenoffset:");
				aus(2,0);
				itoa(sekoffset,Buffer,10);
				lcd_string(Buffer);
				while (!debounce(&PIND,PD3))
     d96:	83 99       	sbic	0x10, 3	; 16
     d98:	c8 cf       	rjmp	.-112    	; 0xd2a <_Z4menuv+0x292>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     d9a:	85 e0       	ldi	r24, 0x05	; 5
     d9c:	80 ce       	rjmp	.-768    	; 0xa9e <_Z4menuv+0x6>
				break;
				
			case 5:
				//Temperaturoffset einstellen
				lcd_clear();
     d9e:	09 da       	rcall	.-3054   	; 0x1b2 <_Z9lcd_clearv>
				lcd_home();
     da0:	3f da       	rcall	.-2946   	; 0x220 <_Z8lcd_homev>
				lcd_string("Temperaturoffset:");
     da2:	89 ed       	ldi	r24, 0xD9	; 217
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	57 da       	rcall	.-2898   	; 0x256 <_Z10lcd_stringPKc>
				aus(2,0);
     da8:	60 e0       	ldi	r22, 0x00	; 0
     daa:	82 e0       	ldi	r24, 0x02	; 2
     dac:	96 db       	rcall	.-2260   	; 0x4da <_Z3aushh>
				itoa(tempoffset,Buffer,10);
     dae:	80 91 61 00 	lds	r24, 0x0061
     db2:	4a e0       	ldi	r20, 0x0A	; 10
     db4:	50 e0       	ldi	r21, 0x00	; 0
     db6:	62 e4       	ldi	r22, 0x42	; 66
     db8:	71 e0       	ldi	r23, 0x01	; 1
     dba:	99 27       	eor	r25, r25
     dbc:	87 fd       	sbrc	r24, 7
     dbe:	90 95       	com	r25
     dc0:	ba d2       	rcall	.+1396   	; 0x1336 <itoa>
				lcd_string(Buffer);
     dc2:	82 e4       	ldi	r24, 0x42	; 66
     dc4:	91 e0       	ldi	r25, 0x01	; 1
     dc6:	47 da       	rcall	.-2930   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     dc8:	2a c0       	rjmp	.+84     	; 0xe1e <_Z4menuv+0x386>
				{
					if(Sekunden!=sektemp){
     dca:	90 91 64 01 	lds	r25, 0x0164
     dce:	80 91 5b 01 	lds	r24, 0x015B
     dd2:	98 13       	cpse	r25, r24
						zeit();
     dd4:	df da       	rcall	.-2626   	; 0x394 <_Z4zeitv>
     dd6:	82 99       	sbic	0x10, 2	; 16
     dd8:	10 c0       	rjmp	.+32     	; 0xdfa <_Z4menuv+0x362>
     dda:	8f ef       	ldi	r24, 0xFF	; 255
     ddc:	93 eb       	ldi	r25, 0xB3	; 179
     dde:	01 97       	sbiw	r24, 0x01	; 1
     de0:	f1 f7       	brne	.-4      	; 0xdde <_Z4menuv+0x346>
     de2:	00 c0       	rjmp	.+0      	; 0xde4 <_Z4menuv+0x34c>
     de4:	00 00       	nop
     de6:	8f ef       	ldi	r24, 0xFF	; 255
     de8:	93 e2       	ldi	r25, 0x23	; 35
     dea:	01 97       	sbiw	r24, 0x01	; 1
     dec:	f1 f7       	brne	.-4      	; 0xdea <_Z4menuv+0x352>
     dee:	00 c0       	rjmp	.+0      	; 0xdf0 <_Z4menuv+0x358>
     df0:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     df2:	82 99       	sbic	0x10, 2	; 16
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <_Z4menuv+0x362>
					{
						einst(3);
     df6:	83 e0       	ldi	r24, 0x03	; 3
     df8:	1c dc       	rcall	.-1992   	; 0x632 <_Z5einsth>
     dfa:	84 99       	sbic	0x10, 4	; 16
     dfc:	10 c0       	rjmp	.+32     	; 0xe1e <_Z4menuv+0x386>
     dfe:	8f ef       	ldi	r24, 0xFF	; 255
     e00:	93 eb       	ldi	r25, 0xB3	; 179
     e02:	01 97       	sbiw	r24, 0x01	; 1
     e04:	f1 f7       	brne	.-4      	; 0xe02 <_Z4menuv+0x36a>
     e06:	00 c0       	rjmp	.+0      	; 0xe08 <_Z4menuv+0x370>
     e08:	00 00       	nop
     e0a:	8f ef       	ldi	r24, 0xFF	; 255
     e0c:	93 e2       	ldi	r25, 0x23	; 35
     e0e:	01 97       	sbiw	r24, 0x01	; 1
     e10:	f1 f7       	brne	.-4      	; 0xe0e <_Z4menuv+0x376>
     e12:	00 c0       	rjmp	.+0      	; 0xe14 <_Z4menuv+0x37c>
     e14:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     e16:	84 99       	sbic	0x10, 4	; 16
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <_Z4menuv+0x386>
					{
						temperatur();
     e1a:	60 da       	rcall	.-2880   	; 0x2dc <_Z10temperaturv>
						return 1;
     e1c:	13 c0       	rjmp	.+38     	; 0xe44 <_Z4menuv+0x3ac>
     e1e:	83 99       	sbic	0x10, 3	; 16
     e20:	d4 cf       	rjmp	.-88     	; 0xdca <_Z4menuv+0x332>
     e22:	8f ef       	ldi	r24, 0xFF	; 255
     e24:	93 eb       	ldi	r25, 0xB3	; 179
     e26:	01 97       	sbiw	r24, 0x01	; 1
     e28:	f1 f7       	brne	.-4      	; 0xe26 <_Z4menuv+0x38e>
     e2a:	00 c0       	rjmp	.+0      	; 0xe2c <_Z4menuv+0x394>
     e2c:	00 00       	nop
     e2e:	8f ef       	ldi	r24, 0xFF	; 255
     e30:	93 e2       	ldi	r25, 0x23	; 35
     e32:	01 97       	sbiw	r24, 0x01	; 1
     e34:	f1 f7       	brne	.-4      	; 0xe32 <_Z4menuv+0x39a>
     e36:	00 c0       	rjmp	.+0      	; 0xe38 <_Z4menuv+0x3a0>
     e38:	00 00       	nop
				lcd_home();
				lcd_string("Temperaturoffset:");
				aus(2,0);
				itoa(tempoffset,Buffer,10);
				lcd_string(Buffer);
				while (!debounce(&PIND,PD3))
     e3a:	83 99       	sbic	0x10, 3	; 16
     e3c:	c6 cf       	rjmp	.-116    	; 0xdca <_Z4menuv+0x332>
					{
						temperatur();
						return 1;
					}
				}
				temperatur();
     e3e:	4e da       	rcall	.-2916   	; 0x2dc <_Z10temperaturv>
				posit++;
     e40:	8c 2f       	mov	r24, r28
				break;
     e42:	2d ce       	rjmp	.-934    	; 0xa9e <_Z4menuv+0x6>
				posit=0;
				break;
		}
	}
return 0;
}
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	cf 91       	pop	r28
     e48:	08 95       	ret

00000e4a <_Z4initv>:
}

void init(){
	//LCD einstellen und erste Ausgabe
	lcd_init();
     e4a:	ba d9       	rcall	.-3212   	; 0x1c0 <_Z8lcd_initv>
	aus(1,4);
     e4c:	64 e0       	ldi	r22, 0x04	; 4
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	44 db       	rcall	.-2424   	; 0x4da <_Z3aushh>
     e52:	2f ef       	ldi	r18, 0xFF	; 255
     e54:	8f ed       	ldi	r24, 0xDF	; 223
     e56:	90 e1       	ldi	r25, 0x10	; 16
     e58:	21 50       	subi	r18, 0x01	; 1
     e5a:	80 40       	sbci	r24, 0x00	; 0
     e5c:	90 40       	sbci	r25, 0x00	; 0
     e5e:	e1 f7       	brne	.-8      	; 0xe58 <_Z4initv+0xe>
     e60:	00 c0       	rjmp	.+0      	; 0xe62 <_Z4initv+0x18>
     e62:	00 00       	nop
	_delay_ms(1500);
	lcd_clear();
     e64:	a6 d9       	rcall	.-3252   	; 0x1b2 <_Z9lcd_clearv>
	
	//ADC
	ADMUX = (1<<REFS0);
     e66:	80 e4       	ldi	r24, 0x40	; 64
     e68:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
     e6a:	83 e0       	ldi	r24, 0x03	; 3
     e6c:	86 b9       	out	0x06, r24	; 6
	ADCSRA |= (1<<ADEN);
     e6e:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1<<ADSC);
     e70:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     e72:	36 99       	sbic	0x06, 6	; 6
     e74:	fe cf       	rjmp	.-4      	; 0xe72 <_Z4initv+0x28>
	}
	(void) ADCW;
     e76:	84 b1       	in	r24, 0x04	; 4
     e78:	95 b1       	in	r25, 0x05	; 5
	
	//Eingänge
	PORTD |= (1<<PD2) | (1<<PD3) | (1<<PD4);
     e7a:	82 b3       	in	r24, 0x12	; 18
     e7c:	8c 61       	ori	r24, 0x1C	; 28
     e7e:	82 bb       	out	0x12, r24	; 18
	
	//Ausgänge
	DDRC = (1<<PC5);
     e80:	80 e2       	ldi	r24, 0x20	; 32
     e82:	84 bb       	out	0x14, r24	; 20
	
	//erste zeiteinstellung
	zeitsetzen();
     e84:	ec dd       	rcall	.-1064   	; 0xa5e <_Z10zeitsetzenv>
	
	//Timer 1 Einstelungen
	TCNT1H = 0b11110001;
     e86:	81 ef       	ldi	r24, 0xF1	; 241
     e88:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     e8a:	80 ef       	ldi	r24, 0xF0	; 240
     e8c:	8c bd       	out	0x2c, r24	; 44
	TIMSK = (1<<TOIE1);
     e8e:	84 e0       	ldi	r24, 0x04	; 4
     e90:	89 bf       	out	0x39, r24	; 57
	TCCR1B = (1<<CS10) | (1<<CS12);
     e92:	85 e0       	ldi	r24, 0x05	; 5
     e94:	8e bd       	out	0x2e, r24	; 46
	
	//Interupts aktivieren
	sei();
     e96:	78 94       	sei
	
	//Wecker einschalten
	Wan=0;
     e98:	10 92 5c 01 	sts	0x015C, r1
     e9c:	08 95       	ret

00000e9e <__vector_8>:
#include "einstellungen.h"
#include "zeit.h"
#include "menue.h"
#include "ausgabe.h"

ISR(TIMER1_OVF_vect){
     e9e:	1f 92       	push	r1
     ea0:	0f 92       	push	r0
     ea2:	0f b6       	in	r0, 0x3f	; 63
     ea4:	0f 92       	push	r0
     ea6:	11 24       	eor	r1, r1
     ea8:	8f 93       	push	r24
	TCNT1H = 0b11110001;
     eaa:	81 ef       	ldi	r24, 0xF1	; 241
     eac:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     eae:	80 ef       	ldi	r24, 0xF0	; 240
     eb0:	8c bd       	out	0x2c, r24	; 44
	Sekunden++;
     eb2:	80 91 64 01 	lds	r24, 0x0164
     eb6:	8f 5f       	subi	r24, 0xFF	; 255
     eb8:	80 93 64 01 	sts	0x0164, r24
}
     ebc:	8f 91       	pop	r24
     ebe:	0f 90       	pop	r0
     ec0:	0f be       	out	0x3f, r0	; 63
     ec2:	0f 90       	pop	r0
     ec4:	1f 90       	pop	r1
     ec6:	18 95       	reti

00000ec8 <main>:

int main(void)
{
	init();
     ec8:	c0 df       	rcall	.-128    	; 0xe4a <_Z4initv>
	
	while(1)
	{
		if (Sekunden!=sektemp)
     eca:	90 91 64 01 	lds	r25, 0x0164
     ece:	80 91 5b 01 	lds	r24, 0x015B
     ed2:	98 17       	cp	r25, r24
     ed4:	39 f0       	breq	.+14     	; 0xee4 <main+0x1c>
		{
			zeit();
     ed6:	5e da       	rcall	.-2884   	; 0x394 <_Z4zeitv>
			aus(1,3);
     ed8:	63 e0       	ldi	r22, 0x03	; 3
     eda:	81 e0       	ldi	r24, 0x01	; 1
     edc:	fe da       	rcall	.-2564   	; 0x4da <_Z3aushh>
			aus(2,1);
     ede:	61 e0       	ldi	r22, 0x01	; 1
     ee0:	82 e0       	ldi	r24, 0x02	; 2
     ee2:	fb da       	rcall	.-2570   	; 0x4da <_Z3aushh>
     ee4:	82 99       	sbic	0x10, 2	; 16
     ee6:	11 c0       	rjmp	.+34     	; 0xf0a <main+0x42>
     ee8:	8f ef       	ldi	r24, 0xFF	; 255
     eea:	93 eb       	ldi	r25, 0xB3	; 179
     eec:	01 97       	sbiw	r24, 0x01	; 1
     eee:	f1 f7       	brne	.-4      	; 0xeec <main+0x24>
     ef0:	00 c0       	rjmp	.+0      	; 0xef2 <main+0x2a>
     ef2:	00 00       	nop
     ef4:	8f ef       	ldi	r24, 0xFF	; 255
     ef6:	93 e2       	ldi	r25, 0x23	; 35
     ef8:	01 97       	sbiw	r24, 0x01	; 1
     efa:	f1 f7       	brne	.-4      	; 0xef8 <main+0x30>
     efc:	00 c0       	rjmp	.+0      	; 0xefe <main+0x36>
     efe:	00 00       	nop
		}
		if(debounce(&PIND,2))
     f00:	82 99       	sbic	0x10, 2	; 16
     f02:	03 c0       	rjmp	.+6      	; 0xf0a <main+0x42>
		{
			Wan=0;
     f04:	10 92 5c 01 	sts	0x015C, r1
			PORTC &= ~(1<<PC5);
     f08:	ad 98       	cbi	0x15, 5	; 21
     f0a:	84 99       	sbic	0x10, 4	; 16
     f0c:	15 c0       	rjmp	.+42     	; 0xf38 <main+0x70>
     f0e:	8f ef       	ldi	r24, 0xFF	; 255
     f10:	93 eb       	ldi	r25, 0xB3	; 179
     f12:	01 97       	sbiw	r24, 0x01	; 1
     f14:	f1 f7       	brne	.-4      	; 0xf12 <main+0x4a>
     f16:	00 c0       	rjmp	.+0      	; 0xf18 <main+0x50>
     f18:	00 00       	nop
     f1a:	8f ef       	ldi	r24, 0xFF	; 255
     f1c:	93 e2       	ldi	r25, 0x23	; 35
     f1e:	01 97       	sbiw	r24, 0x01	; 1
     f20:	f1 f7       	brne	.-4      	; 0xf1e <main+0x56>
     f22:	00 c0       	rjmp	.+0      	; 0xf24 <main+0x5c>
     f24:	00 00       	nop
		}
		if (debounce(&PIND,PD4))
     f26:	84 99       	sbic	0x10, 4	; 16
     f28:	07 c0       	rjmp	.+14     	; 0xf38 <main+0x70>
		{
			menu();
     f2a:	b6 dd       	rcall	.-1172   	; 0xa98 <_Z4menuv>
			aus(1,3);
     f2c:	63 e0       	ldi	r22, 0x03	; 3
     f2e:	81 e0       	ldi	r24, 0x01	; 1
     f30:	d4 da       	rcall	.-2648   	; 0x4da <_Z3aushh>
			aus(2,1);
     f32:	61 e0       	ldi	r22, 0x01	; 1
     f34:	82 e0       	ldi	r24, 0x02	; 2
     f36:	d1 da       	rcall	.-2654   	; 0x4da <_Z3aushh>
     f38:	83 99       	sbic	0x10, 3	; 16
     f3a:	c7 cf       	rjmp	.-114    	; 0xeca <main+0x2>
     f3c:	8f ef       	ldi	r24, 0xFF	; 255
     f3e:	93 eb       	ldi	r25, 0xB3	; 179
     f40:	01 97       	sbiw	r24, 0x01	; 1
     f42:	f1 f7       	brne	.-4      	; 0xf40 <main+0x78>
     f44:	00 c0       	rjmp	.+0      	; 0xf46 <main+0x7e>
     f46:	00 00       	nop
     f48:	8f ef       	ldi	r24, 0xFF	; 255
     f4a:	93 e2       	ldi	r25, 0x23	; 35
     f4c:	01 97       	sbiw	r24, 0x01	; 1
     f4e:	f1 f7       	brne	.-4      	; 0xf4c <main+0x84>
     f50:	00 c0       	rjmp	.+0      	; 0xf52 <main+0x8a>
     f52:	00 00       	nop
		}
		if (debounce(&PIND,PD3))
     f54:	83 99       	sbic	0x10, 3	; 16
     f56:	b9 cf       	rjmp	.-142    	; 0xeca <main+0x2>
		{
			switch (lampenstaerke)
     f58:	80 91 60 00 	lds	r24, 0x0060
     f5c:	82 30       	cpi	r24, 0x02	; 2
     f5e:	31 f0       	breq	.+12     	; 0xf6c <main+0xa4>
     f60:	83 30       	cpi	r24, 0x03	; 3
     f62:	31 f0       	breq	.+12     	; 0xf70 <main+0xa8>
     f64:	81 30       	cpi	r24, 0x01	; 1
     f66:	29 f4       	brne	.+10     	; 0xf72 <main+0xaa>
			{
				case 1:
					PORTC |= (1<<PC5);
     f68:	ad 9a       	sbi	0x15, 5	; 21
					break;
     f6a:	03 c0       	rjmp	.+6      	; 0xf72 <main+0xaa>
					
				case 2:
					PORTC |= (1<<PC5);
     f6c:	ad 9a       	sbi	0x15, 5	; 21
					break;
     f6e:	01 c0       	rjmp	.+2      	; 0xf72 <main+0xaa>
					
				case 3:
					PORTC |= (1<<PC5);
     f70:	ad 9a       	sbi	0x15, 5	; 21
					break;
					
				default:
					break;
			}
			if ( PORTC& (1<<PC3) )
     f72:	ab 9b       	sbis	0x15, 3	; 21
     f74:	aa cf       	rjmp	.-172    	; 0xeca <main+0x2>
			{
				PORTC &= ~(1<<PC5);
     f76:	ad 98       	cbi	0x15, 5	; 21
     f78:	a8 cf       	rjmp	.-176    	; 0xeca <main+0x2>

00000f7a <__subsf3>:
     f7a:	50 58       	subi	r21, 0x80	; 128

00000f7c <__addsf3>:
     f7c:	bb 27       	eor	r27, r27
     f7e:	aa 27       	eor	r26, r26
     f80:	0e d0       	rcall	.+28     	; 0xf9e <__addsf3x>
     f82:	1c c1       	rjmp	.+568    	; 0x11bc <__fp_round>
     f84:	0d d1       	rcall	.+538    	; 0x11a0 <__fp_pscA>
     f86:	30 f0       	brcs	.+12     	; 0xf94 <__addsf3+0x18>
     f88:	12 d1       	rcall	.+548    	; 0x11ae <__fp_pscB>
     f8a:	20 f0       	brcs	.+8      	; 0xf94 <__addsf3+0x18>
     f8c:	31 f4       	brne	.+12     	; 0xf9a <__addsf3+0x1e>
     f8e:	9f 3f       	cpi	r25, 0xFF	; 255
     f90:	11 f4       	brne	.+4      	; 0xf96 <__addsf3+0x1a>
     f92:	1e f4       	brtc	.+6      	; 0xf9a <__addsf3+0x1e>
     f94:	02 c1       	rjmp	.+516    	; 0x119a <__fp_nan>
     f96:	0e f4       	brtc	.+2      	; 0xf9a <__addsf3+0x1e>
     f98:	e0 95       	com	r30
     f9a:	e7 fb       	bst	r30, 7
     f9c:	f8 c0       	rjmp	.+496    	; 0x118e <__fp_inf>

00000f9e <__addsf3x>:
     f9e:	e9 2f       	mov	r30, r25
     fa0:	1e d1       	rcall	.+572    	; 0x11de <__fp_split3>
     fa2:	80 f3       	brcs	.-32     	; 0xf84 <__addsf3+0x8>
     fa4:	ba 17       	cp	r27, r26
     fa6:	62 07       	cpc	r22, r18
     fa8:	73 07       	cpc	r23, r19
     faa:	84 07       	cpc	r24, r20
     fac:	95 07       	cpc	r25, r21
     fae:	18 f0       	brcs	.+6      	; 0xfb6 <__addsf3x+0x18>
     fb0:	71 f4       	brne	.+28     	; 0xfce <__addsf3x+0x30>
     fb2:	9e f5       	brtc	.+102    	; 0x101a <__addsf3x+0x7c>
     fb4:	36 c1       	rjmp	.+620    	; 0x1222 <__fp_zero>
     fb6:	0e f4       	brtc	.+2      	; 0xfba <__addsf3x+0x1c>
     fb8:	e0 95       	com	r30
     fba:	0b 2e       	mov	r0, r27
     fbc:	ba 2f       	mov	r27, r26
     fbe:	a0 2d       	mov	r26, r0
     fc0:	0b 01       	movw	r0, r22
     fc2:	b9 01       	movw	r22, r18
     fc4:	90 01       	movw	r18, r0
     fc6:	0c 01       	movw	r0, r24
     fc8:	ca 01       	movw	r24, r20
     fca:	a0 01       	movw	r20, r0
     fcc:	11 24       	eor	r1, r1
     fce:	ff 27       	eor	r31, r31
     fd0:	59 1b       	sub	r21, r25
     fd2:	99 f0       	breq	.+38     	; 0xffa <__addsf3x+0x5c>
     fd4:	59 3f       	cpi	r21, 0xF9	; 249
     fd6:	50 f4       	brcc	.+20     	; 0xfec <__addsf3x+0x4e>
     fd8:	50 3e       	cpi	r21, 0xE0	; 224
     fda:	68 f1       	brcs	.+90     	; 0x1036 <__addsf3x+0x98>
     fdc:	1a 16       	cp	r1, r26
     fde:	f0 40       	sbci	r31, 0x00	; 0
     fe0:	a2 2f       	mov	r26, r18
     fe2:	23 2f       	mov	r18, r19
     fe4:	34 2f       	mov	r19, r20
     fe6:	44 27       	eor	r20, r20
     fe8:	58 5f       	subi	r21, 0xF8	; 248
     fea:	f3 cf       	rjmp	.-26     	; 0xfd2 <__addsf3x+0x34>
     fec:	46 95       	lsr	r20
     fee:	37 95       	ror	r19
     ff0:	27 95       	ror	r18
     ff2:	a7 95       	ror	r26
     ff4:	f0 40       	sbci	r31, 0x00	; 0
     ff6:	53 95       	inc	r21
     ff8:	c9 f7       	brne	.-14     	; 0xfec <__addsf3x+0x4e>
     ffa:	7e f4       	brtc	.+30     	; 0x101a <__addsf3x+0x7c>
     ffc:	1f 16       	cp	r1, r31
     ffe:	ba 0b       	sbc	r27, r26
    1000:	62 0b       	sbc	r22, r18
    1002:	73 0b       	sbc	r23, r19
    1004:	84 0b       	sbc	r24, r20
    1006:	ba f0       	brmi	.+46     	; 0x1036 <__addsf3x+0x98>
    1008:	91 50       	subi	r25, 0x01	; 1
    100a:	a1 f0       	breq	.+40     	; 0x1034 <__addsf3x+0x96>
    100c:	ff 0f       	add	r31, r31
    100e:	bb 1f       	adc	r27, r27
    1010:	66 1f       	adc	r22, r22
    1012:	77 1f       	adc	r23, r23
    1014:	88 1f       	adc	r24, r24
    1016:	c2 f7       	brpl	.-16     	; 0x1008 <__addsf3x+0x6a>
    1018:	0e c0       	rjmp	.+28     	; 0x1036 <__addsf3x+0x98>
    101a:	ba 0f       	add	r27, r26
    101c:	62 1f       	adc	r22, r18
    101e:	73 1f       	adc	r23, r19
    1020:	84 1f       	adc	r24, r20
    1022:	48 f4       	brcc	.+18     	; 0x1036 <__addsf3x+0x98>
    1024:	87 95       	ror	r24
    1026:	77 95       	ror	r23
    1028:	67 95       	ror	r22
    102a:	b7 95       	ror	r27
    102c:	f7 95       	ror	r31
    102e:	9e 3f       	cpi	r25, 0xFE	; 254
    1030:	08 f0       	brcs	.+2      	; 0x1034 <__addsf3x+0x96>
    1032:	b3 cf       	rjmp	.-154    	; 0xf9a <__addsf3+0x1e>
    1034:	93 95       	inc	r25
    1036:	88 0f       	add	r24, r24
    1038:	08 f0       	brcs	.+2      	; 0x103c <__addsf3x+0x9e>
    103a:	99 27       	eor	r25, r25
    103c:	ee 0f       	add	r30, r30
    103e:	97 95       	ror	r25
    1040:	87 95       	ror	r24
    1042:	08 95       	ret

00001044 <__divsf3>:
    1044:	0c d0       	rcall	.+24     	; 0x105e <__divsf3x>
    1046:	ba c0       	rjmp	.+372    	; 0x11bc <__fp_round>
    1048:	b2 d0       	rcall	.+356    	; 0x11ae <__fp_pscB>
    104a:	40 f0       	brcs	.+16     	; 0x105c <__divsf3+0x18>
    104c:	a9 d0       	rcall	.+338    	; 0x11a0 <__fp_pscA>
    104e:	30 f0       	brcs	.+12     	; 0x105c <__divsf3+0x18>
    1050:	21 f4       	brne	.+8      	; 0x105a <__divsf3+0x16>
    1052:	5f 3f       	cpi	r21, 0xFF	; 255
    1054:	19 f0       	breq	.+6      	; 0x105c <__divsf3+0x18>
    1056:	9b c0       	rjmp	.+310    	; 0x118e <__fp_inf>
    1058:	51 11       	cpse	r21, r1
    105a:	e4 c0       	rjmp	.+456    	; 0x1224 <__fp_szero>
    105c:	9e c0       	rjmp	.+316    	; 0x119a <__fp_nan>

0000105e <__divsf3x>:
    105e:	bf d0       	rcall	.+382    	; 0x11de <__fp_split3>
    1060:	98 f3       	brcs	.-26     	; 0x1048 <__divsf3+0x4>

00001062 <__divsf3_pse>:
    1062:	99 23       	and	r25, r25
    1064:	c9 f3       	breq	.-14     	; 0x1058 <__divsf3+0x14>
    1066:	55 23       	and	r21, r21
    1068:	b1 f3       	breq	.-20     	; 0x1056 <__divsf3+0x12>
    106a:	95 1b       	sub	r25, r21
    106c:	55 0b       	sbc	r21, r21
    106e:	bb 27       	eor	r27, r27
    1070:	aa 27       	eor	r26, r26
    1072:	62 17       	cp	r22, r18
    1074:	73 07       	cpc	r23, r19
    1076:	84 07       	cpc	r24, r20
    1078:	38 f0       	brcs	.+14     	; 0x1088 <__divsf3_pse+0x26>
    107a:	9f 5f       	subi	r25, 0xFF	; 255
    107c:	5f 4f       	sbci	r21, 0xFF	; 255
    107e:	22 0f       	add	r18, r18
    1080:	33 1f       	adc	r19, r19
    1082:	44 1f       	adc	r20, r20
    1084:	aa 1f       	adc	r26, r26
    1086:	a9 f3       	breq	.-22     	; 0x1072 <__divsf3_pse+0x10>
    1088:	33 d0       	rcall	.+102    	; 0x10f0 <__divsf3_pse+0x8e>
    108a:	0e 2e       	mov	r0, r30
    108c:	3a f0       	brmi	.+14     	; 0x109c <__divsf3_pse+0x3a>
    108e:	e0 e8       	ldi	r30, 0x80	; 128
    1090:	30 d0       	rcall	.+96     	; 0x10f2 <__divsf3_pse+0x90>
    1092:	91 50       	subi	r25, 0x01	; 1
    1094:	50 40       	sbci	r21, 0x00	; 0
    1096:	e6 95       	lsr	r30
    1098:	00 1c       	adc	r0, r0
    109a:	ca f7       	brpl	.-14     	; 0x108e <__divsf3_pse+0x2c>
    109c:	29 d0       	rcall	.+82     	; 0x10f0 <__divsf3_pse+0x8e>
    109e:	fe 2f       	mov	r31, r30
    10a0:	27 d0       	rcall	.+78     	; 0x10f0 <__divsf3_pse+0x8e>
    10a2:	66 0f       	add	r22, r22
    10a4:	77 1f       	adc	r23, r23
    10a6:	88 1f       	adc	r24, r24
    10a8:	bb 1f       	adc	r27, r27
    10aa:	26 17       	cp	r18, r22
    10ac:	37 07       	cpc	r19, r23
    10ae:	48 07       	cpc	r20, r24
    10b0:	ab 07       	cpc	r26, r27
    10b2:	b0 e8       	ldi	r27, 0x80	; 128
    10b4:	09 f0       	breq	.+2      	; 0x10b8 <__divsf3_pse+0x56>
    10b6:	bb 0b       	sbc	r27, r27
    10b8:	80 2d       	mov	r24, r0
    10ba:	bf 01       	movw	r22, r30
    10bc:	ff 27       	eor	r31, r31
    10be:	93 58       	subi	r25, 0x83	; 131
    10c0:	5f 4f       	sbci	r21, 0xFF	; 255
    10c2:	2a f0       	brmi	.+10     	; 0x10ce <__divsf3_pse+0x6c>
    10c4:	9e 3f       	cpi	r25, 0xFE	; 254
    10c6:	51 05       	cpc	r21, r1
    10c8:	68 f0       	brcs	.+26     	; 0x10e4 <__divsf3_pse+0x82>
    10ca:	61 c0       	rjmp	.+194    	; 0x118e <__fp_inf>
    10cc:	ab c0       	rjmp	.+342    	; 0x1224 <__fp_szero>
    10ce:	5f 3f       	cpi	r21, 0xFF	; 255
    10d0:	ec f3       	brlt	.-6      	; 0x10cc <__divsf3_pse+0x6a>
    10d2:	98 3e       	cpi	r25, 0xE8	; 232
    10d4:	dc f3       	brlt	.-10     	; 0x10cc <__divsf3_pse+0x6a>
    10d6:	86 95       	lsr	r24
    10d8:	77 95       	ror	r23
    10da:	67 95       	ror	r22
    10dc:	b7 95       	ror	r27
    10de:	f7 95       	ror	r31
    10e0:	9f 5f       	subi	r25, 0xFF	; 255
    10e2:	c9 f7       	brne	.-14     	; 0x10d6 <__divsf3_pse+0x74>
    10e4:	88 0f       	add	r24, r24
    10e6:	91 1d       	adc	r25, r1
    10e8:	96 95       	lsr	r25
    10ea:	87 95       	ror	r24
    10ec:	97 f9       	bld	r25, 7
    10ee:	08 95       	ret
    10f0:	e1 e0       	ldi	r30, 0x01	; 1
    10f2:	66 0f       	add	r22, r22
    10f4:	77 1f       	adc	r23, r23
    10f6:	88 1f       	adc	r24, r24
    10f8:	bb 1f       	adc	r27, r27
    10fa:	62 17       	cp	r22, r18
    10fc:	73 07       	cpc	r23, r19
    10fe:	84 07       	cpc	r24, r20
    1100:	ba 07       	cpc	r27, r26
    1102:	20 f0       	brcs	.+8      	; 0x110c <__divsf3_pse+0xaa>
    1104:	62 1b       	sub	r22, r18
    1106:	73 0b       	sbc	r23, r19
    1108:	84 0b       	sbc	r24, r20
    110a:	ba 0b       	sbc	r27, r26
    110c:	ee 1f       	adc	r30, r30
    110e:	88 f7       	brcc	.-30     	; 0x10f2 <__divsf3_pse+0x90>
    1110:	e0 95       	com	r30
    1112:	08 95       	ret

00001114 <__floatunsisf>:
    1114:	e8 94       	clt
    1116:	09 c0       	rjmp	.+18     	; 0x112a <__floatsisf+0x12>

00001118 <__floatsisf>:
    1118:	97 fb       	bst	r25, 7
    111a:	3e f4       	brtc	.+14     	; 0x112a <__floatsisf+0x12>
    111c:	90 95       	com	r25
    111e:	80 95       	com	r24
    1120:	70 95       	com	r23
    1122:	61 95       	neg	r22
    1124:	7f 4f       	sbci	r23, 0xFF	; 255
    1126:	8f 4f       	sbci	r24, 0xFF	; 255
    1128:	9f 4f       	sbci	r25, 0xFF	; 255
    112a:	99 23       	and	r25, r25
    112c:	a9 f0       	breq	.+42     	; 0x1158 <__floatsisf+0x40>
    112e:	f9 2f       	mov	r31, r25
    1130:	96 e9       	ldi	r25, 0x96	; 150
    1132:	bb 27       	eor	r27, r27
    1134:	93 95       	inc	r25
    1136:	f6 95       	lsr	r31
    1138:	87 95       	ror	r24
    113a:	77 95       	ror	r23
    113c:	67 95       	ror	r22
    113e:	b7 95       	ror	r27
    1140:	f1 11       	cpse	r31, r1
    1142:	f8 cf       	rjmp	.-16     	; 0x1134 <__floatsisf+0x1c>
    1144:	fa f4       	brpl	.+62     	; 0x1184 <__floatsisf+0x6c>
    1146:	bb 0f       	add	r27, r27
    1148:	11 f4       	brne	.+4      	; 0x114e <__floatsisf+0x36>
    114a:	60 ff       	sbrs	r22, 0
    114c:	1b c0       	rjmp	.+54     	; 0x1184 <__floatsisf+0x6c>
    114e:	6f 5f       	subi	r22, 0xFF	; 255
    1150:	7f 4f       	sbci	r23, 0xFF	; 255
    1152:	8f 4f       	sbci	r24, 0xFF	; 255
    1154:	9f 4f       	sbci	r25, 0xFF	; 255
    1156:	16 c0       	rjmp	.+44     	; 0x1184 <__floatsisf+0x6c>
    1158:	88 23       	and	r24, r24
    115a:	11 f0       	breq	.+4      	; 0x1160 <__floatsisf+0x48>
    115c:	96 e9       	ldi	r25, 0x96	; 150
    115e:	11 c0       	rjmp	.+34     	; 0x1182 <__floatsisf+0x6a>
    1160:	77 23       	and	r23, r23
    1162:	21 f0       	breq	.+8      	; 0x116c <__floatsisf+0x54>
    1164:	9e e8       	ldi	r25, 0x8E	; 142
    1166:	87 2f       	mov	r24, r23
    1168:	76 2f       	mov	r23, r22
    116a:	05 c0       	rjmp	.+10     	; 0x1176 <__floatsisf+0x5e>
    116c:	66 23       	and	r22, r22
    116e:	71 f0       	breq	.+28     	; 0x118c <__floatsisf+0x74>
    1170:	96 e8       	ldi	r25, 0x86	; 134
    1172:	86 2f       	mov	r24, r22
    1174:	70 e0       	ldi	r23, 0x00	; 0
    1176:	60 e0       	ldi	r22, 0x00	; 0
    1178:	2a f0       	brmi	.+10     	; 0x1184 <__floatsisf+0x6c>
    117a:	9a 95       	dec	r25
    117c:	66 0f       	add	r22, r22
    117e:	77 1f       	adc	r23, r23
    1180:	88 1f       	adc	r24, r24
    1182:	da f7       	brpl	.-10     	; 0x117a <__floatsisf+0x62>
    1184:	88 0f       	add	r24, r24
    1186:	96 95       	lsr	r25
    1188:	87 95       	ror	r24
    118a:	97 f9       	bld	r25, 7
    118c:	08 95       	ret

0000118e <__fp_inf>:
    118e:	97 f9       	bld	r25, 7
    1190:	9f 67       	ori	r25, 0x7F	; 127
    1192:	80 e8       	ldi	r24, 0x80	; 128
    1194:	70 e0       	ldi	r23, 0x00	; 0
    1196:	60 e0       	ldi	r22, 0x00	; 0
    1198:	08 95       	ret

0000119a <__fp_nan>:
    119a:	9f ef       	ldi	r25, 0xFF	; 255
    119c:	80 ec       	ldi	r24, 0xC0	; 192
    119e:	08 95       	ret

000011a0 <__fp_pscA>:
    11a0:	00 24       	eor	r0, r0
    11a2:	0a 94       	dec	r0
    11a4:	16 16       	cp	r1, r22
    11a6:	17 06       	cpc	r1, r23
    11a8:	18 06       	cpc	r1, r24
    11aa:	09 06       	cpc	r0, r25
    11ac:	08 95       	ret

000011ae <__fp_pscB>:
    11ae:	00 24       	eor	r0, r0
    11b0:	0a 94       	dec	r0
    11b2:	12 16       	cp	r1, r18
    11b4:	13 06       	cpc	r1, r19
    11b6:	14 06       	cpc	r1, r20
    11b8:	05 06       	cpc	r0, r21
    11ba:	08 95       	ret

000011bc <__fp_round>:
    11bc:	09 2e       	mov	r0, r25
    11be:	03 94       	inc	r0
    11c0:	00 0c       	add	r0, r0
    11c2:	11 f4       	brne	.+4      	; 0x11c8 <__fp_round+0xc>
    11c4:	88 23       	and	r24, r24
    11c6:	52 f0       	brmi	.+20     	; 0x11dc <__fp_round+0x20>
    11c8:	bb 0f       	add	r27, r27
    11ca:	40 f4       	brcc	.+16     	; 0x11dc <__fp_round+0x20>
    11cc:	bf 2b       	or	r27, r31
    11ce:	11 f4       	brne	.+4      	; 0x11d4 <__fp_round+0x18>
    11d0:	60 ff       	sbrs	r22, 0
    11d2:	04 c0       	rjmp	.+8      	; 0x11dc <__fp_round+0x20>
    11d4:	6f 5f       	subi	r22, 0xFF	; 255
    11d6:	7f 4f       	sbci	r23, 0xFF	; 255
    11d8:	8f 4f       	sbci	r24, 0xFF	; 255
    11da:	9f 4f       	sbci	r25, 0xFF	; 255
    11dc:	08 95       	ret

000011de <__fp_split3>:
    11de:	57 fd       	sbrc	r21, 7
    11e0:	90 58       	subi	r25, 0x80	; 128
    11e2:	44 0f       	add	r20, r20
    11e4:	55 1f       	adc	r21, r21
    11e6:	59 f0       	breq	.+22     	; 0x11fe <__fp_splitA+0x10>
    11e8:	5f 3f       	cpi	r21, 0xFF	; 255
    11ea:	71 f0       	breq	.+28     	; 0x1208 <__fp_splitA+0x1a>
    11ec:	47 95       	ror	r20

000011ee <__fp_splitA>:
    11ee:	88 0f       	add	r24, r24
    11f0:	97 fb       	bst	r25, 7
    11f2:	99 1f       	adc	r25, r25
    11f4:	61 f0       	breq	.+24     	; 0x120e <__fp_splitA+0x20>
    11f6:	9f 3f       	cpi	r25, 0xFF	; 255
    11f8:	79 f0       	breq	.+30     	; 0x1218 <__fp_splitA+0x2a>
    11fa:	87 95       	ror	r24
    11fc:	08 95       	ret
    11fe:	12 16       	cp	r1, r18
    1200:	13 06       	cpc	r1, r19
    1202:	14 06       	cpc	r1, r20
    1204:	55 1f       	adc	r21, r21
    1206:	f2 cf       	rjmp	.-28     	; 0x11ec <__fp_split3+0xe>
    1208:	46 95       	lsr	r20
    120a:	f1 df       	rcall	.-30     	; 0x11ee <__fp_splitA>
    120c:	08 c0       	rjmp	.+16     	; 0x121e <__fp_splitA+0x30>
    120e:	16 16       	cp	r1, r22
    1210:	17 06       	cpc	r1, r23
    1212:	18 06       	cpc	r1, r24
    1214:	99 1f       	adc	r25, r25
    1216:	f1 cf       	rjmp	.-30     	; 0x11fa <__fp_splitA+0xc>
    1218:	86 95       	lsr	r24
    121a:	71 05       	cpc	r23, r1
    121c:	61 05       	cpc	r22, r1
    121e:	08 94       	sec
    1220:	08 95       	ret

00001222 <__fp_zero>:
    1222:	e8 94       	clt

00001224 <__fp_szero>:
    1224:	bb 27       	eor	r27, r27
    1226:	66 27       	eor	r22, r22
    1228:	77 27       	eor	r23, r23
    122a:	cb 01       	movw	r24, r22
    122c:	97 f9       	bld	r25, 7
    122e:	08 95       	ret

00001230 <__mulsf3>:
    1230:	0b d0       	rcall	.+22     	; 0x1248 <__mulsf3x>
    1232:	c4 cf       	rjmp	.-120    	; 0x11bc <__fp_round>
    1234:	b5 df       	rcall	.-150    	; 0x11a0 <__fp_pscA>
    1236:	28 f0       	brcs	.+10     	; 0x1242 <__mulsf3+0x12>
    1238:	ba df       	rcall	.-140    	; 0x11ae <__fp_pscB>
    123a:	18 f0       	brcs	.+6      	; 0x1242 <__mulsf3+0x12>
    123c:	95 23       	and	r25, r21
    123e:	09 f0       	breq	.+2      	; 0x1242 <__mulsf3+0x12>
    1240:	a6 cf       	rjmp	.-180    	; 0x118e <__fp_inf>
    1242:	ab cf       	rjmp	.-170    	; 0x119a <__fp_nan>
    1244:	11 24       	eor	r1, r1
    1246:	ee cf       	rjmp	.-36     	; 0x1224 <__fp_szero>

00001248 <__mulsf3x>:
    1248:	ca df       	rcall	.-108    	; 0x11de <__fp_split3>
    124a:	a0 f3       	brcs	.-24     	; 0x1234 <__mulsf3+0x4>

0000124c <__mulsf3_pse>:
    124c:	95 9f       	mul	r25, r21
    124e:	d1 f3       	breq	.-12     	; 0x1244 <__mulsf3+0x14>
    1250:	95 0f       	add	r25, r21
    1252:	50 e0       	ldi	r21, 0x00	; 0
    1254:	55 1f       	adc	r21, r21
    1256:	62 9f       	mul	r22, r18
    1258:	f0 01       	movw	r30, r0
    125a:	72 9f       	mul	r23, r18
    125c:	bb 27       	eor	r27, r27
    125e:	f0 0d       	add	r31, r0
    1260:	b1 1d       	adc	r27, r1
    1262:	63 9f       	mul	r22, r19
    1264:	aa 27       	eor	r26, r26
    1266:	f0 0d       	add	r31, r0
    1268:	b1 1d       	adc	r27, r1
    126a:	aa 1f       	adc	r26, r26
    126c:	64 9f       	mul	r22, r20
    126e:	66 27       	eor	r22, r22
    1270:	b0 0d       	add	r27, r0
    1272:	a1 1d       	adc	r26, r1
    1274:	66 1f       	adc	r22, r22
    1276:	82 9f       	mul	r24, r18
    1278:	22 27       	eor	r18, r18
    127a:	b0 0d       	add	r27, r0
    127c:	a1 1d       	adc	r26, r1
    127e:	62 1f       	adc	r22, r18
    1280:	73 9f       	mul	r23, r19
    1282:	b0 0d       	add	r27, r0
    1284:	a1 1d       	adc	r26, r1
    1286:	62 1f       	adc	r22, r18
    1288:	83 9f       	mul	r24, r19
    128a:	a0 0d       	add	r26, r0
    128c:	61 1d       	adc	r22, r1
    128e:	22 1f       	adc	r18, r18
    1290:	74 9f       	mul	r23, r20
    1292:	33 27       	eor	r19, r19
    1294:	a0 0d       	add	r26, r0
    1296:	61 1d       	adc	r22, r1
    1298:	23 1f       	adc	r18, r19
    129a:	84 9f       	mul	r24, r20
    129c:	60 0d       	add	r22, r0
    129e:	21 1d       	adc	r18, r1
    12a0:	82 2f       	mov	r24, r18
    12a2:	76 2f       	mov	r23, r22
    12a4:	6a 2f       	mov	r22, r26
    12a6:	11 24       	eor	r1, r1
    12a8:	9f 57       	subi	r25, 0x7F	; 127
    12aa:	50 40       	sbci	r21, 0x00	; 0
    12ac:	8a f0       	brmi	.+34     	; 0x12d0 <__mulsf3_pse+0x84>
    12ae:	e1 f0       	breq	.+56     	; 0x12e8 <__mulsf3_pse+0x9c>
    12b0:	88 23       	and	r24, r24
    12b2:	4a f0       	brmi	.+18     	; 0x12c6 <__mulsf3_pse+0x7a>
    12b4:	ee 0f       	add	r30, r30
    12b6:	ff 1f       	adc	r31, r31
    12b8:	bb 1f       	adc	r27, r27
    12ba:	66 1f       	adc	r22, r22
    12bc:	77 1f       	adc	r23, r23
    12be:	88 1f       	adc	r24, r24
    12c0:	91 50       	subi	r25, 0x01	; 1
    12c2:	50 40       	sbci	r21, 0x00	; 0
    12c4:	a9 f7       	brne	.-22     	; 0x12b0 <__mulsf3_pse+0x64>
    12c6:	9e 3f       	cpi	r25, 0xFE	; 254
    12c8:	51 05       	cpc	r21, r1
    12ca:	70 f0       	brcs	.+28     	; 0x12e8 <__mulsf3_pse+0x9c>
    12cc:	60 cf       	rjmp	.-320    	; 0x118e <__fp_inf>
    12ce:	aa cf       	rjmp	.-172    	; 0x1224 <__fp_szero>
    12d0:	5f 3f       	cpi	r21, 0xFF	; 255
    12d2:	ec f3       	brlt	.-6      	; 0x12ce <__mulsf3_pse+0x82>
    12d4:	98 3e       	cpi	r25, 0xE8	; 232
    12d6:	dc f3       	brlt	.-10     	; 0x12ce <__mulsf3_pse+0x82>
    12d8:	86 95       	lsr	r24
    12da:	77 95       	ror	r23
    12dc:	67 95       	ror	r22
    12de:	b7 95       	ror	r27
    12e0:	f7 95       	ror	r31
    12e2:	e7 95       	ror	r30
    12e4:	9f 5f       	subi	r25, 0xFF	; 255
    12e6:	c1 f7       	brne	.-16     	; 0x12d8 <__mulsf3_pse+0x8c>
    12e8:	fe 2b       	or	r31, r30
    12ea:	88 0f       	add	r24, r24
    12ec:	91 1d       	adc	r25, r1
    12ee:	96 95       	lsr	r25
    12f0:	87 95       	ror	r24
    12f2:	97 f9       	bld	r25, 7
    12f4:	08 95       	ret

000012f6 <dtostrf>:
    12f6:	ef 92       	push	r14
    12f8:	0f 93       	push	r16
    12fa:	1f 93       	push	r17
    12fc:	cf 93       	push	r28
    12fe:	c0 2f       	mov	r28, r16
    1300:	47 ff       	sbrs	r20, 7
    1302:	02 c0       	rjmp	.+4      	; 0x1308 <dtostrf+0x12>
    1304:	34 e1       	ldi	r19, 0x14	; 20
    1306:	01 c0       	rjmp	.+2      	; 0x130a <dtostrf+0x14>
    1308:	34 e0       	ldi	r19, 0x04	; 4
    130a:	e4 2f       	mov	r30, r20
    130c:	ff 27       	eor	r31, r31
    130e:	e7 fd       	sbrc	r30, 7
    1310:	f0 95       	com	r31
    1312:	f7 ff       	sbrs	r31, 7
    1314:	03 c0       	rjmp	.+6      	; 0x131c <dtostrf+0x26>
    1316:	f1 95       	neg	r31
    1318:	e1 95       	neg	r30
    131a:	f1 09       	sbc	r31, r1
    131c:	e3 2e       	mov	r14, r19
    131e:	02 2f       	mov	r16, r18
    1320:	2e 2f       	mov	r18, r30
    1322:	4c 2f       	mov	r20, r28
    1324:	51 2f       	mov	r21, r17
    1326:	26 d0       	rcall	.+76     	; 0x1374 <dtoa_prf>
    1328:	8c 2f       	mov	r24, r28
    132a:	91 2f       	mov	r25, r17
    132c:	cf 91       	pop	r28
    132e:	1f 91       	pop	r17
    1330:	0f 91       	pop	r16
    1332:	ef 90       	pop	r14
    1334:	08 95       	ret

00001336 <itoa>:
    1336:	fb 01       	movw	r30, r22
    1338:	9f 01       	movw	r18, r30
    133a:	e8 94       	clt
    133c:	42 30       	cpi	r20, 0x02	; 2
    133e:	bc f0       	brlt	.+46     	; 0x136e <itoa+0x38>
    1340:	45 32       	cpi	r20, 0x25	; 37
    1342:	ac f4       	brge	.+42     	; 0x136e <itoa+0x38>
    1344:	4a 30       	cpi	r20, 0x0A	; 10
    1346:	29 f4       	brne	.+10     	; 0x1352 <itoa+0x1c>
    1348:	97 fb       	bst	r25, 7
    134a:	1e f4       	brtc	.+6      	; 0x1352 <itoa+0x1c>
    134c:	90 95       	com	r25
    134e:	81 95       	neg	r24
    1350:	9f 4f       	sbci	r25, 0xFF	; 255
    1352:	64 2f       	mov	r22, r20
    1354:	77 27       	eor	r23, r23
    1356:	72 d2       	rcall	.+1252   	; 0x183c <__udivmodhi4>
    1358:	80 5d       	subi	r24, 0xD0	; 208
    135a:	8a 33       	cpi	r24, 0x3A	; 58
    135c:	0c f0       	brlt	.+2      	; 0x1360 <itoa+0x2a>
    135e:	89 5d       	subi	r24, 0xD9	; 217
    1360:	81 93       	st	Z+, r24
    1362:	cb 01       	movw	r24, r22
    1364:	00 97       	sbiw	r24, 0x00	; 0
    1366:	a9 f7       	brne	.-22     	; 0x1352 <itoa+0x1c>
    1368:	16 f4       	brtc	.+4      	; 0x136e <itoa+0x38>
    136a:	5d e2       	ldi	r21, 0x2D	; 45
    136c:	51 93       	st	Z+, r21
    136e:	10 82       	st	Z, r1
    1370:	c9 01       	movw	r24, r18
    1372:	54 c2       	rjmp	.+1192   	; 0x181c <strrev>

00001374 <dtoa_prf>:
    1374:	6f 92       	push	r6
    1376:	7f 92       	push	r7
    1378:	9f 92       	push	r9
    137a:	af 92       	push	r10
    137c:	bf 92       	push	r11
    137e:	cf 92       	push	r12
    1380:	df 92       	push	r13
    1382:	ef 92       	push	r14
    1384:	ff 92       	push	r15
    1386:	0f 93       	push	r16
    1388:	1f 93       	push	r17
    138a:	cf 93       	push	r28
    138c:	df 93       	push	r29
    138e:	cd b7       	in	r28, 0x3d	; 61
    1390:	de b7       	in	r29, 0x3e	; 62
    1392:	29 97       	sbiw	r28, 0x09	; 9
    1394:	0f b6       	in	r0, 0x3f	; 63
    1396:	f8 94       	cli
    1398:	de bf       	out	0x3e, r29	; 62
    139a:	0f be       	out	0x3f, r0	; 63
    139c:	cd bf       	out	0x3d, r28	; 61
    139e:	6a 01       	movw	r12, r20
    13a0:	b2 2e       	mov	r11, r18
    13a2:	10 2f       	mov	r17, r16
    13a4:	0c 33       	cpi	r16, 0x3C	; 60
    13a6:	18 f4       	brcc	.+6      	; 0x13ae <dtoa_prf+0x3a>
    13a8:	f0 2e       	mov	r15, r16
    13aa:	f3 94       	inc	r15
    13ac:	02 c0       	rjmp	.+4      	; 0x13b2 <dtoa_prf+0x3e>
    13ae:	5c e3       	ldi	r21, 0x3C	; 60
    13b0:	f5 2e       	mov	r15, r21
    13b2:	0f 2d       	mov	r16, r15
    13b4:	27 e0       	ldi	r18, 0x07	; 7
    13b6:	ae 01       	movw	r20, r28
    13b8:	4f 5f       	subi	r20, 0xFF	; 255
    13ba:	5f 4f       	sbci	r21, 0xFF	; 255
    13bc:	57 d1       	rcall	.+686    	; 0x166c <__ftoa_engine>
    13be:	79 81       	ldd	r23, Y+1	; 0x01
    13c0:	27 2f       	mov	r18, r23
    13c2:	29 70       	andi	r18, 0x09	; 9
    13c4:	21 30       	cpi	r18, 0x01	; 1
    13c6:	31 f0       	breq	.+12     	; 0x13d4 <dtoa_prf+0x60>
    13c8:	e1 fc       	sbrc	r14, 1
    13ca:	06 c0       	rjmp	.+12     	; 0x13d8 <dtoa_prf+0x64>
    13cc:	e0 fe       	sbrs	r14, 0
    13ce:	06 c0       	rjmp	.+12     	; 0x13dc <dtoa_prf+0x68>
    13d0:	60 e2       	ldi	r22, 0x20	; 32
    13d2:	05 c0       	rjmp	.+10     	; 0x13de <dtoa_prf+0x6a>
    13d4:	6d e2       	ldi	r22, 0x2D	; 45
    13d6:	03 c0       	rjmp	.+6      	; 0x13de <dtoa_prf+0x6a>
    13d8:	6b e2       	ldi	r22, 0x2B	; 43
    13da:	01 c0       	rjmp	.+2      	; 0x13de <dtoa_prf+0x6a>
    13dc:	60 e0       	ldi	r22, 0x00	; 0
    13de:	73 ff       	sbrs	r23, 3
    13e0:	3d c0       	rjmp	.+122    	; 0x145c <dtoa_prf+0xe8>
    13e2:	66 23       	and	r22, r22
    13e4:	11 f0       	breq	.+4      	; 0x13ea <dtoa_prf+0x76>
    13e6:	84 e0       	ldi	r24, 0x04	; 4
    13e8:	01 c0       	rjmp	.+2      	; 0x13ec <dtoa_prf+0x78>
    13ea:	83 e0       	ldi	r24, 0x03	; 3
    13ec:	8b 15       	cp	r24, r11
    13ee:	10 f4       	brcc	.+4      	; 0x13f4 <dtoa_prf+0x80>
    13f0:	b8 1a       	sub	r11, r24
    13f2:	01 c0       	rjmp	.+2      	; 0x13f6 <dtoa_prf+0x82>
    13f4:	b1 2c       	mov	r11, r1
    13f6:	e4 fc       	sbrc	r14, 4
    13f8:	0b c0       	rjmp	.+22     	; 0x1410 <dtoa_prf+0x9c>
    13fa:	8b 2d       	mov	r24, r11
    13fc:	f6 01       	movw	r30, r12
    13fe:	90 e2       	ldi	r25, 0x20	; 32
    1400:	02 c0       	rjmp	.+4      	; 0x1406 <dtoa_prf+0x92>
    1402:	91 93       	st	Z+, r25
    1404:	81 50       	subi	r24, 0x01	; 1
    1406:	81 11       	cpse	r24, r1
    1408:	fc cf       	rjmp	.-8      	; 0x1402 <dtoa_prf+0x8e>
    140a:	cb 0c       	add	r12, r11
    140c:	d1 1c       	adc	r13, r1
    140e:	b1 2c       	mov	r11, r1
    1410:	66 23       	and	r22, r22
    1412:	19 f0       	breq	.+6      	; 0x141a <dtoa_prf+0xa6>
    1414:	d6 01       	movw	r26, r12
    1416:	6d 93       	st	X+, r22
    1418:	6d 01       	movw	r12, r26
    141a:	e2 fe       	sbrs	r14, 2
    141c:	0a c0       	rjmp	.+20     	; 0x1432 <dtoa_prf+0xbe>
    141e:	8e e4       	ldi	r24, 0x4E	; 78
    1420:	f6 01       	movw	r30, r12
    1422:	80 83       	st	Z, r24
    1424:	91 e4       	ldi	r25, 0x41	; 65
    1426:	91 83       	std	Z+1, r25	; 0x01
    1428:	82 83       	std	Z+2, r24	; 0x02
    142a:	f3 e0       	ldi	r31, 0x03	; 3
    142c:	cf 0e       	add	r12, r31
    142e:	d1 1c       	adc	r13, r1
    1430:	0c c0       	rjmp	.+24     	; 0x144a <dtoa_prf+0xd6>
    1432:	8e e6       	ldi	r24, 0x6E	; 110
    1434:	d6 01       	movw	r26, r12
    1436:	8c 93       	st	X, r24
    1438:	91 e6       	ldi	r25, 0x61	; 97
    143a:	11 96       	adiw	r26, 0x01	; 1
    143c:	9c 93       	st	X, r25
    143e:	11 97       	sbiw	r26, 0x01	; 1
    1440:	12 96       	adiw	r26, 0x02	; 2
    1442:	8c 93       	st	X, r24
    1444:	b3 e0       	ldi	r27, 0x03	; 3
    1446:	cb 0e       	add	r12, r27
    1448:	d1 1c       	adc	r13, r1
    144a:	8b 2d       	mov	r24, r11
    144c:	f6 01       	movw	r30, r12
    144e:	90 e2       	ldi	r25, 0x20	; 32
    1450:	02 c0       	rjmp	.+4      	; 0x1456 <dtoa_prf+0xe2>
    1452:	91 93       	st	Z+, r25
    1454:	81 50       	subi	r24, 0x01	; 1
    1456:	81 11       	cpse	r24, r1
    1458:	fc cf       	rjmp	.-8      	; 0x1452 <dtoa_prf+0xde>
    145a:	40 c0       	rjmp	.+128    	; 0x14dc <dtoa_prf+0x168>
    145c:	72 ff       	sbrs	r23, 2
    145e:	45 c0       	rjmp	.+138    	; 0x14ea <dtoa_prf+0x176>
    1460:	66 23       	and	r22, r22
    1462:	11 f0       	breq	.+4      	; 0x1468 <dtoa_prf+0xf4>
    1464:	84 e0       	ldi	r24, 0x04	; 4
    1466:	01 c0       	rjmp	.+2      	; 0x146a <dtoa_prf+0xf6>
    1468:	83 e0       	ldi	r24, 0x03	; 3
    146a:	8b 15       	cp	r24, r11
    146c:	10 f4       	brcc	.+4      	; 0x1472 <dtoa_prf+0xfe>
    146e:	b8 1a       	sub	r11, r24
    1470:	01 c0       	rjmp	.+2      	; 0x1474 <dtoa_prf+0x100>
    1472:	b1 2c       	mov	r11, r1
    1474:	e4 fc       	sbrc	r14, 4
    1476:	0b c0       	rjmp	.+22     	; 0x148e <dtoa_prf+0x11a>
    1478:	8b 2d       	mov	r24, r11
    147a:	f6 01       	movw	r30, r12
    147c:	90 e2       	ldi	r25, 0x20	; 32
    147e:	02 c0       	rjmp	.+4      	; 0x1484 <dtoa_prf+0x110>
    1480:	91 93       	st	Z+, r25
    1482:	81 50       	subi	r24, 0x01	; 1
    1484:	81 11       	cpse	r24, r1
    1486:	fc cf       	rjmp	.-8      	; 0x1480 <dtoa_prf+0x10c>
    1488:	cb 0c       	add	r12, r11
    148a:	d1 1c       	adc	r13, r1
    148c:	b1 2c       	mov	r11, r1
    148e:	66 23       	and	r22, r22
    1490:	19 f0       	breq	.+6      	; 0x1498 <dtoa_prf+0x124>
    1492:	f6 01       	movw	r30, r12
    1494:	61 93       	st	Z+, r22
    1496:	6f 01       	movw	r12, r30
    1498:	e2 fe       	sbrs	r14, 2
    149a:	0e c0       	rjmp	.+28     	; 0x14b8 <dtoa_prf+0x144>
    149c:	89 e4       	ldi	r24, 0x49	; 73
    149e:	d6 01       	movw	r26, r12
    14a0:	8c 93       	st	X, r24
    14a2:	8e e4       	ldi	r24, 0x4E	; 78
    14a4:	11 96       	adiw	r26, 0x01	; 1
    14a6:	8c 93       	st	X, r24
    14a8:	11 97       	sbiw	r26, 0x01	; 1
    14aa:	86 e4       	ldi	r24, 0x46	; 70
    14ac:	12 96       	adiw	r26, 0x02	; 2
    14ae:	8c 93       	st	X, r24
    14b0:	b3 e0       	ldi	r27, 0x03	; 3
    14b2:	cb 0e       	add	r12, r27
    14b4:	d1 1c       	adc	r13, r1
    14b6:	0a c0       	rjmp	.+20     	; 0x14cc <dtoa_prf+0x158>
    14b8:	89 e6       	ldi	r24, 0x69	; 105
    14ba:	f6 01       	movw	r30, r12
    14bc:	80 83       	st	Z, r24
    14be:	8e e6       	ldi	r24, 0x6E	; 110
    14c0:	81 83       	std	Z+1, r24	; 0x01
    14c2:	86 e6       	ldi	r24, 0x66	; 102
    14c4:	82 83       	std	Z+2, r24	; 0x02
    14c6:	f3 e0       	ldi	r31, 0x03	; 3
    14c8:	cf 0e       	add	r12, r31
    14ca:	d1 1c       	adc	r13, r1
    14cc:	8b 2d       	mov	r24, r11
    14ce:	f6 01       	movw	r30, r12
    14d0:	90 e2       	ldi	r25, 0x20	; 32
    14d2:	02 c0       	rjmp	.+4      	; 0x14d8 <dtoa_prf+0x164>
    14d4:	91 93       	st	Z+, r25
    14d6:	81 50       	subi	r24, 0x01	; 1
    14d8:	81 11       	cpse	r24, r1
    14da:	fc cf       	rjmp	.-8      	; 0x14d4 <dtoa_prf+0x160>
    14dc:	f6 01       	movw	r30, r12
    14de:	eb 0d       	add	r30, r11
    14e0:	f1 1d       	adc	r31, r1
    14e2:	10 82       	st	Z, r1
    14e4:	2e ef       	ldi	r18, 0xFE	; 254
    14e6:	3f ef       	ldi	r19, 0xFF	; 255
    14e8:	ac c0       	rjmp	.+344    	; 0x1642 <dtoa_prf+0x2ce>
    14ea:	a1 e0       	ldi	r26, 0x01	; 1
    14ec:	61 11       	cpse	r22, r1
    14ee:	01 c0       	rjmp	.+2      	; 0x14f2 <dtoa_prf+0x17e>
    14f0:	a0 e0       	ldi	r26, 0x00	; 0
    14f2:	4a 2f       	mov	r20, r26
    14f4:	50 e0       	ldi	r21, 0x00	; 0
    14f6:	18 16       	cp	r1, r24
    14f8:	19 06       	cpc	r1, r25
    14fa:	24 f4       	brge	.+8      	; 0x1504 <dtoa_prf+0x190>
    14fc:	9c 01       	movw	r18, r24
    14fe:	2f 5f       	subi	r18, 0xFF	; 255
    1500:	3f 4f       	sbci	r19, 0xFF	; 255
    1502:	02 c0       	rjmp	.+4      	; 0x1508 <dtoa_prf+0x194>
    1504:	21 e0       	ldi	r18, 0x01	; 1
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	24 0f       	add	r18, r20
    150a:	35 1f       	adc	r19, r21
    150c:	11 23       	and	r17, r17
    150e:	29 f0       	breq	.+10     	; 0x151a <dtoa_prf+0x1a6>
    1510:	41 2f       	mov	r20, r17
    1512:	50 e0       	ldi	r21, 0x00	; 0
    1514:	4f 5f       	subi	r20, 0xFF	; 255
    1516:	5f 4f       	sbci	r21, 0xFF	; 255
    1518:	02 c0       	rjmp	.+4      	; 0x151e <dtoa_prf+0x1aa>
    151a:	40 e0       	ldi	r20, 0x00	; 0
    151c:	50 e0       	ldi	r21, 0x00	; 0
    151e:	42 0f       	add	r20, r18
    1520:	53 1f       	adc	r21, r19
    1522:	2b 2d       	mov	r18, r11
    1524:	30 e0       	ldi	r19, 0x00	; 0
    1526:	42 17       	cp	r20, r18
    1528:	53 07       	cpc	r21, r19
    152a:	14 f4       	brge	.+4      	; 0x1530 <dtoa_prf+0x1bc>
    152c:	b4 1a       	sub	r11, r20
    152e:	01 c0       	rjmp	.+2      	; 0x1532 <dtoa_prf+0x1be>
    1530:	b1 2c       	mov	r11, r1
    1532:	3e 2d       	mov	r19, r14
    1534:	30 71       	andi	r19, 0x10	; 16
    1536:	e4 fc       	sbrc	r14, 4
    1538:	0d c0       	rjmp	.+26     	; 0x1554 <dtoa_prf+0x1e0>
    153a:	e3 fc       	sbrc	r14, 3
    153c:	0b c0       	rjmp	.+22     	; 0x1554 <dtoa_prf+0x1e0>
    153e:	2b 2d       	mov	r18, r11
    1540:	f6 01       	movw	r30, r12
    1542:	40 e2       	ldi	r20, 0x20	; 32
    1544:	02 c0       	rjmp	.+4      	; 0x154a <dtoa_prf+0x1d6>
    1546:	41 93       	st	Z+, r20
    1548:	21 50       	subi	r18, 0x01	; 1
    154a:	21 11       	cpse	r18, r1
    154c:	fc cf       	rjmp	.-8      	; 0x1546 <dtoa_prf+0x1d2>
    154e:	cb 0c       	add	r12, r11
    1550:	d1 1c       	adc	r13, r1
    1552:	b1 2c       	mov	r11, r1
    1554:	aa 23       	and	r26, r26
    1556:	19 f0       	breq	.+6      	; 0x155e <dtoa_prf+0x1ea>
    1558:	d6 01       	movw	r26, r12
    155a:	6d 93       	st	X+, r22
    155c:	6d 01       	movw	r12, r26
    155e:	31 11       	cpse	r19, r1
    1560:	0b c0       	rjmp	.+22     	; 0x1578 <dtoa_prf+0x204>
    1562:	2b 2d       	mov	r18, r11
    1564:	f6 01       	movw	r30, r12
    1566:	30 e3       	ldi	r19, 0x30	; 48
    1568:	02 c0       	rjmp	.+4      	; 0x156e <dtoa_prf+0x1fa>
    156a:	31 93       	st	Z+, r19
    156c:	21 50       	subi	r18, 0x01	; 1
    156e:	21 11       	cpse	r18, r1
    1570:	fc cf       	rjmp	.-8      	; 0x156a <dtoa_prf+0x1f6>
    1572:	cb 0c       	add	r12, r11
    1574:	d1 1c       	adc	r13, r1
    1576:	b1 2c       	mov	r11, r1
    1578:	f8 0e       	add	r15, r24
    157a:	0a 81       	ldd	r16, Y+2	; 0x02
    157c:	40 e1       	ldi	r20, 0x10	; 16
    157e:	a4 2e       	mov	r10, r20
    1580:	a7 22       	and	r10, r23
    1582:	74 ff       	sbrs	r23, 4
    1584:	03 c0       	rjmp	.+6      	; 0x158c <dtoa_prf+0x218>
    1586:	01 33       	cpi	r16, 0x31	; 49
    1588:	09 f4       	brne	.+2      	; 0x158c <dtoa_prf+0x218>
    158a:	fa 94       	dec	r15
    158c:	1f 14       	cp	r1, r15
    158e:	2c f4       	brge	.+10     	; 0x159a <dtoa_prf+0x226>
    1590:	2f 2d       	mov	r18, r15
    1592:	29 30       	cpi	r18, 0x09	; 9
    1594:	18 f0       	brcs	.+6      	; 0x159c <dtoa_prf+0x228>
    1596:	28 e0       	ldi	r18, 0x08	; 8
    1598:	01 c0       	rjmp	.+2      	; 0x159c <dtoa_prf+0x228>
    159a:	21 e0       	ldi	r18, 0x01	; 1
    159c:	ac 01       	movw	r20, r24
    159e:	97 ff       	sbrs	r25, 7
    15a0:	02 c0       	rjmp	.+4      	; 0x15a6 <dtoa_prf+0x232>
    15a2:	40 e0       	ldi	r20, 0x00	; 0
    15a4:	50 e0       	ldi	r21, 0x00	; 0
    15a6:	60 e0       	ldi	r22, 0x00	; 0
    15a8:	70 e0       	ldi	r23, 0x00	; 0
    15aa:	3e e2       	ldi	r19, 0x2E	; 46
    15ac:	93 2e       	mov	r9, r19
    15ae:	fc 01       	movw	r30, r24
    15b0:	e2 1b       	sub	r30, r18
    15b2:	f1 09       	sbc	r31, r1
    15b4:	9f 01       	movw	r18, r30
    15b6:	dc 01       	movw	r26, r24
    15b8:	a4 1b       	sub	r26, r20
    15ba:	b5 0b       	sbc	r27, r21
    15bc:	fe 01       	movw	r30, r28
    15be:	31 96       	adiw	r30, 0x01	; 1
    15c0:	ea 0f       	add	r30, r26
    15c2:	fb 1f       	adc	r31, r27
    15c4:	a1 2f       	mov	r26, r17
    15c6:	b0 e0       	ldi	r27, 0x00	; 0
    15c8:	66 24       	eor	r6, r6
    15ca:	77 24       	eor	r7, r7
    15cc:	6a 1a       	sub	r6, r26
    15ce:	7b 0a       	sbc	r7, r27
    15d0:	4f 3f       	cpi	r20, 0xFF	; 255
    15d2:	1f ef       	ldi	r17, 0xFF	; 255
    15d4:	51 07       	cpc	r21, r17
    15d6:	19 f4       	brne	.+6      	; 0x15de <dtoa_prf+0x26a>
    15d8:	d6 01       	movw	r26, r12
    15da:	9d 92       	st	X+, r9
    15dc:	6d 01       	movw	r12, r26
    15de:	84 17       	cp	r24, r20
    15e0:	95 07       	cpc	r25, r21
    15e2:	54 f0       	brlt	.+20     	; 0x15f8 <dtoa_prf+0x284>
    15e4:	24 17       	cp	r18, r20
    15e6:	35 07       	cpc	r19, r21
    15e8:	3c f4       	brge	.+14     	; 0x15f8 <dtoa_prf+0x284>
    15ea:	7f 01       	movw	r14, r30
    15ec:	e6 0e       	add	r14, r22
    15ee:	f7 1e       	adc	r15, r23
    15f0:	d7 01       	movw	r26, r14
    15f2:	11 96       	adiw	r26, 0x01	; 1
    15f4:	1c 91       	ld	r17, X
    15f6:	01 c0       	rjmp	.+2      	; 0x15fa <dtoa_prf+0x286>
    15f8:	10 e3       	ldi	r17, 0x30	; 48
    15fa:	41 50       	subi	r20, 0x01	; 1
    15fc:	51 09       	sbc	r21, r1
    15fe:	6f 5f       	subi	r22, 0xFF	; 255
    1600:	7f 4f       	sbci	r23, 0xFF	; 255
    1602:	46 15       	cp	r20, r6
    1604:	57 05       	cpc	r21, r7
    1606:	24 f0       	brlt	.+8      	; 0x1610 <dtoa_prf+0x29c>
    1608:	d6 01       	movw	r26, r12
    160a:	1d 93       	st	X+, r17
    160c:	6d 01       	movw	r12, r26
    160e:	e0 cf       	rjmp	.-64     	; 0x15d0 <dtoa_prf+0x25c>
    1610:	48 17       	cp	r20, r24
    1612:	59 07       	cpc	r21, r25
    1614:	39 f4       	brne	.+14     	; 0x1624 <dtoa_prf+0x2b0>
    1616:	06 33       	cpi	r16, 0x36	; 54
    1618:	20 f4       	brcc	.+8      	; 0x1622 <dtoa_prf+0x2ae>
    161a:	05 33       	cpi	r16, 0x35	; 53
    161c:	19 f4       	brne	.+6      	; 0x1624 <dtoa_prf+0x2b0>
    161e:	a1 10       	cpse	r10, r1
    1620:	01 c0       	rjmp	.+2      	; 0x1624 <dtoa_prf+0x2b0>
    1622:	11 e3       	ldi	r17, 0x31	; 49
    1624:	f6 01       	movw	r30, r12
    1626:	11 93       	st	Z+, r17
    1628:	8b 2d       	mov	r24, r11
    162a:	df 01       	movw	r26, r30
    162c:	90 e2       	ldi	r25, 0x20	; 32
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <dtoa_prf+0x2c0>
    1630:	9d 93       	st	X+, r25
    1632:	81 50       	subi	r24, 0x01	; 1
    1634:	81 11       	cpse	r24, r1
    1636:	fc cf       	rjmp	.-8      	; 0x1630 <dtoa_prf+0x2bc>
    1638:	eb 0d       	add	r30, r11
    163a:	f1 1d       	adc	r31, r1
    163c:	10 82       	st	Z, r1
    163e:	20 e0       	ldi	r18, 0x00	; 0
    1640:	30 e0       	ldi	r19, 0x00	; 0
    1642:	c9 01       	movw	r24, r18
    1644:	29 96       	adiw	r28, 0x09	; 9
    1646:	0f b6       	in	r0, 0x3f	; 63
    1648:	f8 94       	cli
    164a:	de bf       	out	0x3e, r29	; 62
    164c:	0f be       	out	0x3f, r0	; 63
    164e:	cd bf       	out	0x3d, r28	; 61
    1650:	df 91       	pop	r29
    1652:	cf 91       	pop	r28
    1654:	1f 91       	pop	r17
    1656:	0f 91       	pop	r16
    1658:	ff 90       	pop	r15
    165a:	ef 90       	pop	r14
    165c:	df 90       	pop	r13
    165e:	cf 90       	pop	r12
    1660:	bf 90       	pop	r11
    1662:	af 90       	pop	r10
    1664:	9f 90       	pop	r9
    1666:	7f 90       	pop	r7
    1668:	6f 90       	pop	r6
    166a:	08 95       	ret

0000166c <__ftoa_engine>:
    166c:	28 30       	cpi	r18, 0x08	; 8
    166e:	08 f0       	brcs	.+2      	; 0x1672 <__ftoa_engine+0x6>
    1670:	27 e0       	ldi	r18, 0x07	; 7
    1672:	33 27       	eor	r19, r19
    1674:	da 01       	movw	r26, r20
    1676:	99 0f       	add	r25, r25
    1678:	31 1d       	adc	r19, r1
    167a:	87 fd       	sbrc	r24, 7
    167c:	91 60       	ori	r25, 0x01	; 1
    167e:	00 96       	adiw	r24, 0x00	; 0
    1680:	61 05       	cpc	r22, r1
    1682:	71 05       	cpc	r23, r1
    1684:	39 f4       	brne	.+14     	; 0x1694 <__ftoa_engine+0x28>
    1686:	32 60       	ori	r19, 0x02	; 2
    1688:	2e 5f       	subi	r18, 0xFE	; 254
    168a:	3d 93       	st	X+, r19
    168c:	30 e3       	ldi	r19, 0x30	; 48
    168e:	2a 95       	dec	r18
    1690:	e1 f7       	brne	.-8      	; 0x168a <__ftoa_engine+0x1e>
    1692:	08 95       	ret
    1694:	9f 3f       	cpi	r25, 0xFF	; 255
    1696:	30 f0       	brcs	.+12     	; 0x16a4 <__ftoa_engine+0x38>
    1698:	80 38       	cpi	r24, 0x80	; 128
    169a:	71 05       	cpc	r23, r1
    169c:	61 05       	cpc	r22, r1
    169e:	09 f0       	breq	.+2      	; 0x16a2 <__ftoa_engine+0x36>
    16a0:	3c 5f       	subi	r19, 0xFC	; 252
    16a2:	3c 5f       	subi	r19, 0xFC	; 252
    16a4:	3d 93       	st	X+, r19
    16a6:	91 30       	cpi	r25, 0x01	; 1
    16a8:	08 f0       	brcs	.+2      	; 0x16ac <__ftoa_engine+0x40>
    16aa:	80 68       	ori	r24, 0x80	; 128
    16ac:	91 1d       	adc	r25, r1
    16ae:	df 93       	push	r29
    16b0:	cf 93       	push	r28
    16b2:	1f 93       	push	r17
    16b4:	0f 93       	push	r16
    16b6:	ff 92       	push	r15
    16b8:	ef 92       	push	r14
    16ba:	19 2f       	mov	r17, r25
    16bc:	98 7f       	andi	r25, 0xF8	; 248
    16be:	96 95       	lsr	r25
    16c0:	e9 2f       	mov	r30, r25
    16c2:	96 95       	lsr	r25
    16c4:	96 95       	lsr	r25
    16c6:	e9 0f       	add	r30, r25
    16c8:	ff 27       	eor	r31, r31
    16ca:	e0 58       	subi	r30, 0x80	; 128
    16cc:	ff 4f       	sbci	r31, 0xFF	; 255
    16ce:	99 27       	eor	r25, r25
    16d0:	33 27       	eor	r19, r19
    16d2:	ee 24       	eor	r14, r14
    16d4:	ff 24       	eor	r15, r15
    16d6:	a7 01       	movw	r20, r14
    16d8:	e7 01       	movw	r28, r14
    16da:	05 90       	lpm	r0, Z+
    16dc:	08 94       	sec
    16de:	07 94       	ror	r0
    16e0:	28 f4       	brcc	.+10     	; 0x16ec <__ftoa_engine+0x80>
    16e2:	36 0f       	add	r19, r22
    16e4:	e7 1e       	adc	r14, r23
    16e6:	f8 1e       	adc	r15, r24
    16e8:	49 1f       	adc	r20, r25
    16ea:	51 1d       	adc	r21, r1
    16ec:	66 0f       	add	r22, r22
    16ee:	77 1f       	adc	r23, r23
    16f0:	88 1f       	adc	r24, r24
    16f2:	99 1f       	adc	r25, r25
    16f4:	06 94       	lsr	r0
    16f6:	a1 f7       	brne	.-24     	; 0x16e0 <__ftoa_engine+0x74>
    16f8:	05 90       	lpm	r0, Z+
    16fa:	07 94       	ror	r0
    16fc:	28 f4       	brcc	.+10     	; 0x1708 <__ftoa_engine+0x9c>
    16fe:	e7 0e       	add	r14, r23
    1700:	f8 1e       	adc	r15, r24
    1702:	49 1f       	adc	r20, r25
    1704:	56 1f       	adc	r21, r22
    1706:	c1 1d       	adc	r28, r1
    1708:	77 0f       	add	r23, r23
    170a:	88 1f       	adc	r24, r24
    170c:	99 1f       	adc	r25, r25
    170e:	66 1f       	adc	r22, r22
    1710:	06 94       	lsr	r0
    1712:	a1 f7       	brne	.-24     	; 0x16fc <__ftoa_engine+0x90>
    1714:	05 90       	lpm	r0, Z+
    1716:	07 94       	ror	r0
    1718:	28 f4       	brcc	.+10     	; 0x1724 <__ftoa_engine+0xb8>
    171a:	f8 0e       	add	r15, r24
    171c:	49 1f       	adc	r20, r25
    171e:	56 1f       	adc	r21, r22
    1720:	c7 1f       	adc	r28, r23
    1722:	d1 1d       	adc	r29, r1
    1724:	88 0f       	add	r24, r24
    1726:	99 1f       	adc	r25, r25
    1728:	66 1f       	adc	r22, r22
    172a:	77 1f       	adc	r23, r23
    172c:	06 94       	lsr	r0
    172e:	a1 f7       	brne	.-24     	; 0x1718 <__ftoa_engine+0xac>
    1730:	05 90       	lpm	r0, Z+
    1732:	07 94       	ror	r0
    1734:	20 f4       	brcc	.+8      	; 0x173e <__ftoa_engine+0xd2>
    1736:	49 0f       	add	r20, r25
    1738:	56 1f       	adc	r21, r22
    173a:	c7 1f       	adc	r28, r23
    173c:	d8 1f       	adc	r29, r24
    173e:	99 0f       	add	r25, r25
    1740:	66 1f       	adc	r22, r22
    1742:	77 1f       	adc	r23, r23
    1744:	88 1f       	adc	r24, r24
    1746:	06 94       	lsr	r0
    1748:	a9 f7       	brne	.-22     	; 0x1734 <__ftoa_engine+0xc8>
    174a:	84 91       	lpm	r24, Z
    174c:	10 95       	com	r17
    174e:	17 70       	andi	r17, 0x07	; 7
    1750:	41 f0       	breq	.+16     	; 0x1762 <__ftoa_engine+0xf6>
    1752:	d6 95       	lsr	r29
    1754:	c7 95       	ror	r28
    1756:	57 95       	ror	r21
    1758:	47 95       	ror	r20
    175a:	f7 94       	ror	r15
    175c:	e7 94       	ror	r14
    175e:	1a 95       	dec	r17
    1760:	c1 f7       	brne	.-16     	; 0x1752 <__ftoa_engine+0xe6>
    1762:	e6 e2       	ldi	r30, 0x26	; 38
    1764:	f0 e0       	ldi	r31, 0x00	; 0
    1766:	68 94       	set
    1768:	15 90       	lpm	r1, Z+
    176a:	15 91       	lpm	r17, Z+
    176c:	35 91       	lpm	r19, Z+
    176e:	65 91       	lpm	r22, Z+
    1770:	95 91       	lpm	r25, Z+
    1772:	05 90       	lpm	r0, Z+
    1774:	7f e2       	ldi	r23, 0x2F	; 47
    1776:	73 95       	inc	r23
    1778:	e1 18       	sub	r14, r1
    177a:	f1 0a       	sbc	r15, r17
    177c:	43 0b       	sbc	r20, r19
    177e:	56 0b       	sbc	r21, r22
    1780:	c9 0b       	sbc	r28, r25
    1782:	d0 09       	sbc	r29, r0
    1784:	c0 f7       	brcc	.-16     	; 0x1776 <__ftoa_engine+0x10a>
    1786:	e1 0c       	add	r14, r1
    1788:	f1 1e       	adc	r15, r17
    178a:	43 1f       	adc	r20, r19
    178c:	56 1f       	adc	r21, r22
    178e:	c9 1f       	adc	r28, r25
    1790:	d0 1d       	adc	r29, r0
    1792:	7e f4       	brtc	.+30     	; 0x17b2 <__ftoa_engine+0x146>
    1794:	70 33       	cpi	r23, 0x30	; 48
    1796:	11 f4       	brne	.+4      	; 0x179c <__ftoa_engine+0x130>
    1798:	8a 95       	dec	r24
    179a:	e6 cf       	rjmp	.-52     	; 0x1768 <__ftoa_engine+0xfc>
    179c:	e8 94       	clt
    179e:	01 50       	subi	r16, 0x01	; 1
    17a0:	30 f0       	brcs	.+12     	; 0x17ae <__ftoa_engine+0x142>
    17a2:	08 0f       	add	r16, r24
    17a4:	0a f4       	brpl	.+2      	; 0x17a8 <__ftoa_engine+0x13c>
    17a6:	00 27       	eor	r16, r16
    17a8:	02 17       	cp	r16, r18
    17aa:	08 f4       	brcc	.+2      	; 0x17ae <__ftoa_engine+0x142>
    17ac:	20 2f       	mov	r18, r16
    17ae:	23 95       	inc	r18
    17b0:	02 2f       	mov	r16, r18
    17b2:	7a 33       	cpi	r23, 0x3A	; 58
    17b4:	28 f0       	brcs	.+10     	; 0x17c0 <__ftoa_engine+0x154>
    17b6:	79 e3       	ldi	r23, 0x39	; 57
    17b8:	7d 93       	st	X+, r23
    17ba:	2a 95       	dec	r18
    17bc:	e9 f7       	brne	.-6      	; 0x17b8 <__ftoa_engine+0x14c>
    17be:	10 c0       	rjmp	.+32     	; 0x17e0 <__ftoa_engine+0x174>
    17c0:	7d 93       	st	X+, r23
    17c2:	2a 95       	dec	r18
    17c4:	89 f6       	brne	.-94     	; 0x1768 <__ftoa_engine+0xfc>
    17c6:	06 94       	lsr	r0
    17c8:	97 95       	ror	r25
    17ca:	67 95       	ror	r22
    17cc:	37 95       	ror	r19
    17ce:	17 95       	ror	r17
    17d0:	17 94       	ror	r1
    17d2:	e1 18       	sub	r14, r1
    17d4:	f1 0a       	sbc	r15, r17
    17d6:	43 0b       	sbc	r20, r19
    17d8:	56 0b       	sbc	r21, r22
    17da:	c9 0b       	sbc	r28, r25
    17dc:	d0 09       	sbc	r29, r0
    17de:	98 f0       	brcs	.+38     	; 0x1806 <__ftoa_engine+0x19a>
    17e0:	23 95       	inc	r18
    17e2:	7e 91       	ld	r23, -X
    17e4:	73 95       	inc	r23
    17e6:	7a 33       	cpi	r23, 0x3A	; 58
    17e8:	08 f0       	brcs	.+2      	; 0x17ec <__ftoa_engine+0x180>
    17ea:	70 e3       	ldi	r23, 0x30	; 48
    17ec:	7c 93       	st	X, r23
    17ee:	20 13       	cpse	r18, r16
    17f0:	b8 f7       	brcc	.-18     	; 0x17e0 <__ftoa_engine+0x174>
    17f2:	7e 91       	ld	r23, -X
    17f4:	70 61       	ori	r23, 0x10	; 16
    17f6:	7d 93       	st	X+, r23
    17f8:	30 f0       	brcs	.+12     	; 0x1806 <__ftoa_engine+0x19a>
    17fa:	83 95       	inc	r24
    17fc:	71 e3       	ldi	r23, 0x31	; 49
    17fe:	7d 93       	st	X+, r23
    1800:	70 e3       	ldi	r23, 0x30	; 48
    1802:	2a 95       	dec	r18
    1804:	e1 f7       	brne	.-8      	; 0x17fe <__ftoa_engine+0x192>
    1806:	11 24       	eor	r1, r1
    1808:	ef 90       	pop	r14
    180a:	ff 90       	pop	r15
    180c:	0f 91       	pop	r16
    180e:	1f 91       	pop	r17
    1810:	cf 91       	pop	r28
    1812:	df 91       	pop	r29
    1814:	99 27       	eor	r25, r25
    1816:	87 fd       	sbrc	r24, 7
    1818:	90 95       	com	r25
    181a:	08 95       	ret

0000181c <strrev>:
    181c:	dc 01       	movw	r26, r24
    181e:	fc 01       	movw	r30, r24
    1820:	67 2f       	mov	r22, r23
    1822:	71 91       	ld	r23, Z+
    1824:	77 23       	and	r23, r23
    1826:	e1 f7       	brne	.-8      	; 0x1820 <strrev+0x4>
    1828:	32 97       	sbiw	r30, 0x02	; 2
    182a:	04 c0       	rjmp	.+8      	; 0x1834 <strrev+0x18>
    182c:	7c 91       	ld	r23, X
    182e:	6d 93       	st	X+, r22
    1830:	70 83       	st	Z, r23
    1832:	62 91       	ld	r22, -Z
    1834:	ae 17       	cp	r26, r30
    1836:	bf 07       	cpc	r27, r31
    1838:	c8 f3       	brcs	.-14     	; 0x182c <strrev+0x10>
    183a:	08 95       	ret

0000183c <__udivmodhi4>:
    183c:	aa 1b       	sub	r26, r26
    183e:	bb 1b       	sub	r27, r27
    1840:	51 e1       	ldi	r21, 0x11	; 17
    1842:	07 c0       	rjmp	.+14     	; 0x1852 <__udivmodhi4_ep>

00001844 <__udivmodhi4_loop>:
    1844:	aa 1f       	adc	r26, r26
    1846:	bb 1f       	adc	r27, r27
    1848:	a6 17       	cp	r26, r22
    184a:	b7 07       	cpc	r27, r23
    184c:	10 f0       	brcs	.+4      	; 0x1852 <__udivmodhi4_ep>
    184e:	a6 1b       	sub	r26, r22
    1850:	b7 0b       	sbc	r27, r23

00001852 <__udivmodhi4_ep>:
    1852:	88 1f       	adc	r24, r24
    1854:	99 1f       	adc	r25, r25
    1856:	5a 95       	dec	r21
    1858:	a9 f7       	brne	.-22     	; 0x1844 <__udivmodhi4_loop>
    185a:	80 95       	com	r24
    185c:	90 95       	com	r25
    185e:	bc 01       	movw	r22, r24
    1860:	cd 01       	movw	r24, r26
    1862:	08 95       	ret

00001864 <_exit>:
    1864:	f8 94       	cli

00001866 <__stop_program>:
    1866:	ff cf       	rjmp	.-2      	; 0x1866 <__stop_program>
