
Sonnenaufgangsweckerlampe_2_0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000019d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000f8  00800060  000019d8  00001a6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000024  00800158  00800158  00001b64  2**0
                  ALLOC
  3 .stab         00002b80  00000000  00000000  00001b64  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000854  00000000  00000000  000046e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004f38  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000128  00000000  00000000  00004f67  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000346b  00000000  00000000  0000508f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000522  00000000  00000000  000084fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000b6e  00000000  00000000  00008a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000031c  00000000  00000000  0000958c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000571  00000000  00000000  000098a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000023e3  00000000  00000000  00009e19  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000140  00000000  00000000  0000c1fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	97 c0       	rjmp	.+302    	; 0x130 <__ctors_end>
       2:	b1 c0       	rjmp	.+354    	; 0x166 <__bad_interrupt>
       4:	b0 c0       	rjmp	.+352    	; 0x166 <__bad_interrupt>
       6:	af c0       	rjmp	.+350    	; 0x166 <__bad_interrupt>
       8:	ae c0       	rjmp	.+348    	; 0x166 <__bad_interrupt>
       a:	ad c0       	rjmp	.+346    	; 0x166 <__bad_interrupt>
       c:	ac c0       	rjmp	.+344    	; 0x166 <__bad_interrupt>
       e:	ab c0       	rjmp	.+342    	; 0x166 <__bad_interrupt>
      10:	d8 c7       	rjmp	.+4016   	; 0xfc2 <__vector_8>
      12:	a9 c0       	rjmp	.+338    	; 0x166 <__bad_interrupt>
      14:	a8 c0       	rjmp	.+336    	; 0x166 <__bad_interrupt>
      16:	a7 c0       	rjmp	.+334    	; 0x166 <__bad_interrupt>
      18:	a6 c0       	rjmp	.+332    	; 0x166 <__bad_interrupt>
      1a:	a5 c0       	rjmp	.+330    	; 0x166 <__bad_interrupt>
      1c:	a4 c0       	rjmp	.+328    	; 0x166 <__bad_interrupt>
      1e:	a3 c0       	rjmp	.+326    	; 0x166 <__bad_interrupt>
      20:	a2 c0       	rjmp	.+324    	; 0x166 <__bad_interrupt>
      22:	a1 c0       	rjmp	.+322    	; 0x166 <__bad_interrupt>
      24:	a0 c0       	rjmp	.+320    	; 0x166 <__bad_interrupt>
      26:	98 c2       	rjmp	.+1328   	; 0x558 <_Z3aushh+0x2a>
      28:	a0 c2       	rjmp	.+1344   	; 0x56a <_Z3aushh+0x3c>
      2a:	a8 c2       	rjmp	.+1360   	; 0x57c <_Z3aushh+0x4e>
      2c:	ab c2       	rjmp	.+1366   	; 0x584 <_Z3aushh+0x56>
      2e:	b0 c2       	rjmp	.+1376   	; 0x590 <_Z3aushh+0x62>
      30:	b9 c2       	rjmp	.+1394   	; 0x5a4 <_Z3aushh+0x76>
      32:	d5 c2       	rjmp	.+1450   	; 0x5de <_Z3aushh+0xb0>
      34:	da c2       	rjmp	.+1460   	; 0x5ea <_Z3aushh+0xbc>
      36:	00 40       	sbci	r16, 0x00	; 0
      38:	7a 10       	cpse	r7, r10
      3a:	f3 5a       	subi	r31, 0xA3	; 163
      3c:	00 a0       	ldd	r0, Z+32	; 0x20
      3e:	72 4e       	sbci	r23, 0xE2	; 226
      40:	18 09       	sbc	r17, r8
      42:	00 10       	cpse	r0, r0
      44:	a5 d4       	rcall	.+2378   	; 0x990 <_Z5einsth+0x2da>
      46:	e8 00       	.word	0x00e8	; ????
      48:	00 e8       	ldi	r16, 0x80	; 128
      4a:	76 48       	sbci	r23, 0x86	; 134
      4c:	17 00       	.word	0x0017	; ????
      4e:	00 e4       	ldi	r16, 0x40	; 64
      50:	0b 54       	subi	r16, 0x4B	; 75
      52:	02 00       	.word	0x0002	; ????
      54:	00 ca       	rjmp	.-3072   	; 0xfffff456 <__eeprom_end+0xff7ef456>
      56:	9a 3b       	cpi	r25, 0xBA	; 186
      58:	00 00       	nop
      5a:	00 e1       	ldi	r16, 0x10	; 16
      5c:	f5 05       	cpc	r31, r5
      5e:	00 00       	nop
      60:	80 96       	adiw	r24, 0x20	; 32
      62:	98 00       	.word	0x0098	; ????
      64:	00 00       	nop
      66:	40 42       	sbci	r20, 0x20	; 32
      68:	0f 00       	.word	0x000f	; ????
      6a:	00 00       	nop
      6c:	a0 86       	std	Z+8, r10	; 0x08
      6e:	01 00       	.word	0x0001	; ????
      70:	00 00       	nop
      72:	10 27       	eor	r17, r16
      74:	00 00       	nop
      76:	00 00       	nop
      78:	e8 03       	fmulsu	r22, r16
      7a:	00 00       	nop
      7c:	00 00       	nop
      7e:	64 00       	.word	0x0064	; ????
      80:	00 00       	nop
      82:	00 00       	nop
      84:	0a 00       	.word	0x000a	; ????
      86:	00 00       	nop
      88:	00 00       	nop
      8a:	01 00       	.word	0x0001	; ????
      8c:	00 00       	nop
      8e:	00 00       	nop
      90:	2c 76       	andi	r18, 0x6C	; 108
      92:	d8 88       	ldd	r13, Y+16	; 0x10
      94:	dc 67       	ori	r29, 0x7C	; 124
      96:	4f 08       	sbc	r4, r15
      98:	23 df       	rcall	.-442    	; 0xfffffee0 <__eeprom_end+0xff7efee0>
      9a:	c1 df       	rcall	.-126    	; 0x1e <__zero_reg__+0x1d>
      9c:	ae 59       	subi	r26, 0x9E	; 158
      9e:	e1 b1       	in	r30, 0x01	; 1
      a0:	b7 96       	adiw	r30, 0x27	; 39
      a2:	e5 e3       	ldi	r30, 0x35	; 53
      a4:	e4 53       	subi	r30, 0x34	; 52
      a6:	c6 3a       	cpi	r28, 0xA6	; 166
      a8:	e6 51       	subi	r30, 0x16	; 22
      aa:	99 76       	andi	r25, 0x69	; 105
      ac:	96 e8       	ldi	r25, 0x86	; 134
      ae:	e6 c2       	rjmp	.+1484   	; 0x67c <_Z8erhoehenPhhhPKc+0x20>
      b0:	84 26       	eor	r8, r20
      b2:	eb 89       	ldd	r30, Y+19	; 0x13
      b4:	8c 9b       	sbis	0x11, 4	; 17
      b6:	62 ed       	ldi	r22, 0xD2	; 210
      b8:	40 7c       	andi	r20, 0xC0	; 192
      ba:	6f fc       	.word	0xfc6f	; ????
      bc:	ef bc       	out	0x2f, r14	; 47
      be:	9c 9f       	mul	r25, r28
      c0:	40 f2       	brcs	.-112    	; 0x52 <__SREG__+0x13>
      c2:	ba a5       	ldd	r27, Y+42	; 0x2a
      c4:	6f a5       	ldd	r22, Y+47	; 0x2f
      c6:	f4 90       	lpm	r15, Z
      c8:	05 5a       	subi	r16, 0xA5	; 165
      ca:	2a f7       	brpl	.-54     	; 0x96 <__SREG__+0x57>
      cc:	5c 93       	st	X, r21
      ce:	6b 6c       	ori	r22, 0xCB	; 203
      d0:	f9 67       	ori	r31, 0x79	; 121
      d2:	6d c1       	rjmp	.+730    	; 0x3ae <_Z10temperaturv+0x7e>
      d4:	1b fc       	.word	0xfc1b	; ????
      d6:	e0 e4       	ldi	r30, 0x40	; 64
      d8:	0d 47       	sbci	r16, 0x7D	; 125
      da:	fe f5       	brtc	.+126    	; 0x15a <.do_clear_bss_loop>
      dc:	20 e6       	ldi	r18, 0x60	; 96
      de:	b5 00       	.word	0x00b5	; ????
      e0:	d0 ed       	ldi	r29, 0xD0	; 208
      e2:	90 2e       	mov	r9, r16
      e4:	03 00       	.word	0x0003	; ????
      e6:	94 35       	cpi	r25, 0x54	; 84
      e8:	77 05       	cpc	r23, r7
      ea:	00 80       	ld	r0, Z
      ec:	84 1e       	adc	r8, r20
      ee:	08 00       	.word	0x0008	; ????
      f0:	00 20       	and	r0, r0
      f2:	4e 0a       	sbc	r4, r30
      f4:	00 00       	nop
      f6:	00 c8       	rjmp	.-4096   	; 0xfffff0f8 <__eeprom_end+0xff7ef0f8>
      f8:	0c 33       	cpi	r16, 0x3C	; 60
      fa:	33 33       	cpi	r19, 0x33	; 51
      fc:	33 0f       	add	r19, r19
      fe:	98 6e       	ori	r25, 0xE8	; 232
     100:	12 83       	std	Z+2, r17	; 0x02
     102:	11 41       	sbci	r17, 0x11	; 17
     104:	ef 8d       	ldd	r30, Y+31	; 0x1f
     106:	21 14       	cp	r2, r1
     108:	89 3b       	cpi	r24, 0xB9	; 185
     10a:	e6 55       	subi	r30, 0x56	; 86
     10c:	16 cf       	rjmp	.-468    	; 0xffffff3a <__eeprom_end+0xff7eff3a>
     10e:	fe e6       	ldi	r31, 0x6E	; 110
     110:	db 18       	sub	r13, r11
     112:	d1 84       	ldd	r13, Z+9	; 0x09
     114:	4b 38       	cpi	r20, 0x8B	; 139
     116:	1b f7       	brvc	.-58     	; 0xde <__SREG__+0x9f>
     118:	7c 1d       	adc	r23, r12
     11a:	90 1d       	adc	r25, r0
     11c:	a4 bb       	out	0x14, r26	; 20
     11e:	e4 24       	eor	r14, r4
     120:	20 32       	cpi	r18, 0x20	; 32
     122:	84 72       	andi	r24, 0x24	; 36
     124:	5e 22       	and	r5, r30
     126:	81 00       	.word	0x0081	; ????
     128:	c9 f1       	breq	.+114    	; 0x19c <_Z8lcd_datah+0x12>
     12a:	24 ec       	ldi	r18, 0xC4	; 196
     12c:	a1 e5       	ldi	r26, 0x51	; 81
     12e:	3d 27       	eor	r19, r29

00000130 <__ctors_end>:
     130:	11 24       	eor	r1, r1
     132:	1f be       	out	0x3f, r1	; 63
     134:	cf e5       	ldi	r28, 0x5F	; 95
     136:	d4 e0       	ldi	r29, 0x04	; 4
     138:	de bf       	out	0x3e, r29	; 62
     13a:	cd bf       	out	0x3d, r28	; 61

0000013c <__do_copy_data>:
     13c:	11 e0       	ldi	r17, 0x01	; 1
     13e:	a0 e6       	ldi	r26, 0x60	; 96
     140:	b0 e0       	ldi	r27, 0x00	; 0
     142:	e8 ed       	ldi	r30, 0xD8	; 216
     144:	f9 e1       	ldi	r31, 0x19	; 25
     146:	02 c0       	rjmp	.+4      	; 0x14c <__do_copy_data+0x10>
     148:	05 90       	lpm	r0, Z+
     14a:	0d 92       	st	X+, r0
     14c:	a8 35       	cpi	r26, 0x58	; 88
     14e:	b1 07       	cpc	r27, r17
     150:	d9 f7       	brne	.-10     	; 0x148 <__do_copy_data+0xc>

00000152 <__do_clear_bss>:
     152:	21 e0       	ldi	r18, 0x01	; 1
     154:	a8 e5       	ldi	r26, 0x58	; 88
     156:	b1 e0       	ldi	r27, 0x01	; 1
     158:	01 c0       	rjmp	.+2      	; 0x15c <.do_clear_bss_start>

0000015a <.do_clear_bss_loop>:
     15a:	1d 92       	st	X+, r1

0000015c <.do_clear_bss_start>:
     15c:	ac 37       	cpi	r26, 0x7C	; 124
     15e:	b2 07       	cpc	r27, r18
     160:	e1 f7       	brne	.-8      	; 0x15a <.do_clear_bss_loop>
     162:	44 d7       	rcall	.+3720   	; 0xfec <main>
     164:	37 cc       	rjmp	.-1938   	; 0xfffff9d4 <__eeprom_end+0xff7ef9d4>

00000166 <__bad_interrupt>:
     166:	4c cf       	rjmp	.-360    	; 0x0 <__vectors>

00000168 <_ZL10lcd_enablev>:

////////////////////////////////////////////////////////////////////////////////
// Erzeugt einen Enable-Puls
static void lcd_enable( void )
{
	LCD_PORT |= (1<<LCD_EN);     // Enable auf 1 setzen
     168:	c5 9a       	sbi	0x18, 5	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     16a:	88 e1       	ldi	r24, 0x18	; 24
     16c:	8a 95       	dec	r24
     16e:	f1 f7       	brne	.-4      	; 0x16c <_ZL10lcd_enablev+0x4>
     170:	00 c0       	rjmp	.+0      	; 0x172 <_ZL10lcd_enablev+0xa>
	_delay_us( LCD_ENABLE_US );  // kurze Pause
	LCD_PORT &= ~(1<<LCD_EN);    // Enable auf 0 setzen
     172:	c5 98       	cbi	0x18, 5	; 24
     174:	08 95       	ret

00000176 <_ZL7lcd_outh>:
// Sendet eine 4-bit Ausgabeoperation an das LCD
static void lcd_out( uint8_t data )
{
	data &= 0xF0;                       // obere 4 Bit maskieren
	
	LCD_PORT &= ~(0xF0>>(4-LCD_DB));    // Maske löschen
     176:	98 b3       	in	r25, 0x18	; 24
     178:	90 7f       	andi	r25, 0xF0	; 240
     17a:	98 bb       	out	0x18, r25	; 24
	LCD_PORT |= (data>>(4-LCD_DB));     // Bits setzen
     17c:	98 b3       	in	r25, 0x18	; 24
     17e:	82 95       	swap	r24
     180:	8f 70       	andi	r24, 0x0F	; 15
     182:	98 2b       	or	r25, r24
     184:	98 bb       	out	0x18, r25	; 24
	lcd_enable();
     186:	f0 df       	rcall	.-32     	; 0x168 <_ZL10lcd_enablev>
     188:	08 95       	ret

0000018a <_Z8lcd_datah>:
}

////////////////////////////////////////////////////////////////////////////////
// Sendet ein Datenbyte an das LCD
void lcd_data( uint8_t data )
{
     18a:	cf 93       	push	r28
     18c:	c8 2f       	mov	r28, r24
	LCD_PORT |= (1<<LCD_RS);    // RS auf 1 setzen
     18e:	c4 9a       	sbi	0x18, 4	; 24
	
	lcd_out( data );            // zuerst die oberen,
     190:	f2 df       	rcall	.-28     	; 0x176 <_ZL7lcd_outh>
	lcd_out( data<<4 );         // dann die unteren 4 Bit senden
     192:	8c 2f       	mov	r24, r28
     194:	82 95       	swap	r24
     196:	80 7f       	andi	r24, 0xF0	; 240
     198:	ee df       	rcall	.-36     	; 0x176 <_ZL7lcd_outh>
     19a:	88 e3       	ldi	r24, 0x38	; 56
     19c:	8a 95       	dec	r24
     19e:	f1 f7       	brne	.-4      	; 0x19c <_Z8lcd_datah+0x12>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <_Z8lcd_datah+0x18>
	
	_delay_us( LCD_WRITEDATA_US );
}
     1a2:	cf 91       	pop	r28
     1a4:	08 95       	ret

000001a6 <_Z11lcd_commandh>:

////////////////////////////////////////////////////////////////////////////////
// Sendet einen Befehl an das LCD
void lcd_command( uint8_t data )
{
     1a6:	cf 93       	push	r28
     1a8:	c8 2f       	mov	r28, r24
	LCD_PORT &= ~(1<<LCD_RS);    // RS auf 0 setzen
     1aa:	c4 98       	cbi	0x18, 4	; 24
	
	lcd_out( data );             // zuerst die oberen,
     1ac:	e4 df       	rcall	.-56     	; 0x176 <_ZL7lcd_outh>
	lcd_out( data<<4 );           // dann die unteren 4 Bit senden
     1ae:	8c 2f       	mov	r24, r28
     1b0:	82 95       	swap	r24
     1b2:	80 7f       	andi	r24, 0xF0	; 240
     1b4:	e0 df       	rcall	.-64     	; 0x176 <_ZL7lcd_outh>
     1b6:	83 e3       	ldi	r24, 0x33	; 51
     1b8:	8a 95       	dec	r24
     1ba:	f1 f7       	brne	.-4      	; 0x1b8 <_Z11lcd_commandh+0x12>
     1bc:	00 c0       	rjmp	.+0      	; 0x1be <_Z11lcd_commandh+0x18>
	
	_delay_us( LCD_COMMAND_US );
}
     1be:	cf 91       	pop	r28
     1c0:	08 95       	ret

000001c2 <_Z9lcd_clearv>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl zur Löschung des Displays
void lcd_clear( void )
{
	lcd_command( LCD_CLEAR_DISPLAY );
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	f0 df       	rcall	.-32     	; 0x1a6 <_Z11lcd_commandh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c6:	83 e3       	ldi	r24, 0x33	; 51
     1c8:	97 e0       	ldi	r25, 0x07	; 7
     1ca:	01 97       	sbiw	r24, 0x01	; 1
     1cc:	f1 f7       	brne	.-4      	; 0x1ca <_Z9lcd_clearv+0x8>
     1ce:	08 95       	ret

000001d0 <_Z8lcd_initv>:
{
	// verwendete Pins auf Ausgang schalten
	uint8_t pins = (0x0F << LCD_DB) |           // 4 Datenleitungen
	(1<<LCD_RS) |                // R/S Leitung
	(1<<LCD_EN);                 // Enable Leitung
	LCD_DDR |= pins;
     1d0:	87 b3       	in	r24, 0x17	; 23
     1d2:	8f 63       	ori	r24, 0x3F	; 63
     1d4:	87 bb       	out	0x17, r24	; 23
	
	// initial alle Ausgänge auf Null
	LCD_PORT &= ~pins;
     1d6:	88 b3       	in	r24, 0x18	; 24
     1d8:	80 7c       	andi	r24, 0xC0	; 192
     1da:	88 bb       	out	0x18, r24	; 24
     1dc:	8f ef       	ldi	r24, 0xFF	; 255
     1de:	95 e3       	ldi	r25, 0x35	; 53
     1e0:	01 97       	sbiw	r24, 0x01	; 1
     1e2:	f1 f7       	brne	.-4      	; 0x1e0 <_Z8lcd_initv+0x10>
     1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <_Z8lcd_initv+0x16>
     1e6:	00 00       	nop
	
	// warten auf die Bereitschaft des LCD
	_delay_ms( LCD_BOOTUP_MS );
	
	// Soft-Reset muss 3mal hintereinander gesendet werden zur Initialisierung
	lcd_out( LCD_SOFT_RESET );
     1e8:	80 e3       	ldi	r24, 0x30	; 48
     1ea:	c5 df       	rcall	.-118    	; 0x176 <_ZL7lcd_outh>
     1ec:	8f ef       	ldi	r24, 0xFF	; 255
     1ee:	91 e1       	ldi	r25, 0x11	; 17
     1f0:	01 97       	sbiw	r24, 0x01	; 1
     1f2:	f1 f7       	brne	.-4      	; 0x1f0 <_Z8lcd_initv+0x20>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <_Z8lcd_initv+0x26>
     1f6:	00 00       	nop
	_delay_ms( LCD_SOFT_RESET_MS1 );
	
	lcd_enable();
     1f8:	b7 df       	rcall	.-146    	; 0x168 <_ZL10lcd_enablev>
     1fa:	89 e9       	ldi	r24, 0x99	; 153
     1fc:	93 e0       	ldi	r25, 0x03	; 3
     1fe:	01 97       	sbiw	r24, 0x01	; 1
     200:	f1 f7       	brne	.-4      	; 0x1fe <_Z8lcd_initv+0x2e>
     202:	00 c0       	rjmp	.+0      	; 0x204 <_Z8lcd_initv+0x34>
	_delay_ms( LCD_SOFT_RESET_MS2 );
	
	lcd_enable();
     204:	b1 df       	rcall	.-158    	; 0x168 <_ZL10lcd_enablev>
     206:	89 e9       	ldi	r24, 0x99	; 153
     208:	93 e0       	ldi	r25, 0x03	; 3
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	f1 f7       	brne	.-4      	; 0x20a <_Z8lcd_initv+0x3a>
     20e:	00 c0       	rjmp	.+0      	; 0x210 <_Z8lcd_initv+0x40>
	_delay_ms( LCD_SOFT_RESET_MS3 );
	
	// 4-bit Modus aktivieren
	lcd_out( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT );
     210:	80 e2       	ldi	r24, 0x20	; 32
     212:	b1 df       	rcall	.-158    	; 0x176 <_ZL7lcd_outh>
     214:	8f ef       	ldi	r24, 0xFF	; 255
     216:	91 e1       	ldi	r25, 0x11	; 17
     218:	01 97       	sbiw	r24, 0x01	; 1
     21a:	f1 f7       	brne	.-4      	; 0x218 <_Z8lcd_initv+0x48>
     21c:	00 c0       	rjmp	.+0      	; 0x21e <_Z8lcd_initv+0x4e>
     21e:	00 00       	nop
	
	// 4-bit Modus / 2 Zeilen / 5x7
	lcd_command( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT |
	LCD_FUNCTION_2LINE |
	LCD_FUNCTION_5X7 );
     220:	88 e2       	ldi	r24, 0x28	; 40
     222:	c1 df       	rcall	.-126    	; 0x1a6 <_Z11lcd_commandh>
	
	// Display ein / Cursor aus / Blinken aus
	lcd_command( LCD_SET_DISPLAY |
	LCD_DISPLAY_ON |
	LCD_CURSOR_OFF |
	LCD_BLINKING_OFF);
     224:	8c e0       	ldi	r24, 0x0C	; 12
     226:	bf df       	rcall	.-130    	; 0x1a6 <_Z11lcd_commandh>
	
	// Cursor inkrement / kein Scrollen
	lcd_command( LCD_SET_ENTRY |
	LCD_ENTRY_INCREASE |
	LCD_ENTRY_NOSHIFT );
     228:	86 e0       	ldi	r24, 0x06	; 6
     22a:	bd df       	rcall	.-134    	; 0x1a6 <_Z11lcd_commandh>
	
	lcd_clear();
     22c:	ca df       	rcall	.-108    	; 0x1c2 <_Z9lcd_clearv>
     22e:	08 95       	ret

00000230 <_Z8lcd_homev>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl: Cursor Home
void lcd_home( void )
{
	lcd_command( LCD_CURSOR_HOME );
     230:	82 e0       	ldi	r24, 0x02	; 2
     232:	b9 df       	rcall	.-142    	; 0x1a6 <_Z11lcd_commandh>
     234:	83 e3       	ldi	r24, 0x33	; 51
     236:	97 e0       	ldi	r25, 0x07	; 7
     238:	01 97       	sbiw	r24, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <_Z8lcd_homev+0x8>
     23c:	08 95       	ret

0000023e <_Z13lcd_setcursorhh>:

void lcd_setcursor( uint8_t x, uint8_t y )
{
	uint8_t data;
	
	switch (y)
     23e:	62 30       	cpi	r22, 0x02	; 2
     240:	59 f0       	breq	.+22     	; 0x258 <_Z13lcd_setcursorhh+0x1a>
     242:	18 f4       	brcc	.+6      	; 0x24a <_Z13lcd_setcursorhh+0xc>
     244:	61 30       	cpi	r22, 0x01	; 1
     246:	71 f4       	brne	.+28     	; 0x264 <_Z13lcd_setcursorhh+0x26>
     248:	05 c0       	rjmp	.+10     	; 0x254 <_Z13lcd_setcursorhh+0x16>
     24a:	63 30       	cpi	r22, 0x03	; 3
     24c:	39 f0       	breq	.+14     	; 0x25c <_Z13lcd_setcursorhh+0x1e>
     24e:	64 30       	cpi	r22, 0x04	; 4
     250:	49 f4       	brne	.+18     	; 0x264 <_Z13lcd_setcursorhh+0x26>
     252:	06 c0       	rjmp	.+12     	; 0x260 <_Z13lcd_setcursorhh+0x22>
	{
		case 1:    // 1. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE1 + x;
     254:	80 58       	subi	r24, 0x80	; 128
		break;
     256:	05 c0       	rjmp	.+10     	; 0x262 <_Z13lcd_setcursorhh+0x24>
		
		case 2:    // 2. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE2 + x;
     258:	80 54       	subi	r24, 0x40	; 64
		break;
     25a:	03 c0       	rjmp	.+6      	; 0x262 <_Z13lcd_setcursorhh+0x24>
		
		case 3:    // 3. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE3 + x;
     25c:	80 57       	subi	r24, 0x70	; 112
		break;
     25e:	01 c0       	rjmp	.+2      	; 0x262 <_Z13lcd_setcursorhh+0x24>
		
		case 4:    // 4. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE4 + x;
     260:	80 53       	subi	r24, 0x30	; 48
		
		default:
		return;                                   // für den Fall einer falschen Zeile
	}
	
	lcd_command( data );
     262:	a1 df       	rcall	.-190    	; 0x1a6 <_Z11lcd_commandh>
     264:	08 95       	ret

00000266 <_Z10lcd_stringPKc>:

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	ec 01       	movw	r28, r24
	while( *data != '\0' )
     26c:	88 81       	ld	r24, Y
     26e:	88 23       	and	r24, r24
     270:	29 f0       	breq	.+10     	; 0x27c <_Z10lcd_stringPKc+0x16>
}

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
     272:	21 96       	adiw	r28, 0x01	; 1
{
	while( *data != '\0' )
	lcd_data( *data++ );
     274:	8a df       	rcall	.-236    	; 0x18a <_Z8lcd_datah>
////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
	while( *data != '\0' )
     276:	89 91       	ld	r24, Y+
     278:	81 11       	cpse	r24, r1
     27a:	fc cf       	rjmp	.-8      	; 0x274 <_Z10lcd_stringPKc+0xe>
	lcd_data( *data++ );
}
     27c:	df 91       	pop	r29
     27e:	cf 91       	pop	r28
     280:	08 95       	ret

00000282 <_Z8ADC_Readh>:
#ifndef ADC_H_
#define ADC_H_

uint16_t ADC_Read( uint8_t channel )
{
	ADMUX = (ADMUX & ~(0x1F)) | (channel & 0x1F);
     282:	97 b1       	in	r25, 0x07	; 7
     284:	8f 71       	andi	r24, 0x1F	; 31
     286:	90 7e       	andi	r25, 0xE0	; 224
     288:	98 2b       	or	r25, r24
     28a:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1<<ADSC);
     28c:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     28e:	36 99       	sbic	0x06, 6	; 6
     290:	fe cf       	rjmp	.-4      	; 0x28e <_Z8ADC_Readh+0xc>
	}
	return ADCW;
     292:	24 b1       	in	r18, 0x04	; 4
     294:	35 b1       	in	r19, 0x05	; 5
}
     296:	82 2f       	mov	r24, r18
     298:	93 2f       	mov	r25, r19
     29a:	08 95       	ret

0000029c <_Z11lichteinaush>:
		}
	}
}

void lichteinaus(uint8_t pos){
	switch (pos)
     29c:	82 30       	cpi	r24, 0x02	; 2
     29e:	91 f0       	breq	.+36     	; 0x2c4 <_Z11lichteinaush+0x28>
     2a0:	28 f4       	brcc	.+10     	; 0x2ac <_Z11lichteinaush+0x10>
     2a2:	88 23       	and	r24, r24
     2a4:	49 f0       	breq	.+18     	; 0x2b8 <_Z11lichteinaush+0x1c>
     2a6:	81 30       	cpi	r24, 0x01	; 1
     2a8:	c1 f4       	brne	.+48     	; 0x2da <_Z11lichteinaush+0x3e>
     2aa:	0a c0       	rjmp	.+20     	; 0x2c0 <_Z11lichteinaush+0x24>
     2ac:	84 30       	cpi	r24, 0x04	; 4
     2ae:	71 f0       	breq	.+28     	; 0x2cc <_Z11lichteinaush+0x30>
     2b0:	58 f0       	brcs	.+22     	; 0x2c8 <_Z11lichteinaush+0x2c>
     2b2:	85 30       	cpi	r24, 0x05	; 5
     2b4:	91 f4       	brne	.+36     	; 0x2da <_Z11lichteinaush+0x3e>
     2b6:	0e c0       	rjmp	.+28     	; 0x2d4 <_Z11lichteinaush+0x38>
	{
		case 0:
			PORTC &= ~((1<<PC5) | (1<<PC4) | (1<<PC3));
     2b8:	85 b3       	in	r24, 0x15	; 21
     2ba:	87 7c       	andi	r24, 0xC7	; 199
     2bc:	85 bb       	out	0x15, r24	; 21
			break;
     2be:	08 95       	ret
			
		case 1:
			PORTC |= (1<<PC5);
     2c0:	ad 9a       	sbi	0x15, 5	; 21
			break;
     2c2:	08 95       	ret
		
		case 2:
			PORTC |= (1<<PC4);
     2c4:	ac 9a       	sbi	0x15, 4	; 21
			break;
     2c6:	08 95       	ret
			
		case 3: 
			PORTC |= (1<<PC3);
     2c8:	ab 9a       	sbi	0x15, 3	; 21
			break;
     2ca:	08 95       	ret
		
		case 4:
			PORTC |= ((1<<PC5) | (1<<PC4) | (1<<PC3));
     2cc:	85 b3       	in	r24, 0x15	; 21
     2ce:	88 63       	ori	r24, 0x38	; 56
     2d0:	85 bb       	out	0x15, r24	; 21
			break;
     2d2:	08 95       	ret
		
		case 5:
			PORTC |= ((1<<PC5) | (1<<PC4));
     2d4:	85 b3       	in	r24, 0x15	; 21
     2d6:	80 63       	ori	r24, 0x30	; 48
     2d8:	85 bb       	out	0x15, r24	; 21
     2da:	08 95       	ret

000002dc <_Z6Weckerv>:

#ifndef ZEIT_H_
#define ZEIT_H_

void Wecker(){
	if (WochenTag!=0 && WochenTag!=6)
     2dc:	80 91 78 01 	lds	r24, 0x0178
     2e0:	88 23       	and	r24, r24
     2e2:	a1 f0       	breq	.+40     	; 0x30c <_Z6Weckerv+0x30>
     2e4:	86 30       	cpi	r24, 0x06	; 6
     2e6:	91 f0       	breq	.+36     	; 0x30c <_Z6Weckerv+0x30>
	{
		if(Stunden==WStunden[0]){
     2e8:	90 91 76 01 	lds	r25, 0x0176
     2ec:	80 91 79 01 	lds	r24, 0x0179
     2f0:	98 13       	cpse	r25, r24
     2f2:	1d c0       	rjmp	.+58     	; 0x32e <_Z6Weckerv+0x52>
			if(Minuten==WMinuten[0]){
     2f4:	90 91 74 01 	lds	r25, 0x0174
     2f8:	80 91 7a 01 	lds	r24, 0x017A
     2fc:	98 13       	cpse	r25, r24
     2fe:	17 c0       	rjmp	.+46     	; 0x32e <_Z6Weckerv+0x52>
				Wan = 1;
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	80 93 73 01 	sts	0x0173, r24
				lichteinaus(4);
     306:	84 e0       	ldi	r24, 0x04	; 4
     308:	c9 df       	rcall	.-110    	; 0x29c <_Z11lichteinaush>
     30a:	08 95       	ret
			}
		}
	}
	else
	{
		if(Stunden==WStunden[1]){
     30c:	90 91 77 01 	lds	r25, 0x0177
     310:	80 91 79 01 	lds	r24, 0x0179
     314:	98 13       	cpse	r25, r24
     316:	0b c0       	rjmp	.+22     	; 0x32e <_Z6Weckerv+0x52>
			if(Minuten==WMinuten[1]){
     318:	90 91 75 01 	lds	r25, 0x0175
     31c:	80 91 7a 01 	lds	r24, 0x017A
     320:	98 13       	cpse	r25, r24
     322:	05 c0       	rjmp	.+10     	; 0x32e <_Z6Weckerv+0x52>
				Wan = 1;
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	80 93 73 01 	sts	0x0173, r24
				lichteinaus(4);
     32a:	84 e0       	ldi	r24, 0x04	; 4
     32c:	b7 df       	rcall	.-146    	; 0x29c <_Z11lichteinaush>
     32e:	08 95       	ret

00000330 <_Z10temperaturv>:


}


void temperatur(){
     330:	cf 92       	push	r12
     332:	df 92       	push	r13
     334:	ef 92       	push	r14
     336:	ff 92       	push	r15
     338:	0f 93       	push	r16
     33a:	1f 93       	push	r17
     33c:	cf 93       	push	r28
     33e:	df 93       	push	r29
	ADC_Read(0);
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	9f df       	rcall	.-194    	; 0x282 <_Z8ADC_Readh>
	uint16_t adcval = ADC_Read(0);
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	9d df       	rcall	.-198    	; 0x282 <_Z8ADC_Readh>
	double span= (double)adcval*(5.0/1024.0);
     348:	bc 01       	movw	r22, r24
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	9a d7       	rcall	.+3892   	; 0x1284 <__floatunsisf>
     350:	20 e0       	ldi	r18, 0x00	; 0
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	40 ea       	ldi	r20, 0xA0	; 160
     356:	5b e3       	ldi	r21, 0x3B	; 59
     358:	23 d8       	rcall	.-4026   	; 0xfffff3a0 <__eeprom_end+0xff7ef3a0>
     35a:	06 2f       	mov	r16, r22
     35c:	17 2f       	mov	r17, r23
     35e:	d8 2f       	mov	r29, r24
     360:	c9 2f       	mov	r28, r25
	double widerst = ((double)span*2700.0)/((double)(5-(double)span));
     362:	20 e0       	ldi	r18, 0x00	; 0
     364:	30 ec       	ldi	r19, 0xC0	; 192
     366:	48 e2       	ldi	r20, 0x28	; 40
     368:	55 e4       	ldi	r21, 0x45	; 69
     36a:	1a d8       	rcall	.-4044   	; 0xfffff3a0 <__eeprom_end+0xff7ef3a0>
     36c:	6b 01       	movw	r12, r22
     36e:	7c 01       	movw	r14, r24
     370:	20 2f       	mov	r18, r16
     372:	31 2f       	mov	r19, r17
     374:	4d 2f       	mov	r20, r29
     376:	5c 2f       	mov	r21, r28
     378:	60 e0       	ldi	r22, 0x00	; 0
     37a:	70 e0       	ldi	r23, 0x00	; 0
     37c:	80 ea       	ldi	r24, 0xA0	; 160
     37e:	90 e4       	ldi	r25, 0x40	; 64
     380:	b4 d6       	rcall	.+3432   	; 0x10ea <__subsf3>
     382:	9b 01       	movw	r18, r22
     384:	ac 01       	movw	r20, r24
     386:	c7 01       	movw	r24, r14
     388:	b6 01       	movw	r22, r12
     38a:	14 d7       	rcall	.+3624   	; 0x11b4 <__divsf3>
	tempera = (100.0/1387.0)*widerst+(50+tempoffset-(100.0/1387.0)*2417.0);
     38c:	25 e2       	ldi	r18, 0x25	; 37
     38e:	38 ea       	ldi	r19, 0xA8	; 168
     390:	43 e9       	ldi	r20, 0x93	; 147
     392:	5d e3       	ldi	r21, 0x3D	; 61
     394:	05 d8       	rcall	.-4086   	; 0xfffff3a0 <__eeprom_end+0xff7ef3a0>
     396:	6b 01       	movw	r12, r22
     398:	7c 01       	movw	r14, r24
     39a:	60 91 62 00 	lds	r22, 0x0062
     39e:	77 27       	eor	r23, r23
     3a0:	67 fd       	sbrc	r22, 7
     3a2:	70 95       	com	r23
     3a4:	6e 5c       	subi	r22, 0xCE	; 206
     3a6:	7f 4f       	sbci	r23, 0xFF	; 255
     3a8:	88 27       	eor	r24, r24
     3aa:	77 fd       	sbrc	r23, 7
     3ac:	80 95       	com	r24
     3ae:	98 2f       	mov	r25, r24
     3b0:	6b d7       	rcall	.+3798   	; 0x1288 <__floatsisf>
     3b2:	21 ed       	ldi	r18, 0xD1	; 209
     3b4:	32 e4       	ldi	r19, 0x42	; 66
     3b6:	4e e2       	ldi	r20, 0x2E	; 46
     3b8:	53 e4       	ldi	r21, 0x43	; 67
     3ba:	97 d6       	rcall	.+3374   	; 0x10ea <__subsf3>
     3bc:	9b 01       	movw	r18, r22
     3be:	ac 01       	movw	r20, r24
     3c0:	c7 01       	movw	r24, r14
     3c2:	b6 01       	movw	r22, r12
     3c4:	93 d6       	rcall	.+3366   	; 0x10ec <__addsf3>
     3c6:	60 93 6e 01 	sts	0x016E, r22
     3ca:	70 93 6f 01 	sts	0x016F, r23
     3ce:	80 93 70 01 	sts	0x0170, r24
     3d2:	90 93 71 01 	sts	0x0171, r25
}
     3d6:	df 91       	pop	r29
     3d8:	cf 91       	pop	r28
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	ff 90       	pop	r15
     3e0:	ef 90       	pop	r14
     3e2:	df 90       	pop	r13
     3e4:	cf 90       	pop	r12
     3e6:	08 95       	ret

000003e8 <_Z4zeitv>:

void zeit(){
	sektemp=Sekunden;
     3e8:	80 91 7b 01 	lds	r24, 0x017B
     3ec:	80 93 72 01 	sts	0x0172, r24
	if (Sekunden >= 60){
     3f0:	8c 33       	cpi	r24, 0x3C	; 60
     3f2:	30 f1       	brcs	.+76     	; 0x440 <_Z4zeitv+0x58>
		//Temperatur bestimmen
		temperatur();
     3f4:	9d df       	rcall	.-198    	; 0x330 <_Z10temperaturv>
		
		Sekunden = 0;
     3f6:	10 92 7b 01 	sts	0x017B, r1
		Minuten++;
     3fa:	80 91 7a 01 	lds	r24, 0x017A
     3fe:	8f 5f       	subi	r24, 0xFF	; 255
		if(Minuten >= 60){
     400:	8c 33       	cpi	r24, 0x3C	; 60
     402:	18 f4       	brcc	.+6      	; 0x40a <_Z4zeitv+0x22>
	if (Sekunden >= 60){
		//Temperatur bestimmen
		temperatur();
		
		Sekunden = 0;
		Minuten++;
     404:	80 93 7a 01 	sts	0x017A, r24
     408:	07 c0       	rjmp	.+14     	; 0x418 <_Z4zeitv+0x30>
		if(Minuten >= 60){
			Minuten = 0;
     40a:	10 92 7a 01 	sts	0x017A, r1
			Stunden++;
     40e:	80 91 79 01 	lds	r24, 0x0179
     412:	8f 5f       	subi	r24, 0xFF	; 255
     414:	80 93 79 01 	sts	0x0179, r24
		}
		if(Stunden >= 24){
     418:	80 91 79 01 	lds	r24, 0x0179
     41c:	88 31       	cpi	r24, 0x18	; 24
     41e:	80 f0       	brcs	.+32     	; 0x440 <_Z4zeitv+0x58>
			Stunden = 0;
     420:	10 92 79 01 	sts	0x0179, r1
			WochenTag++;
     424:	80 91 78 01 	lds	r24, 0x0178
     428:	8f 5f       	subi	r24, 0xFF	; 255
			if (WochenTag>=7)
     42a:	87 30       	cpi	r24, 0x07	; 7
     42c:	18 f4       	brcc	.+6      	; 0x434 <_Z4zeitv+0x4c>
			Minuten = 0;
			Stunden++;
		}
		if(Stunden >= 24){
			Stunden = 0;
			WochenTag++;
     42e:	80 93 78 01 	sts	0x0178, r24
     432:	02 c0       	rjmp	.+4      	; 0x438 <_Z4zeitv+0x50>
			if (WochenTag>=7)
			{
				WochenTag=0;
     434:	10 92 78 01 	sts	0x0178, r1
			}
			Sekunden += sekoffset; //Ausgleich der VerlustSekunden
     438:	80 91 6d 01 	lds	r24, 0x016D
     43c:	80 93 7b 01 	sts	0x017B, r24
		}
	}
	
	if(Wan==0)
     440:	80 91 73 01 	lds	r24, 0x0173
     444:	81 11       	cpse	r24, r1
     446:	01 c0       	rjmp	.+2      	; 0x44a <_Z4zeitv+0x62>
	{
		Wecker();
     448:	49 df       	rcall	.-366    	; 0x2dc <_Z6Weckerv>
     44a:	08 95       	ret

0000044c <_Z4wtagh>:

#ifndef AUSGABE_H_
#define AUSGABE_H_

void wtag(uint8_t numm){
	switch (numm)
     44c:	83 30       	cpi	r24, 0x03	; 3
     44e:	b9 f0       	breq	.+46     	; 0x47e <__stack+0x1f>
     450:	20 f4       	brcc	.+8      	; 0x45a <_Z4wtagh+0xe>
     452:	81 30       	cpi	r24, 0x01	; 1
     454:	61 f0       	breq	.+24     	; 0x46e <__stack+0xf>
     456:	78 f4       	brcc	.+30     	; 0x476 <__stack+0x17>
     458:	06 c0       	rjmp	.+12     	; 0x466 <__stack+0x7>
     45a:	85 30       	cpi	r24, 0x05	; 5
     45c:	c1 f0       	breq	.+48     	; 0x48e <__stack+0x2f>
     45e:	98 f0       	brcs	.+38     	; 0x486 <__stack+0x27>
     460:	86 30       	cpi	r24, 0x06	; 6
     462:	e1 f4       	brne	.+56     	; 0x49c <__stack+0x3d>
     464:	18 c0       	rjmp	.+48     	; 0x496 <__stack+0x37>
	{
		case 0:
		lcd_string("So ");
     466:	83 e6       	ldi	r24, 0x63	; 99
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	fd de       	rcall	.-518    	; 0x266 <_Z10lcd_stringPKc>
		break;
     46c:	08 95       	ret
		
		case 1:
		lcd_string("Mo ");
     46e:	87 e6       	ldi	r24, 0x67	; 103
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	f9 de       	rcall	.-526    	; 0x266 <_Z10lcd_stringPKc>
		break;
     474:	08 95       	ret
		
		case 2:
		lcd_string("Di ");
     476:	8b e6       	ldi	r24, 0x6B	; 107
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	f5 de       	rcall	.-534    	; 0x266 <_Z10lcd_stringPKc>
		break;
     47c:	08 95       	ret
		
		case 3:
		lcd_string("Mi ");
     47e:	8f e6       	ldi	r24, 0x6F	; 111
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	f1 de       	rcall	.-542    	; 0x266 <_Z10lcd_stringPKc>
		break;
     484:	08 95       	ret
		
		case 4:
		lcd_string("Do ");
     486:	83 e7       	ldi	r24, 0x73	; 115
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	ed de       	rcall	.-550    	; 0x266 <_Z10lcd_stringPKc>
		break;
     48c:	08 95       	ret
		
		case 5:
		lcd_string("Fr ");
     48e:	87 e7       	ldi	r24, 0x77	; 119
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	e9 de       	rcall	.-558    	; 0x266 <_Z10lcd_stringPKc>
		break;
     494:	08 95       	ret
		
		case 6:
		lcd_string("Sa ");
     496:	8b e7       	ldi	r24, 0x7B	; 123
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	e5 de       	rcall	.-566    	; 0x266 <_Z10lcd_stringPKc>
     49c:	08 95       	ret

0000049e <_Z7zeitaush>:
			break;
	}
}

void zeitaus(uint8_t pos){
	switch (pos)
     49e:	88 23       	and	r24, r24
     4a0:	21 f0       	breq	.+8      	; 0x4aa <_Z7zeitaush+0xc>
     4a2:	81 30       	cpi	r24, 0x01	; 1
     4a4:	09 f0       	breq	.+2      	; 0x4a8 <_Z7zeitaush+0xa>
     4a6:	42 c0       	rjmp	.+132    	; 0x52c <_Z7zeitaush+0x8e>
     4a8:	1a c0       	rjmp	.+52     	; 0x4de <_Z7zeitaush+0x40>
	{
		case 0:
			itoa( Stunden, Buffer, 10 );
     4aa:	4a e0       	ldi	r20, 0x0A	; 10
     4ac:	50 e0       	ldi	r21, 0x00	; 0
     4ae:	69 e5       	ldi	r22, 0x59	; 89
     4b0:	71 e0       	ldi	r23, 0x01	; 1
     4b2:	80 91 79 01 	lds	r24, 0x0179
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	f6 d7       	rcall	.+4076   	; 0x14a6 <itoa>
			lcd_string(Buffer);
     4ba:	89 e5       	ldi	r24, 0x59	; 89
     4bc:	91 e0       	ldi	r25, 0x01	; 1
     4be:	d3 de       	rcall	.-602    	; 0x266 <_Z10lcd_stringPKc>
			lcd_string(":");
     4c0:	88 ec       	ldi	r24, 0xC8	; 200
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	d0 de       	rcall	.-608    	; 0x266 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     4c6:	4a e0       	ldi	r20, 0x0A	; 10
     4c8:	50 e0       	ldi	r21, 0x00	; 0
     4ca:	69 e5       	ldi	r22, 0x59	; 89
     4cc:	71 e0       	ldi	r23, 0x01	; 1
     4ce:	80 91 7a 01 	lds	r24, 0x017A
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	e8 d7       	rcall	.+4048   	; 0x14a6 <itoa>
			lcd_string(Buffer);
     4d6:	89 e5       	ldi	r24, 0x59	; 89
     4d8:	91 e0       	ldi	r25, 0x01	; 1
     4da:	c5 de       	rcall	.-630    	; 0x266 <_Z10lcd_stringPKc>
			
			break;
     4dc:	08 95       	ret
		
		case 1:
			itoa( Stunden, Buffer, 10 );
     4de:	4a e0       	ldi	r20, 0x0A	; 10
     4e0:	50 e0       	ldi	r21, 0x00	; 0
     4e2:	69 e5       	ldi	r22, 0x59	; 89
     4e4:	71 e0       	ldi	r23, 0x01	; 1
     4e6:	80 91 79 01 	lds	r24, 0x0179
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	dc d7       	rcall	.+4024   	; 0x14a6 <itoa>
			lcd_string(Buffer);
     4ee:	89 e5       	ldi	r24, 0x59	; 89
     4f0:	91 e0       	ldi	r25, 0x01	; 1
     4f2:	b9 de       	rcall	.-654    	; 0x266 <_Z10lcd_stringPKc>
			lcd_string(":");
     4f4:	88 ec       	ldi	r24, 0xC8	; 200
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	b6 de       	rcall	.-660    	; 0x266 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     4fa:	4a e0       	ldi	r20, 0x0A	; 10
     4fc:	50 e0       	ldi	r21, 0x00	; 0
     4fe:	69 e5       	ldi	r22, 0x59	; 89
     500:	71 e0       	ldi	r23, 0x01	; 1
     502:	80 91 7a 01 	lds	r24, 0x017A
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	ce d7       	rcall	.+3996   	; 0x14a6 <itoa>
			lcd_string(Buffer);
     50a:	89 e5       	ldi	r24, 0x59	; 89
     50c:	91 e0       	ldi	r25, 0x01	; 1
     50e:	ab de       	rcall	.-682    	; 0x266 <_Z10lcd_stringPKc>
			lcd_string(":");
     510:	88 ec       	ldi	r24, 0xC8	; 200
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	a8 de       	rcall	.-688    	; 0x266 <_Z10lcd_stringPKc>
			itoa(Sekunden, Buffer,10);
     516:	4a e0       	ldi	r20, 0x0A	; 10
     518:	50 e0       	ldi	r21, 0x00	; 0
     51a:	69 e5       	ldi	r22, 0x59	; 89
     51c:	71 e0       	ldi	r23, 0x01	; 1
     51e:	80 91 7b 01 	lds	r24, 0x017B
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	c0 d7       	rcall	.+3968   	; 0x14a6 <itoa>
			lcd_string(Buffer);
     526:	89 e5       	ldi	r24, 0x59	; 89
     528:	91 e0       	ldi	r25, 0x01	; 1
     52a:	9d de       	rcall	.-710    	; 0x266 <_Z10lcd_stringPKc>
     52c:	08 95       	ret

0000052e <_Z3aushh>:
		default:
		break;
	}
}

void aus(uint8_t zeile, uint8_t pos){
     52e:	0f 93       	push	r16
     530:	1f 93       	push	r17
     532:	cf 93       	push	r28
     534:	c6 2f       	mov	r28, r22
	
	switch (zeile)
     536:	81 30       	cpi	r24, 0x01	; 1
     538:	21 f0       	breq	.+8      	; 0x542 <_Z3aushh+0x14>
     53a:	82 30       	cpi	r24, 0x02	; 2
     53c:	09 f0       	breq	.+2      	; 0x540 <_Z3aushh+0x12>
     53e:	8a c0       	rjmp	.+276    	; 0x654 <_Z3aushh+0x126>
     540:	71 c0       	rjmp	.+226    	; 0x624 <_Z3aushh+0xf6>
	{
		case 1:
			lcd_clear();
     542:	3f de       	rcall	.-898    	; 0x1c2 <_Z9lcd_clearv>
			lcd_home();
     544:	75 de       	rcall	.-790    	; 0x230 <_Z8lcd_homev>
			switch (pos)
     546:	ec 2f       	mov	r30, r28
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	e8 30       	cpi	r30, 0x08	; 8
     54c:	f1 05       	cpc	r31, r1
     54e:	08 f0       	brcs	.+2      	; 0x552 <_Z3aushh+0x24>
     550:	81 c0       	rjmp	.+258    	; 0x654 <_Z3aushh+0x126>
     552:	ed 5e       	subi	r30, 0xED	; 237
     554:	ff 4f       	sbci	r31, 0xFF	; 255
     556:	09 94       	ijmp
			{
				case 0:
					//Alles ohne Sekunden
					wtag(WochenTag);
     558:	80 91 78 01 	lds	r24, 0x0178
     55c:	77 df       	rcall	.-274    	; 0x44c <_Z4wtagh>
					lcd_string(" ");
     55e:	8f e9       	ldi	r24, 0x9F	; 159
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	81 de       	rcall	.-766    	; 0x266 <_Z10lcd_stringPKc>
					zeitaus(0);
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	9b df       	rcall	.-202    	; 0x49e <_Z7zeitaush>
					
					break;
     568:	75 c0       	rjmp	.+234    	; 0x654 <_Z3aushh+0x126>
					
				case 1:
					//Alles
					wtag(WochenTag);
     56a:	80 91 78 01 	lds	r24, 0x0178
     56e:	6e df       	rcall	.-292    	; 0x44c <_Z4wtagh>
					lcd_string(" ");
     570:	8f e9       	ldi	r24, 0x9F	; 159
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	78 de       	rcall	.-784    	; 0x266 <_Z10lcd_stringPKc>
					zeitaus(1);
     576:	81 e0       	ldi	r24, 0x01	; 1
     578:	92 df       	rcall	.-220    	; 0x49e <_Z7zeitaush>
					
					break;
     57a:	6c c0       	rjmp	.+216    	; 0x654 <_Z3aushh+0x126>
				case 2:
					//Nur Kalender
					wtag(WochenTag);
     57c:	80 91 78 01 	lds	r24, 0x0178
     580:	65 df       	rcall	.-310    	; 0x44c <_Z4wtagh>
					
					break;
     582:	68 c0       	rjmp	.+208    	; 0x654 <_Z3aushh+0x126>
				case 3:
					//Nur Zeit mit Sekunden mit WDAY
					wtag(WochenTag);
     584:	80 91 78 01 	lds	r24, 0x0178
     588:	61 df       	rcall	.-318    	; 0x44c <_Z4wtagh>
					zeitaus(1);
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	88 df       	rcall	.-240    	; 0x49e <_Z7zeitaush>
					
					break;
     58e:	62 c0       	rjmp	.+196    	; 0x654 <_Z3aushh+0x126>
					
				case 4:
					lcd_string("Guten Tag");
     590:	8f e7       	ldi	r24, 0x7F	; 127
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	68 de       	rcall	.-816    	; 0x266 <_Z10lcd_stringPKc>
					lcd_setcursor(0,2);
     596:	62 e0       	ldi	r22, 0x02	; 2
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	51 de       	rcall	.-862    	; 0x23e <_Z13lcd_setcursorhh>
					lcd_string("Wecker start");
     59c:	89 e8       	ldi	r24, 0x89	; 137
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	62 de       	rcall	.-828    	; 0x266 <_Z10lcd_stringPKc>
					
					break;
     5a2:	58 c0       	rjmp	.+176    	; 0x654 <_Z3aushh+0x126>
				
				case 5:
					//Wecker Werktags
					lcd_string("Weckzeit: ");
     5a4:	86 e9       	ldi	r24, 0x96	; 150
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	5e de       	rcall	.-836    	; 0x266 <_Z10lcd_stringPKc>
					itoa(WStunden[0],Buffer,10);
     5aa:	4a e0       	ldi	r20, 0x0A	; 10
     5ac:	50 e0       	ldi	r21, 0x00	; 0
     5ae:	69 e5       	ldi	r22, 0x59	; 89
     5b0:	71 e0       	ldi	r23, 0x01	; 1
     5b2:	80 91 76 01 	lds	r24, 0x0176
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	76 d7       	rcall	.+3820   	; 0x14a6 <itoa>
					lcd_string(Buffer);
     5ba:	89 e5       	ldi	r24, 0x59	; 89
     5bc:	91 e0       	ldi	r25, 0x01	; 1
     5be:	53 de       	rcall	.-858    	; 0x266 <_Z10lcd_stringPKc>
					lcd_string(":");
     5c0:	88 ec       	ldi	r24, 0xC8	; 200
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	50 de       	rcall	.-864    	; 0x266 <_Z10lcd_stringPKc>
					itoa(WMinuten[0],Buffer,10);
     5c6:	4a e0       	ldi	r20, 0x0A	; 10
     5c8:	50 e0       	ldi	r21, 0x00	; 0
     5ca:	69 e5       	ldi	r22, 0x59	; 89
     5cc:	71 e0       	ldi	r23, 0x01	; 1
     5ce:	80 91 74 01 	lds	r24, 0x0174
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	68 d7       	rcall	.+3792   	; 0x14a6 <itoa>
					lcd_string(Buffer);
     5d6:	89 e5       	ldi	r24, 0x59	; 89
     5d8:	91 e0       	ldi	r25, 0x01	; 1
     5da:	45 de       	rcall	.-886    	; 0x266 <_Z10lcd_stringPKc>
					
					break;
     5dc:	3b c0       	rjmp	.+118    	; 0x654 <_Z3aushh+0x126>
					
				case 6:
					//Zeit ohne Sekunden mit WDAY
					wtag(WochenTag);
     5de:	80 91 78 01 	lds	r24, 0x0178
     5e2:	34 df       	rcall	.-408    	; 0x44c <_Z4wtagh>
					zeitaus(0);
     5e4:	80 e0       	ldi	r24, 0x00	; 0
     5e6:	5b df       	rcall	.-330    	; 0x49e <_Z7zeitaush>
					
					break;
     5e8:	35 c0       	rjmp	.+106    	; 0x654 <_Z3aushh+0x126>
					
				case 7:
					//Wecker Wochenends
					lcd_string("Weckzeit: ");
     5ea:	86 e9       	ldi	r24, 0x96	; 150
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	3b de       	rcall	.-906    	; 0x266 <_Z10lcd_stringPKc>
					itoa(WStunden[1],Buffer,10);
     5f0:	4a e0       	ldi	r20, 0x0A	; 10
     5f2:	50 e0       	ldi	r21, 0x00	; 0
     5f4:	69 e5       	ldi	r22, 0x59	; 89
     5f6:	71 e0       	ldi	r23, 0x01	; 1
     5f8:	80 91 77 01 	lds	r24, 0x0177
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	53 d7       	rcall	.+3750   	; 0x14a6 <itoa>
					lcd_string(Buffer);
     600:	89 e5       	ldi	r24, 0x59	; 89
     602:	91 e0       	ldi	r25, 0x01	; 1
     604:	30 de       	rcall	.-928    	; 0x266 <_Z10lcd_stringPKc>
					lcd_string(":");
     606:	88 ec       	ldi	r24, 0xC8	; 200
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	2d de       	rcall	.-934    	; 0x266 <_Z10lcd_stringPKc>
					itoa(WMinuten[1],Buffer,10);
     60c:	4a e0       	ldi	r20, 0x0A	; 10
     60e:	50 e0       	ldi	r21, 0x00	; 0
     610:	69 e5       	ldi	r22, 0x59	; 89
     612:	71 e0       	ldi	r23, 0x01	; 1
     614:	80 91 75 01 	lds	r24, 0x0175
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	45 d7       	rcall	.+3722   	; 0x14a6 <itoa>
					lcd_string(Buffer);
     61c:	89 e5       	ldi	r24, 0x59	; 89
     61e:	91 e0       	ldi	r25, 0x01	; 1
     620:	22 de       	rcall	.-956    	; 0x266 <_Z10lcd_stringPKc>
					
					break;
     622:	18 c0       	rjmp	.+48     	; 0x654 <_Z3aushh+0x126>
			}
			break;
			
		case 2:
			lcd_setcursor(0,2);
     624:	62 e0       	ldi	r22, 0x02	; 2
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	0a de       	rcall	.-1004   	; 0x23e <_Z13lcd_setcursorhh>
				switch (pos)
     62a:	c1 30       	cpi	r28, 0x01	; 1
     62c:	99 f4       	brne	.+38     	; 0x654 <_Z3aushh+0x126>
					
						break;
						
					case 1:
						//Temperatur
						dtostrf(tempera,2,2,Buffer);
     62e:	60 91 6e 01 	lds	r22, 0x016E
     632:	70 91 6f 01 	lds	r23, 0x016F
     636:	80 91 70 01 	lds	r24, 0x0170
     63a:	90 91 71 01 	lds	r25, 0x0171
     63e:	09 e5       	ldi	r16, 0x59	; 89
     640:	11 e0       	ldi	r17, 0x01	; 1
     642:	22 e0       	ldi	r18, 0x02	; 2
     644:	42 e0       	ldi	r20, 0x02	; 2
     646:	0f d7       	rcall	.+3614   	; 0x1466 <dtostrf>
						lcd_string(Buffer);
     648:	c8 01       	movw	r24, r16
     64a:	0d de       	rcall	.-998    	; 0x266 <_Z10lcd_stringPKc>
						lcd_data(0b11011111); //°
     64c:	8f ed       	ldi	r24, 0xDF	; 223
     64e:	9d dd       	rcall	.-1222   	; 0x18a <_Z8lcd_datah>
						lcd_data(0b01000011); //C
     650:	83 e4       	ldi	r24, 0x43	; 67
     652:	9b dd       	rcall	.-1226   	; 0x18a <_Z8lcd_datah>
						
						break;
				}
			break;
	}
}
     654:	cf 91       	pop	r28
     656:	1f 91       	pop	r17
     658:	0f 91       	pop	r16
     65a:	08 95       	ret

0000065c <_Z8erhoehenPhhhPKc>:
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
     660:	e9 01       	movw	r28, r18

#endif /* DEFINITIONEN_H_ */

inline uint8_t debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( !(*port & (1 << pin)) )
     662:	82 99       	sbic	0x10, 2	; 16
     664:	25 c0       	rjmp	.+74     	; 0x6b0 <_Z8erhoehenPhhhPKc+0x54>
     666:	ef ef       	ldi	r30, 0xFF	; 255
     668:	f3 eb       	ldi	r31, 0xB3	; 179
     66a:	31 97       	sbiw	r30, 0x01	; 1
     66c:	f1 f7       	brne	.-4      	; 0x66a <_Z8erhoehenPhhhPKc+0xe>
     66e:	00 c0       	rjmp	.+0      	; 0x670 <_Z8erhoehenPhhhPKc+0x14>
     670:	00 00       	nop
     672:	ef ef       	ldi	r30, 0xFF	; 255
     674:	f3 e2       	ldi	r31, 0x23	; 35
     676:	31 97       	sbiw	r30, 0x01	; 1
     678:	f1 f7       	brne	.-4      	; 0x676 <_Z8erhoehenPhhhPKc+0x1a>
     67a:	00 c0       	rjmp	.+0      	; 0x67c <_Z8erhoehenPhhhPKc+0x20>
     67c:	00 00       	nop
	if(debounce(&PIND,2))
     67e:	82 99       	sbic	0x10, 2	; 16
     680:	17 c0       	rjmp	.+46     	; 0x6b0 <_Z8erhoehenPhhhPKc+0x54>
	{
		*var +=1 ;
     682:	fc 01       	movw	r30, r24
     684:	20 81       	ld	r18, Z
     686:	2f 5f       	subi	r18, 0xFF	; 255
		if(*var>=obergrenze){
     688:	26 17       	cp	r18, r22
     68a:	10 f4       	brcc	.+4      	; 0x690 <_Z8erhoehenPhhhPKc+0x34>
//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
	if(debounce(&PIND,2))
	{
		*var +=1 ;
     68c:	20 83       	st	Z, r18
     68e:	02 c0       	rjmp	.+4      	; 0x694 <_Z8erhoehenPhhhPKc+0x38>
		if(*var>=obergrenze){
			*var=0;
     690:	fc 01       	movw	r30, r24
     692:	10 82       	st	Z, r1
		}
		aus(1,pos);
     694:	64 2f       	mov	r22, r20
     696:	81 e0       	ldi	r24, 0x01	; 1
     698:	4a df       	rcall	.-364    	; 0x52e <_Z3aushh>
		aus(2,0);
     69a:	60 e0       	ldi	r22, 0x00	; 0
     69c:	82 e0       	ldi	r24, 0x02	; 2
     69e:	47 df       	rcall	.-370    	; 0x52e <_Z3aushh>
		while( *data != '\0' )
     6a0:	88 81       	ld	r24, Y
     6a2:	88 23       	and	r24, r24
     6a4:	29 f0       	breq	.+10     	; 0x6b0 <_Z8erhoehenPhhhPKc+0x54>
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     6a6:	21 96       	adiw	r28, 0x01	; 1
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
		lcd_data( *data++ );
     6a8:	70 dd       	rcall	.-1312   	; 0x18a <_Z8lcd_datah>
		if(*var>=obergrenze){
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
     6aa:	89 91       	ld	r24, Y+
     6ac:	81 11       	cpse	r24, r1
     6ae:	fc cf       	rjmp	.-8      	; 0x6a8 <_Z8erhoehenPhhhPKc+0x4c>
		lcd_data( *data++ );
		
	}
}
     6b0:	df 91       	pop	r29
     6b2:	cf 91       	pop	r28
     6b4:	08 95       	ret

000006b6 <_Z5einsth>:


//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
     6b6:	1f 93       	push	r17
     6b8:	cf 93       	push	r28
     6ba:	df 93       	push	r29
	uint8_t temp=0;
	//abfrage wass eingestellt werden soll
	switch (posit)
     6bc:	82 30       	cpi	r24, 0x02	; 2
     6be:	09 f4       	brne	.+2      	; 0x6c2 <_Z5einsth+0xc>
     6c0:	b7 c0       	rjmp	.+366    	; 0x830 <_Z5einsth+0x17a>
     6c2:	30 f4       	brcc	.+12     	; 0x6d0 <_Z5einsth+0x1a>
     6c4:	88 23       	and	r24, r24
     6c6:	69 f0       	breq	.+26     	; 0x6e2 <_Z5einsth+0x2c>
     6c8:	81 30       	cpi	r24, 0x01	; 1
     6ca:	09 f0       	breq	.+2      	; 0x6ce <_Z5einsth+0x18>
     6cc:	f3 c1       	rjmp	.+998    	; 0xab4 <_Z5einsth+0x3fe>
     6ce:	65 c0       	rjmp	.+202    	; 0x79a <_Z5einsth+0xe4>
     6d0:	84 30       	cpi	r24, 0x04	; 4
     6d2:	09 f4       	brne	.+2      	; 0x6d6 <_Z5einsth+0x20>
     6d4:	4b c1       	rjmp	.+662    	; 0x96c <_Z5einsth+0x2b6>
     6d6:	08 f4       	brcc	.+2      	; 0x6da <_Z5einsth+0x24>
     6d8:	fa c0       	rjmp	.+500    	; 0x8ce <_Z5einsth+0x218>
     6da:	85 30       	cpi	r24, 0x05	; 5
     6dc:	09 f0       	breq	.+2      	; 0x6e0 <_Z5einsth+0x2a>
     6de:	ea c1       	rjmp	.+980    	; 0xab4 <_Z5einsth+0x3fe>
     6e0:	97 c1       	rjmp	.+814    	; 0xa10 <_Z5einsth+0x35a>
	{
	case 0:
		//Einstellen Zeit
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,6);
     6e2:	66 e0       	ldi	r22, 0x06	; 6
     6e4:	81 e0       	ldi	r24, 0x01	; 1
     6e6:	23 df       	rcall	.-442    	; 0x52e <_Z3aushh>
		aus(2,0);
     6e8:	60 e0       	ldi	r22, 0x00	; 0
     6ea:	82 e0       	ldi	r24, 0x02	; 2
     6ec:	20 df       	rcall	.-448    	; 0x52e <_Z3aushh>
		lcd_string(NAME(Stunden));
     6ee:	81 ea       	ldi	r24, 0xA1	; 161
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	b9 dd       	rcall	.-1166   	; 0x266 <_Z10lcd_stringPKc>

//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
	uint8_t temp=0;
     6f4:	c0 e0       	ldi	r28, 0x00	; 0
     6f6:	83 99       	sbic	0x10, 3	; 16
     6f8:	28 c0       	rjmp	.+80     	; 0x74a <_Z5einsth+0x94>
     6fa:	8f ef       	ldi	r24, 0xFF	; 255
     6fc:	93 eb       	ldi	r25, 0xB3	; 179
     6fe:	01 97       	sbiw	r24, 0x01	; 1
     700:	f1 f7       	brne	.-4      	; 0x6fe <_Z5einsth+0x48>
     702:	00 c0       	rjmp	.+0      	; 0x704 <_Z5einsth+0x4e>
     704:	00 00       	nop
     706:	8f ef       	ldi	r24, 0xFF	; 255
     708:	93 e2       	ldi	r25, 0x23	; 35
     70a:	01 97       	sbiw	r24, 0x01	; 1
     70c:	f1 f7       	brne	.-4      	; 0x70a <_Z5einsth+0x54>
     70e:	00 c0       	rjmp	.+0      	; 0x710 <_Z5einsth+0x5a>
     710:	00 00       	nop
		aus(1,6);
		aus(2,0);
		lcd_string(NAME(Stunden));
		while(temp<3)
		{
			if(debounce(&PIND,3))
     712:	83 99       	sbic	0x10, 3	; 16
     714:	1a c0       	rjmp	.+52     	; 0x74a <_Z5einsth+0x94>
			{
				temp++;
     716:	cf 5f       	subi	r28, 0xFF	; 255
				lcd_clear();
     718:	54 dd       	rcall	.-1368   	; 0x1c2 <_Z9lcd_clearv>
				aus(1,6);
     71a:	66 e0       	ldi	r22, 0x06	; 6
     71c:	81 e0       	ldi	r24, 0x01	; 1
     71e:	07 df       	rcall	.-498    	; 0x52e <_Z3aushh>
				aus(2,0);
     720:	60 e0       	ldi	r22, 0x00	; 0
     722:	82 e0       	ldi	r24, 0x02	; 2
     724:	04 df       	rcall	.-504    	; 0x52e <_Z3aushh>
				switch (temp)
     726:	c1 30       	cpi	r28, 0x01	; 1
     728:	41 f0       	breq	.+16     	; 0x73a <_Z5einsth+0x84>
     72a:	18 f0       	brcs	.+6      	; 0x732 <_Z5einsth+0x7c>
     72c:	c2 30       	cpi	r28, 0x02	; 2
     72e:	69 f4       	brne	.+26     	; 0x74a <_Z5einsth+0x94>
     730:	08 c0       	rjmp	.+16     	; 0x742 <_Z5einsth+0x8c>
				{
					case 0:
						lcd_string(NAME(Stunden));
     732:	81 ea       	ldi	r24, 0xA1	; 161
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	97 dd       	rcall	.-1234   	; 0x266 <_Z10lcd_stringPKc>
     738:	0e c0       	rjmp	.+28     	; 0x756 <_Z5einsth+0xa0>
						break;
					case 1:
						lcd_string(NAME(Minuten));
     73a:	89 ea       	ldi	r24, 0xA9	; 169
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	93 dd       	rcall	.-1242   	; 0x266 <_Z10lcd_stringPKc>
     740:	13 c0       	rjmp	.+38     	; 0x768 <_Z5einsth+0xb2>
						break;
					case 2:
						lcd_string(NAME(WochenTag));
     742:	81 eb       	ldi	r24, 0xB1	; 177
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	8f dd       	rcall	.-1250   	; 0x266 <_Z10lcd_stringPKc>
     748:	18 c0       	rjmp	.+48     	; 0x77a <_Z5einsth+0xc4>
				zeit();
				//ausgabe(0);
				//Es muss eine richtge Ausgabe speziell fuer dieses Einstellung geschrieben werden
				//besonders wichtig ist, dass die alte Ausgaba ersetzt werden muss
			}*/
			switch (temp)
     74a:	c1 30       	cpi	r28, 0x01	; 1
     74c:	69 f0       	breq	.+26     	; 0x768 <_Z5einsth+0xb2>
     74e:	18 f0       	brcs	.+6      	; 0x756 <_Z5einsth+0xa0>
     750:	c2 30       	cpi	r28, 0x02	; 2
     752:	e1 f4       	brne	.+56     	; 0x78c <_Z5einsth+0xd6>
     754:	12 c0       	rjmp	.+36     	; 0x77a <_Z5einsth+0xc4>
			{
			case 0:
				erhoehen(&Stunden,60,6,NAME(Stunden));
     756:	21 ea       	ldi	r18, 0xA1	; 161
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	46 e0       	ldi	r20, 0x06	; 6
     75c:	6c e3       	ldi	r22, 0x3C	; 60
     75e:	89 e7       	ldi	r24, 0x79	; 121
     760:	91 e0       	ldi	r25, 0x01	; 1
     762:	7c df       	rcall	.-264    	; 0x65c <_Z8erhoehenPhhhPKc>
				break;
     764:	c0 e0       	ldi	r28, 0x00	; 0
     766:	c7 cf       	rjmp	.-114    	; 0x6f6 <_Z5einsth+0x40>
			case 1:
				erhoehen(&Minuten,60,6,NAME(Minuten));
     768:	29 ea       	ldi	r18, 0xA9	; 169
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	46 e0       	ldi	r20, 0x06	; 6
     76e:	6c e3       	ldi	r22, 0x3C	; 60
     770:	8a e7       	ldi	r24, 0x7A	; 122
     772:	91 e0       	ldi	r25, 0x01	; 1
     774:	73 df       	rcall	.-282    	; 0x65c <_Z8erhoehenPhhhPKc>
				break;
     776:	c1 e0       	ldi	r28, 0x01	; 1
     778:	be cf       	rjmp	.-132    	; 0x6f6 <_Z5einsth+0x40>
			case 2:
				//nur jetzt WochenTag
				erhoehen(&WochenTag,7,6,NAME(WochenTag));
     77a:	21 eb       	ldi	r18, 0xB1	; 177
     77c:	30 e0       	ldi	r19, 0x00	; 0
     77e:	46 e0       	ldi	r20, 0x06	; 6
     780:	67 e0       	ldi	r22, 0x07	; 7
     782:	88 e7       	ldi	r24, 0x78	; 120
     784:	91 e0       	ldi	r25, 0x01	; 1
     786:	6a df       	rcall	.-300    	; 0x65c <_Z8erhoehenPhhhPKc>
				break;
     788:	c2 e0       	ldi	r28, 0x02	; 2
     78a:	b5 cf       	rjmp	.-150    	; 0x6f6 <_Z5einsth+0x40>
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,6);
		aus(2,0);
		lcd_string(NAME(Stunden));
		while(temp<3)
     78c:	c3 30       	cpi	r28, 0x03	; 3
     78e:	08 f4       	brcc	.+2      	; 0x792 <_Z5einsth+0xdc>
     790:	b2 cf       	rjmp	.-156    	; 0x6f6 <_Z5einsth+0x40>
				break;
			default:
				break;
			}
		}
		Sekunden=0;
     792:	10 92 7b 01 	sts	0x017B, r1
		return 0;
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	a0 c1       	rjmp	.+832    	; 0xada <_Z5einsth+0x424>
		break;
	case 1:
		//Einstellen der Lampenstärke
		//default=1
		temp = 0;
		lcd_clear();
     79a:	13 dd       	rcall	.-1498   	; 0x1c2 <_Z9lcd_clearv>
		lcd_home();
     79c:	49 dd       	rcall	.-1390   	; 0x230 <_Z8lcd_homev>
		lcd_string("Lampenstärke:");
     79e:	8b eb       	ldi	r24, 0xBB	; 187
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	61 dd       	rcall	.-1342   	; 0x266 <_Z10lcd_stringPKc>
		aus(2,0);
     7a4:	60 e0       	ldi	r22, 0x00	; 0
     7a6:	82 e0       	ldi	r24, 0x02	; 2
     7a8:	c2 de       	rcall	.-636    	; 0x52e <_Z3aushh>
		itoa(lampenstaerke,Buffer,10);
     7aa:	4a e0       	ldi	r20, 0x0A	; 10
     7ac:	50 e0       	ldi	r21, 0x00	; 0
     7ae:	69 e5       	ldi	r22, 0x59	; 89
     7b0:	71 e0       	ldi	r23, 0x01	; 1
     7b2:	80 91 61 00 	lds	r24, 0x0061
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	76 d6       	rcall	.+3308   	; 0x14a6 <itoa>
		lcd_string(Buffer);
     7ba:	89 e5       	ldi	r24, 0x59	; 89
     7bc:	91 e0       	ldi	r25, 0x01	; 1
     7be:	53 dd       	rcall	.-1370   	; 0x266 <_Z10lcd_stringPKc>
		if(Sekunden!=sektemp){
     7c0:	90 91 7b 01 	lds	r25, 0x017B
     7c4:	80 91 72 01 	lds	r24, 0x0172
     7c8:	98 13       	cpse	r25, r24
			zeit();
     7ca:	0e de       	rcall	.-996    	; 0x3e8 <_Z4zeitv>
     7cc:	82 99       	sbic	0x10, 2	; 16
     7ce:	74 c1       	rjmp	.+744    	; 0xab8 <_Z5einsth+0x402>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	93 eb       	ldi	r25, 0xB3	; 179
     7d4:	01 97       	sbiw	r24, 0x01	; 1
     7d6:	f1 f7       	brne	.-4      	; 0x7d4 <_Z5einsth+0x11e>
     7d8:	00 c0       	rjmp	.+0      	; 0x7da <_Z5einsth+0x124>
     7da:	00 00       	nop
     7dc:	8f ef       	ldi	r24, 0xFF	; 255
     7de:	93 e2       	ldi	r25, 0x23	; 35
     7e0:	01 97       	sbiw	r24, 0x01	; 1
     7e2:	f1 f7       	brne	.-4      	; 0x7e0 <_Z5einsth+0x12a>
     7e4:	00 c0       	rjmp	.+0      	; 0x7e6 <_Z5einsth+0x130>
     7e6:	00 00       	nop
		}
		if(debounce(&PIND,2))
     7e8:	82 99       	sbic	0x10, 2	; 16
     7ea:	68 c1       	rjmp	.+720    	; 0xabc <_Z5einsth+0x406>
		{
			lampenstaerke++;
     7ec:	80 91 61 00 	lds	r24, 0x0061
     7f0:	8f 5f       	subi	r24, 0xFF	; 255
     7f2:	80 93 61 00 	sts	0x0061, r24
			lcd_clear();
     7f6:	e5 dc       	rcall	.-1590   	; 0x1c2 <_Z9lcd_clearv>
			lcd_home();
     7f8:	1b dd       	rcall	.-1482   	; 0x230 <_Z8lcd_homev>
			lcd_string("Lampenstärke:");
     7fa:	8b eb       	ldi	r24, 0xBB	; 187
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	33 dd       	rcall	.-1434   	; 0x266 <_Z10lcd_stringPKc>
			aus(2,0);
     800:	60 e0       	ldi	r22, 0x00	; 0
     802:	82 e0       	ldi	r24, 0x02	; 2
     804:	94 de       	rcall	.-728    	; 0x52e <_Z3aushh>
			itoa(lampenstaerke,Buffer,10);
     806:	4a e0       	ldi	r20, 0x0A	; 10
     808:	50 e0       	ldi	r21, 0x00	; 0
     80a:	69 e5       	ldi	r22, 0x59	; 89
     80c:	71 e0       	ldi	r23, 0x01	; 1
     80e:	80 91 61 00 	lds	r24, 0x0061
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	48 d6       	rcall	.+3216   	; 0x14a6 <itoa>
			lcd_string(Buffer);
     816:	89 e5       	ldi	r24, 0x59	; 89
     818:	91 e0       	ldi	r25, 0x01	; 1
     81a:	25 dd       	rcall	.-1462   	; 0x266 <_Z10lcd_stringPKc>
			
			if (lampenstaerke>=3)
     81c:	80 91 61 00 	lds	r24, 0x0061
     820:	83 30       	cpi	r24, 0x03	; 3
     822:	08 f4       	brcc	.+2      	; 0x826 <_Z5einsth+0x170>
     824:	4d c1       	rjmp	.+666    	; 0xac0 <_Z5einsth+0x40a>
			{
				lampenstaerke=1;
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	80 93 61 00 	sts	0x0061, r24
			}
			
		}
		return 0;
     82c:	80 e0       	ldi	r24, 0x00	; 0
     82e:	55 c1       	rjmp	.+682    	; 0xada <_Z5einsth+0x424>
		break;
	case 2:
		//Einstellen Sekundenoffset
		//default =0
		lcd_clear();
     830:	c8 dc       	rcall	.-1648   	; 0x1c2 <_Z9lcd_clearv>
		lcd_home();
     832:	fe dc       	rcall	.-1540   	; 0x230 <_Z8lcd_homev>
		lcd_string("Sekundenoffset:");
     834:	8a ec       	ldi	r24, 0xCA	; 202
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	16 dd       	rcall	.-1492   	; 0x266 <_Z10lcd_stringPKc>
		aus(2,0);
     83a:	60 e0       	ldi	r22, 0x00	; 0
     83c:	82 e0       	ldi	r24, 0x02	; 2
     83e:	77 de       	rcall	.-786    	; 0x52e <_Z3aushh>
		itoa(sekoffset,Buffer,10);
     840:	80 91 6d 01 	lds	r24, 0x016D
     844:	4a e0       	ldi	r20, 0x0A	; 10
     846:	50 e0       	ldi	r21, 0x00	; 0
     848:	69 e5       	ldi	r22, 0x59	; 89
     84a:	71 e0       	ldi	r23, 0x01	; 1
     84c:	99 27       	eor	r25, r25
     84e:	87 fd       	sbrc	r24, 7
     850:	90 95       	com	r25
     852:	29 d6       	rcall	.+3154   	; 0x14a6 <itoa>
		lcd_string(Buffer);
     854:	89 e5       	ldi	r24, 0x59	; 89
     856:	91 e0       	ldi	r25, 0x01	; 1
     858:	06 dd       	rcall	.-1524   	; 0x266 <_Z10lcd_stringPKc>
		if(Sekunden!=sektemp){
     85a:	90 91 7b 01 	lds	r25, 0x017B
     85e:	80 91 72 01 	lds	r24, 0x0172
     862:	98 13       	cpse	r25, r24
			zeit();
     864:	c1 dd       	rcall	.-1150   	; 0x3e8 <_Z4zeitv>
     866:	82 99       	sbic	0x10, 2	; 16
     868:	2d c1       	rjmp	.+602    	; 0xac4 <_Z5einsth+0x40e>
     86a:	8f ef       	ldi	r24, 0xFF	; 255
     86c:	93 eb       	ldi	r25, 0xB3	; 179
     86e:	01 97       	sbiw	r24, 0x01	; 1
     870:	f1 f7       	brne	.-4      	; 0x86e <_Z5einsth+0x1b8>
     872:	00 c0       	rjmp	.+0      	; 0x874 <_Z5einsth+0x1be>
     874:	00 00       	nop
     876:	8f ef       	ldi	r24, 0xFF	; 255
     878:	93 e2       	ldi	r25, 0x23	; 35
     87a:	01 97       	sbiw	r24, 0x01	; 1
     87c:	f1 f7       	brne	.-4      	; 0x87a <_Z5einsth+0x1c4>
     87e:	00 c0       	rjmp	.+0      	; 0x880 <_Z5einsth+0x1ca>
     880:	00 00       	nop
		}
		if(debounce(&PIND,2))
     882:	82 99       	sbic	0x10, 2	; 16
     884:	21 c1       	rjmp	.+578    	; 0xac8 <_Z5einsth+0x412>
		{
			sekoffset++;
     886:	80 91 6d 01 	lds	r24, 0x016D
     88a:	8f 5f       	subi	r24, 0xFF	; 255
     88c:	80 93 6d 01 	sts	0x016D, r24
			lcd_clear();
     890:	98 dc       	rcall	.-1744   	; 0x1c2 <_Z9lcd_clearv>
			lcd_home();
     892:	ce dc       	rcall	.-1636   	; 0x230 <_Z8lcd_homev>
			lcd_string("Sekundenoffset:");
     894:	8a ec       	ldi	r24, 0xCA	; 202
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	e6 dc       	rcall	.-1588   	; 0x266 <_Z10lcd_stringPKc>
			aus(2,0);
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	82 e0       	ldi	r24, 0x02	; 2
     89e:	47 de       	rcall	.-882    	; 0x52e <_Z3aushh>
			itoa(sekoffset,Buffer,10);
     8a0:	80 91 6d 01 	lds	r24, 0x016D
     8a4:	4a e0       	ldi	r20, 0x0A	; 10
     8a6:	50 e0       	ldi	r21, 0x00	; 0
     8a8:	69 e5       	ldi	r22, 0x59	; 89
     8aa:	71 e0       	ldi	r23, 0x01	; 1
     8ac:	99 27       	eor	r25, r25
     8ae:	87 fd       	sbrc	r24, 7
     8b0:	90 95       	com	r25
     8b2:	f9 d5       	rcall	.+3058   	; 0x14a6 <itoa>
			lcd_string(Buffer);
     8b4:	89 e5       	ldi	r24, 0x59	; 89
     8b6:	91 e0       	ldi	r25, 0x01	; 1
     8b8:	d6 dc       	rcall	.-1620   	; 0x266 <_Z10lcd_stringPKc>
			
			if (sekoffset>=5)
     8ba:	80 91 6d 01 	lds	r24, 0x016D
     8be:	85 30       	cpi	r24, 0x05	; 5
     8c0:	0c f4       	brge	.+2      	; 0x8c4 <_Z5einsth+0x20e>
     8c2:	04 c1       	rjmp	.+520    	; 0xacc <_Z5einsth+0x416>
			{
				sekoffset=-5;
     8c4:	8b ef       	ldi	r24, 0xFB	; 251
     8c6:	80 93 6d 01 	sts	0x016D, r24
			}
				
		}
		
		return 0;
     8ca:	80 e0       	ldi	r24, 0x00	; 0
     8cc:	06 c1       	rjmp	.+524    	; 0xada <_Z5einsth+0x424>
		break;
	case 3:
		//Einstellen Temperaturoffset
		//default = 0;
		lcd_clear();
     8ce:	79 dc       	rcall	.-1806   	; 0x1c2 <_Z9lcd_clearv>
		lcd_home();
     8d0:	af dc       	rcall	.-1698   	; 0x230 <_Z8lcd_homev>
		lcd_string("Temperaturoffset:");
     8d2:	8a ed       	ldi	r24, 0xDA	; 218
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	c7 dc       	rcall	.-1650   	; 0x266 <_Z10lcd_stringPKc>
		aus(2,0);
     8d8:	60 e0       	ldi	r22, 0x00	; 0
     8da:	82 e0       	ldi	r24, 0x02	; 2
     8dc:	28 de       	rcall	.-944    	; 0x52e <_Z3aushh>
		itoa(tempoffset,Buffer,10);
     8de:	80 91 62 00 	lds	r24, 0x0062
     8e2:	4a e0       	ldi	r20, 0x0A	; 10
     8e4:	50 e0       	ldi	r21, 0x00	; 0
     8e6:	69 e5       	ldi	r22, 0x59	; 89
     8e8:	71 e0       	ldi	r23, 0x01	; 1
     8ea:	99 27       	eor	r25, r25
     8ec:	87 fd       	sbrc	r24, 7
     8ee:	90 95       	com	r25
     8f0:	da d5       	rcall	.+2996   	; 0x14a6 <itoa>
		lcd_string(Buffer);
     8f2:	89 e5       	ldi	r24, 0x59	; 89
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	b7 dc       	rcall	.-1682   	; 0x266 <_Z10lcd_stringPKc>
		
		if(Sekunden!=sektemp){
     8f8:	90 91 7b 01 	lds	r25, 0x017B
     8fc:	80 91 72 01 	lds	r24, 0x0172
     900:	98 13       	cpse	r25, r24
			zeit();
     902:	72 dd       	rcall	.-1308   	; 0x3e8 <_Z4zeitv>
     904:	82 99       	sbic	0x10, 2	; 16
     906:	e4 c0       	rjmp	.+456    	; 0xad0 <_Z5einsth+0x41a>
     908:	8f ef       	ldi	r24, 0xFF	; 255
     90a:	93 eb       	ldi	r25, 0xB3	; 179
     90c:	01 97       	sbiw	r24, 0x01	; 1
     90e:	f1 f7       	brne	.-4      	; 0x90c <_Z5einsth+0x256>
     910:	00 c0       	rjmp	.+0      	; 0x912 <_Z5einsth+0x25c>
     912:	00 00       	nop
     914:	8f ef       	ldi	r24, 0xFF	; 255
     916:	93 e2       	ldi	r25, 0x23	; 35
     918:	01 97       	sbiw	r24, 0x01	; 1
     91a:	f1 f7       	brne	.-4      	; 0x918 <_Z5einsth+0x262>
     91c:	00 c0       	rjmp	.+0      	; 0x91e <_Z5einsth+0x268>
     91e:	00 00       	nop
		}
		if(debounce(&PIND,2))
     920:	82 99       	sbic	0x10, 2	; 16
     922:	d8 c0       	rjmp	.+432    	; 0xad4 <_Z5einsth+0x41e>
		{
			tempoffset++;
     924:	80 91 62 00 	lds	r24, 0x0062
     928:	8f 5f       	subi	r24, 0xFF	; 255
     92a:	80 93 62 00 	sts	0x0062, r24
			lcd_clear();
     92e:	49 dc       	rcall	.-1902   	; 0x1c2 <_Z9lcd_clearv>
			lcd_home();
     930:	7f dc       	rcall	.-1794   	; 0x230 <_Z8lcd_homev>
			lcd_string("Temperaturoffset:");
     932:	8a ed       	ldi	r24, 0xDA	; 218
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	97 dc       	rcall	.-1746   	; 0x266 <_Z10lcd_stringPKc>
			aus(2,0);
     938:	60 e0       	ldi	r22, 0x00	; 0
     93a:	82 e0       	ldi	r24, 0x02	; 2
     93c:	f8 dd       	rcall	.-1040   	; 0x52e <_Z3aushh>
			itoa(tempoffset,Buffer,10);
     93e:	80 91 62 00 	lds	r24, 0x0062
     942:	4a e0       	ldi	r20, 0x0A	; 10
     944:	50 e0       	ldi	r21, 0x00	; 0
     946:	69 e5       	ldi	r22, 0x59	; 89
     948:	71 e0       	ldi	r23, 0x01	; 1
     94a:	99 27       	eor	r25, r25
     94c:	87 fd       	sbrc	r24, 7
     94e:	90 95       	com	r25
     950:	aa d5       	rcall	.+2900   	; 0x14a6 <itoa>
			lcd_string(Buffer);
     952:	89 e5       	ldi	r24, 0x59	; 89
     954:	91 e0       	ldi	r25, 0x01	; 1
     956:	87 dc       	rcall	.-1778   	; 0x266 <_Z10lcd_stringPKc>
			
			if (tempoffset>=10)
     958:	80 91 62 00 	lds	r24, 0x0062
     95c:	8a 30       	cpi	r24, 0x0A	; 10
     95e:	0c f4       	brge	.+2      	; 0x962 <_Z5einsth+0x2ac>
     960:	bb c0       	rjmp	.+374    	; 0xad8 <_Z5einsth+0x422>
			{
				tempoffset=-10;
     962:	86 ef       	ldi	r24, 0xF6	; 246
     964:	80 93 62 00 	sts	0x0062, r24
			}
			
		}
		
		return 0;
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	b7 c0       	rjmp	.+366    	; 0xada <_Z5einsth+0x424>
		break;
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
     96c:	65 e0       	ldi	r22, 0x05	; 5
     96e:	81 e0       	ldi	r24, 0x01	; 1
     970:	de dd       	rcall	.-1092   	; 0x52e <_Z3aushh>
		aus(2,0);
     972:	60 e0       	ldi	r22, 0x00	; 0
     974:	82 e0       	ldi	r24, 0x02	; 2
     976:	db dd       	rcall	.-1098   	; 0x52e <_Z3aushh>
		lcd_string(NAME(WStunden[0]));
     978:	8c ee       	ldi	r24, 0xEC	; 236
     97a:	90 e0       	ldi	r25, 0x00	; 0
     97c:	74 dc       	rcall	.-1816   	; 0x266 <_Z10lcd_stringPKc>
		}
		
		return 0;
		break;
	case 4: //Wecker einstellen
		temp = 0;
     97e:	c0 e0       	ldi	r28, 0x00	; 0
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
					break;
				case 1:
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
					break;
     980:	11 e0       	ldi	r17, 0x01	; 1
			}
			switch (temp)
			{
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
					break;
     982:	d0 e0       	ldi	r29, 0x00	; 0
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[0]));
		while (temp<2)
		{
			if (Sekunden!=sektemp)
     984:	20 91 7b 01 	lds	r18, 0x017B
     988:	90 91 72 01 	lds	r25, 0x0172
     98c:	29 13       	cpse	r18, r25
			{
				zeit();
     98e:	2c dd       	rcall	.-1448   	; 0x3e8 <_Z4zeitv>
     990:	83 99       	sbic	0x10, 3	; 16
     992:	22 c0       	rjmp	.+68     	; 0x9d8 <_Z5einsth+0x322>
     994:	8f ef       	ldi	r24, 0xFF	; 255
     996:	93 eb       	ldi	r25, 0xB3	; 179
     998:	01 97       	sbiw	r24, 0x01	; 1
     99a:	f1 f7       	brne	.-4      	; 0x998 <_Z5einsth+0x2e2>
     99c:	00 c0       	rjmp	.+0      	; 0x99e <_Z5einsth+0x2e8>
     99e:	00 00       	nop
     9a0:	8f ef       	ldi	r24, 0xFF	; 255
     9a2:	93 e2       	ldi	r25, 0x23	; 35
     9a4:	01 97       	sbiw	r24, 0x01	; 1
     9a6:	f1 f7       	brne	.-4      	; 0x9a4 <_Z5einsth+0x2ee>
     9a8:	00 c0       	rjmp	.+0      	; 0x9aa <_Z5einsth+0x2f4>
     9aa:	00 00       	nop
			}
			if(debounce(&PIND,3))
     9ac:	83 99       	sbic	0x10, 3	; 16
     9ae:	14 c0       	rjmp	.+40     	; 0x9d8 <_Z5einsth+0x322>
			{
				temp++;
     9b0:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,5);
     9b2:	65 e0       	ldi	r22, 0x05	; 5
     9b4:	81 2f       	mov	r24, r17
     9b6:	bb dd       	rcall	.-1162   	; 0x52e <_Z3aushh>
				aus(2,0);
     9b8:	6d 2f       	mov	r22, r29
     9ba:	82 e0       	ldi	r24, 0x02	; 2
     9bc:	b8 dd       	rcall	.-1168   	; 0x52e <_Z3aushh>
				switch (temp)
     9be:	cc 23       	and	r28, r28
     9c0:	19 f0       	breq	.+6      	; 0x9c8 <_Z5einsth+0x312>
     9c2:	c1 30       	cpi	r28, 0x01	; 1
     9c4:	49 f4       	brne	.+18     	; 0x9d8 <_Z5einsth+0x322>
     9c6:	04 c0       	rjmp	.+8      	; 0x9d0 <_Z5einsth+0x31a>
				{
					case 0:
						lcd_string(NAME(WStunden[0]));
     9c8:	8c ee       	ldi	r24, 0xEC	; 236
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	4c dc       	rcall	.-1896   	; 0x266 <_Z10lcd_stringPKc>
     9ce:	09 c0       	rjmp	.+18     	; 0x9e2 <_Z5einsth+0x32c>
						break;
					case 1:
						lcd_string(NAME(WMinuten[0]));
     9d0:	88 ef       	ldi	r24, 0xF8	; 248
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	48 dc       	rcall	.-1904   	; 0x266 <_Z10lcd_stringPKc>
     9d6:	0e c0       	rjmp	.+28     	; 0x9f4 <_Z5einsth+0x33e>
						break;
					default:
						break;
				}
			}
			switch (temp)
     9d8:	cc 23       	and	r28, r28
     9da:	19 f0       	breq	.+6      	; 0x9e2 <_Z5einsth+0x32c>
     9dc:	c1 30       	cpi	r28, 0x01	; 1
     9de:	99 f4       	brne	.+38     	; 0xa06 <_Z5einsth+0x350>
     9e0:	09 c0       	rjmp	.+18     	; 0x9f4 <_Z5einsth+0x33e>
			{
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
     9e2:	2c ee       	ldi	r18, 0xEC	; 236
     9e4:	30 e0       	ldi	r19, 0x00	; 0
     9e6:	45 e0       	ldi	r20, 0x05	; 5
     9e8:	68 e1       	ldi	r22, 0x18	; 24
     9ea:	86 e7       	ldi	r24, 0x76	; 118
     9ec:	91 e0       	ldi	r25, 0x01	; 1
     9ee:	36 de       	rcall	.-916    	; 0x65c <_Z8erhoehenPhhhPKc>
					break;
     9f0:	cd 2f       	mov	r28, r29
     9f2:	c8 cf       	rjmp	.-112    	; 0x984 <_Z5einsth+0x2ce>
				case 1:
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
     9f4:	28 ef       	ldi	r18, 0xF8	; 248
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	45 e0       	ldi	r20, 0x05	; 5
     9fa:	6c e3       	ldi	r22, 0x3C	; 60
     9fc:	84 e7       	ldi	r24, 0x74	; 116
     9fe:	91 e0       	ldi	r25, 0x01	; 1
     a00:	2d de       	rcall	.-934    	; 0x65c <_Z8erhoehenPhhhPKc>
					break;
     a02:	c1 2f       	mov	r28, r17
     a04:	bf cf       	rjmp	.-130    	; 0x984 <_Z5einsth+0x2ce>
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[0]));
		while (temp<2)
     a06:	c2 30       	cpi	r28, 0x02	; 2
     a08:	08 f4       	brcc	.+2      	; 0xa0c <_Z5einsth+0x356>
     a0a:	bc cf       	rjmp	.-136    	; 0x984 <_Z5einsth+0x2ce>
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
					break;
			}
			
		}
		return 0;
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	65 c0       	rjmp	.+202    	; 0xada <_Z5einsth+0x424>
		break;

	case 5:
		temp = 0;
		aus(1,7);
     a10:	67 e0       	ldi	r22, 0x07	; 7
     a12:	81 e0       	ldi	r24, 0x01	; 1
     a14:	8c dd       	rcall	.-1256   	; 0x52e <_Z3aushh>
		aus(2,0);
     a16:	60 e0       	ldi	r22, 0x00	; 0
     a18:	82 e0       	ldi	r24, 0x02	; 2
     a1a:	89 dd       	rcall	.-1262   	; 0x52e <_Z3aushh>
		lcd_string(NAME(WStunden[1]));
     a1c:	84 e0       	ldi	r24, 0x04	; 4
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	22 dc       	rcall	.-1980   	; 0x266 <_Z10lcd_stringPKc>
		}
		return 0;
		break;

	case 5:
		temp = 0;
     a22:	c0 e0       	ldi	r28, 0x00	; 0
				case 0:
				erhoehen(&WStunden[1],24,7,NAME(WStunden[1]));
				break;
				case 1:
				erhoehen(&WMinuten[1],60,7,NAME(WMinuten[1]));
				break;
     a24:	11 e0       	ldi	r17, 0x01	; 1
			}
			switch (temp)
			{
				case 0:
				erhoehen(&WStunden[1],24,7,NAME(WStunden[1]));
				break;
     a26:	d0 e0       	ldi	r29, 0x00	; 0
		aus(1,7);
		aus(2,0);
		lcd_string(NAME(WStunden[1]));
		while (temp<2)
		{
			if (Sekunden!=sektemp)
     a28:	20 91 7b 01 	lds	r18, 0x017B
     a2c:	90 91 72 01 	lds	r25, 0x0172
     a30:	29 13       	cpse	r18, r25
			{
				zeit();
     a32:	da dc       	rcall	.-1612   	; 0x3e8 <_Z4zeitv>
     a34:	83 99       	sbic	0x10, 3	; 16
     a36:	22 c0       	rjmp	.+68     	; 0xa7c <_Z5einsth+0x3c6>
     a38:	8f ef       	ldi	r24, 0xFF	; 255
     a3a:	93 eb       	ldi	r25, 0xB3	; 179
     a3c:	01 97       	sbiw	r24, 0x01	; 1
     a3e:	f1 f7       	brne	.-4      	; 0xa3c <_Z5einsth+0x386>
     a40:	00 c0       	rjmp	.+0      	; 0xa42 <_Z5einsth+0x38c>
     a42:	00 00       	nop
     a44:	8f ef       	ldi	r24, 0xFF	; 255
     a46:	93 e2       	ldi	r25, 0x23	; 35
     a48:	01 97       	sbiw	r24, 0x01	; 1
     a4a:	f1 f7       	brne	.-4      	; 0xa48 <_Z5einsth+0x392>
     a4c:	00 c0       	rjmp	.+0      	; 0xa4e <_Z5einsth+0x398>
     a4e:	00 00       	nop
			}
			if(debounce(&PIND,3))
     a50:	83 99       	sbic	0x10, 3	; 16
     a52:	14 c0       	rjmp	.+40     	; 0xa7c <_Z5einsth+0x3c6>
			{
				temp++;
     a54:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,7);
     a56:	67 e0       	ldi	r22, 0x07	; 7
     a58:	81 2f       	mov	r24, r17
     a5a:	69 dd       	rcall	.-1326   	; 0x52e <_Z3aushh>
				aus(2,0);
     a5c:	6d 2f       	mov	r22, r29
     a5e:	82 e0       	ldi	r24, 0x02	; 2
     a60:	66 dd       	rcall	.-1332   	; 0x52e <_Z3aushh>
				switch (temp)
     a62:	cc 23       	and	r28, r28
     a64:	19 f0       	breq	.+6      	; 0xa6c <_Z5einsth+0x3b6>
     a66:	c1 30       	cpi	r28, 0x01	; 1
     a68:	49 f4       	brne	.+18     	; 0xa7c <_Z5einsth+0x3c6>
     a6a:	04 c0       	rjmp	.+8      	; 0xa74 <_Z5einsth+0x3be>
				{
					case 0:
					lcd_string(NAME(WStunden[1]));
     a6c:	84 e0       	ldi	r24, 0x04	; 4
     a6e:	91 e0       	ldi	r25, 0x01	; 1
     a70:	fa db       	rcall	.-2060   	; 0x266 <_Z10lcd_stringPKc>
     a72:	09 c0       	rjmp	.+18     	; 0xa86 <_Z5einsth+0x3d0>
					break;
					case 1:
					lcd_string(NAME(WMinuten[1]));
     a74:	80 e1       	ldi	r24, 0x10	; 16
     a76:	91 e0       	ldi	r25, 0x01	; 1
     a78:	f6 db       	rcall	.-2068   	; 0x266 <_Z10lcd_stringPKc>
     a7a:	0e c0       	rjmp	.+28     	; 0xa98 <_Z5einsth+0x3e2>
					break;
					default:
					break;
				}
			}
			switch (temp)
     a7c:	cc 23       	and	r28, r28
     a7e:	19 f0       	breq	.+6      	; 0xa86 <_Z5einsth+0x3d0>
     a80:	c1 30       	cpi	r28, 0x01	; 1
     a82:	99 f4       	brne	.+38     	; 0xaaa <_Z5einsth+0x3f4>
     a84:	09 c0       	rjmp	.+18     	; 0xa98 <_Z5einsth+0x3e2>
			{
				case 0:
				erhoehen(&WStunden[1],24,7,NAME(WStunden[1]));
     a86:	24 e0       	ldi	r18, 0x04	; 4
     a88:	31 e0       	ldi	r19, 0x01	; 1
     a8a:	47 e0       	ldi	r20, 0x07	; 7
     a8c:	68 e1       	ldi	r22, 0x18	; 24
     a8e:	87 e7       	ldi	r24, 0x77	; 119
     a90:	91 e0       	ldi	r25, 0x01	; 1
     a92:	e4 dd       	rcall	.-1080   	; 0x65c <_Z8erhoehenPhhhPKc>
				break;
     a94:	cd 2f       	mov	r28, r29
     a96:	c8 cf       	rjmp	.-112    	; 0xa28 <_Z5einsth+0x372>
				case 1:
				erhoehen(&WMinuten[1],60,7,NAME(WMinuten[1]));
     a98:	20 e1       	ldi	r18, 0x10	; 16
     a9a:	31 e0       	ldi	r19, 0x01	; 1
     a9c:	47 e0       	ldi	r20, 0x07	; 7
     a9e:	6c e3       	ldi	r22, 0x3C	; 60
     aa0:	85 e7       	ldi	r24, 0x75	; 117
     aa2:	91 e0       	ldi	r25, 0x01	; 1
     aa4:	db dd       	rcall	.-1098   	; 0x65c <_Z8erhoehenPhhhPKc>
				break;
     aa6:	c1 2f       	mov	r28, r17
     aa8:	bf cf       	rjmp	.-130    	; 0xa28 <_Z5einsth+0x372>
	case 5:
		temp = 0;
		aus(1,7);
		aus(2,0);
		lcd_string(NAME(WStunden[1]));
		while (temp<2)
     aaa:	c2 30       	cpi	r28, 0x02	; 2
     aac:	08 f4       	brcc	.+2      	; 0xab0 <_Z5einsth+0x3fa>
     aae:	bc cf       	rjmp	.-136    	; 0xa28 <_Z5einsth+0x372>
				erhoehen(&WMinuten[1],60,7,NAME(WMinuten[1]));
				break;
			}
			
		}
		return 0;
     ab0:	80 e0       	ldi	r24, 0x00	; 0
     ab2:	13 c0       	rjmp	.+38     	; 0xada <_Z5einsth+0x424>
		break;

	default:
		return 1;
     ab4:	81 e0       	ldi	r24, 0x01	; 1
     ab6:	11 c0       	rjmp	.+34     	; 0xada <_Z5einsth+0x424>
			{
				lampenstaerke=1;
			}
			
		}
		return 0;
     ab8:	80 e0       	ldi	r24, 0x00	; 0
     aba:	0f c0       	rjmp	.+30     	; 0xada <_Z5einsth+0x424>
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	0d c0       	rjmp	.+26     	; 0xada <_Z5einsth+0x424>
     ac0:	80 e0       	ldi	r24, 0x00	; 0
     ac2:	0b c0       	rjmp	.+22     	; 0xada <_Z5einsth+0x424>
				sekoffset=-5;
			}
				
		}
		
		return 0;
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	09 c0       	rjmp	.+18     	; 0xada <_Z5einsth+0x424>
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	07 c0       	rjmp	.+14     	; 0xada <_Z5einsth+0x424>
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	05 c0       	rjmp	.+10     	; 0xada <_Z5einsth+0x424>
				tempoffset=-10;
			}
			
		}
		
		return 0;
     ad0:	80 e0       	ldi	r24, 0x00	; 0
     ad2:	03 c0       	rjmp	.+6      	; 0xada <_Z5einsth+0x424>
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	01 c0       	rjmp	.+2      	; 0xada <_Z5einsth+0x424>
     ad8:	80 e0       	ldi	r24, 0x00	; 0

	default:
		return 1;
		break;
	}
}
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	08 95       	ret

00000ae2 <_Z10zeitsetzenv>:

#ifndef EINSTELLUNGEN_H_
#define EINSTELLUNGEN_H_

void zeitsetzen(){
	Minuten = 34;
     ae2:	82 e2       	ldi	r24, 0x22	; 34
     ae4:	80 93 7a 01 	sts	0x017A, r24
	Stunden	= 5;
     ae8:	85 e0       	ldi	r24, 0x05	; 5
     aea:	80 93 79 01 	sts	0x0179, r24
	Sekunden = 0;
     aee:	10 92 7b 01 	sts	0x017B, r1
	WochenTag=6;
     af2:	96 e0       	ldi	r25, 0x06	; 6
     af4:	90 93 78 01 	sts	0x0178, r25
	WStunden[0]=5;
     af8:	80 93 76 01 	sts	0x0176, r24
	WMinuten[0]=35;
     afc:	83 e2       	ldi	r24, 0x23	; 35
     afe:	80 93 74 01 	sts	0x0174, r24
	WStunden[1]=7;
     b02:	97 e0       	ldi	r25, 0x07	; 7
     b04:	90 93 77 01 	sts	0x0177, r25
	WMinuten[1]=35;
     b08:	80 93 75 01 	sts	0x0175, r24
	einst(4);
     b0c:	84 e0       	ldi	r24, 0x04	; 4
     b0e:	d3 dd       	rcall	.-1114   	; 0x6b6 <_Z5einsth>
	einst(0);
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	d1 dd       	rcall	.-1118   	; 0x6b6 <_Z5einsth>
	sekoffset=1;
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	80 93 6d 01 	sts	0x016D, r24
     b1a:	08 95       	ret

00000b1c <_Z4menuv>:


#ifndef MENUE_H_
#define MENUE_H_

uint8_t menu(){
     b1c:	cf 93       	push	r28
     b1e:	df 93       	push	r29
	uint8_t posit = 0;
     b20:	80 e0       	ldi	r24, 0x00	; 0
						temperatur();
						return 1;
					}
				}
				temperatur();
				posit++;
     b22:	d6 e0       	ldi	r29, 0x06	; 6
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     b24:	c7 e0       	ldi	r28, 0x07	; 7

uint8_t menu(){
	uint8_t posit = 0;
	while (true)
	{
		switch (posit)
     b26:	83 30       	cpi	r24, 0x03	; 3
     b28:	09 f4       	brne	.+2      	; 0xb2c <_Z4menuv+0x10>
     b2a:	e7 c0       	rjmp	.+462    	; 0xcfa <_Z4menuv+0x1de>
     b2c:	30 f4       	brcc	.+12     	; 0xb3a <_Z4menuv+0x1e>
     b2e:	81 30       	cpi	r24, 0x01	; 1
     b30:	09 f4       	brne	.+2      	; 0xb34 <_Z4menuv+0x18>
     b32:	53 c0       	rjmp	.+166    	; 0xbda <_Z4menuv+0xbe>
     b34:	82 30       	cpi	r24, 0x02	; 2
     b36:	49 f4       	brne	.+18     	; 0xb4a <_Z4menuv+0x2e>
     b38:	98 c0       	rjmp	.+304    	; 0xc6a <_Z4menuv+0x14e>
     b3a:	85 30       	cpi	r24, 0x05	; 5
     b3c:	09 f4       	brne	.+2      	; 0xb40 <_Z4menuv+0x24>
     b3e:	75 c1       	rjmp	.+746    	; 0xe2a <_Z4menuv+0x30e>
     b40:	08 f4       	brcc	.+2      	; 0xb44 <_Z4menuv+0x28>
     b42:	23 c1       	rjmp	.+582    	; 0xd8a <_Z4menuv+0x26e>
     b44:	86 30       	cpi	r24, 0x06	; 6
     b46:	09 f4       	brne	.+2      	; 0xb4a <_Z4menuv+0x2e>
     b48:	c3 c1       	rjmp	.+902    	; 0xed0 <_Z4menuv+0x3b4>
		{
			case 0:
				//Weckzeit anzeigen und einstellen mit PD2
				lcd_clear();
     b4a:	3b db       	rcall	.-2442   	; 0x1c2 <_Z9lcd_clearv>
				aus(1,5);
     b4c:	65 e0       	ldi	r22, 0x05	; 5
     b4e:	81 e0       	ldi	r24, 0x01	; 1
     b50:	ee dc       	rcall	.-1572   	; 0x52e <_Z3aushh>
				aus(2,0);
     b52:	60 e0       	ldi	r22, 0x00	; 0
     b54:	82 e0       	ldi	r24, 0x02	; 2
     b56:	eb dc       	rcall	.-1578   	; 0x52e <_Z3aushh>
				lcd_string("Werktags");
     b58:	8c e1       	ldi	r24, 0x1C	; 28
     b5a:	91 e0       	ldi	r25, 0x01	; 1
     b5c:	84 db       	rcall	.-2296   	; 0x266 <_Z10lcd_stringPKc>
				posit = posit + 1;
				while(!debounce(&PIND,PD3))
     b5e:	2b c0       	rjmp	.+86     	; 0xbb6 <_Z4menuv+0x9a>
				{
					//Zeitabfrage mit einbauen
					if(Sekunden!=sektemp){
     b60:	90 91 7b 01 	lds	r25, 0x017B
     b64:	80 91 72 01 	lds	r24, 0x0172
     b68:	98 13       	cpse	r25, r24
						zeit();
     b6a:	3e dc       	rcall	.-1924   	; 0x3e8 <_Z4zeitv>
     b6c:	82 99       	sbic	0x10, 2	; 16
     b6e:	13 c0       	rjmp	.+38     	; 0xb96 <_Z4menuv+0x7a>
     b70:	8f ef       	ldi	r24, 0xFF	; 255
     b72:	93 eb       	ldi	r25, 0xB3	; 179
     b74:	01 97       	sbiw	r24, 0x01	; 1
     b76:	f1 f7       	brne	.-4      	; 0xb74 <_Z4menuv+0x58>
     b78:	00 c0       	rjmp	.+0      	; 0xb7a <_Z4menuv+0x5e>
     b7a:	00 00       	nop
     b7c:	8f ef       	ldi	r24, 0xFF	; 255
     b7e:	93 e2       	ldi	r25, 0x23	; 35
     b80:	01 97       	sbiw	r24, 0x01	; 1
     b82:	f1 f7       	brne	.-4      	; 0xb80 <_Z4menuv+0x64>
     b84:	00 c0       	rjmp	.+0      	; 0xb86 <_Z4menuv+0x6a>
     b86:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     b88:	82 99       	sbic	0x10, 2	; 16
     b8a:	05 c0       	rjmp	.+10     	; 0xb96 <_Z4menuv+0x7a>
					{
						einst(4);
     b8c:	84 e0       	ldi	r24, 0x04	; 4
     b8e:	93 dd       	rcall	.-1242   	; 0x6b6 <_Z5einsth>
						lcd_string("Werktags");
     b90:	8c e1       	ldi	r24, 0x1C	; 28
     b92:	91 e0       	ldi	r25, 0x01	; 1
     b94:	68 db       	rcall	.-2352   	; 0x266 <_Z10lcd_stringPKc>
     b96:	84 99       	sbic	0x10, 4	; 16
     b98:	0e c0       	rjmp	.+28     	; 0xbb6 <_Z4menuv+0x9a>
     b9a:	8f ef       	ldi	r24, 0xFF	; 255
     b9c:	93 eb       	ldi	r25, 0xB3	; 179
     b9e:	01 97       	sbiw	r24, 0x01	; 1
     ba0:	f1 f7       	brne	.-4      	; 0xb9e <_Z4menuv+0x82>
     ba2:	00 c0       	rjmp	.+0      	; 0xba4 <_Z4menuv+0x88>
     ba4:	00 00       	nop
     ba6:	8f ef       	ldi	r24, 0xFF	; 255
     ba8:	93 e2       	ldi	r25, 0x23	; 35
     baa:	01 97       	sbiw	r24, 0x01	; 1
     bac:	f1 f7       	brne	.-4      	; 0xbaa <_Z4menuv+0x8e>
     bae:	00 c0       	rjmp	.+0      	; 0xbb0 <_Z4menuv+0x94>
     bb0:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     bb2:	84 9b       	sbis	0x10, 4	; 16
     bb4:	d7 c1       	rjmp	.+942    	; 0xf64 <_Z4menuv+0x448>
     bb6:	83 99       	sbic	0x10, 3	; 16
     bb8:	d3 cf       	rjmp	.-90     	; 0xb60 <_Z4menuv+0x44>
     bba:	8f ef       	ldi	r24, 0xFF	; 255
     bbc:	93 eb       	ldi	r25, 0xB3	; 179
     bbe:	01 97       	sbiw	r24, 0x01	; 1
     bc0:	f1 f7       	brne	.-4      	; 0xbbe <_Z4menuv+0xa2>
     bc2:	00 c0       	rjmp	.+0      	; 0xbc4 <_Z4menuv+0xa8>
     bc4:	00 00       	nop
     bc6:	8f ef       	ldi	r24, 0xFF	; 255
     bc8:	93 e2       	ldi	r25, 0x23	; 35
     bca:	01 97       	sbiw	r24, 0x01	; 1
     bcc:	f1 f7       	brne	.-4      	; 0xbca <_Z4menuv+0xae>
     bce:	00 c0       	rjmp	.+0      	; 0xbd0 <_Z4menuv+0xb4>
     bd0:	00 00       	nop
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Werktags");
				posit = posit + 1;
				while(!debounce(&PIND,PD3))
     bd2:	83 99       	sbic	0x10, 3	; 16
     bd4:	c5 cf       	rjmp	.-118    	; 0xb60 <_Z4menuv+0x44>
				//Weckzeit anzeigen und einstellen mit PD2
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Werktags");
				posit = posit + 1;
     bd6:	81 e0       	ldi	r24, 0x01	; 1
     bd8:	a6 cf       	rjmp	.-180    	; 0xb26 <_Z4menuv+0xa>
				}
				break;
			
			case 1:
			//Weckzeit anzeige und einstellungen am Wochenende
				lcd_clear();
     bda:	f3 da       	rcall	.-2586   	; 0x1c2 <_Z9lcd_clearv>
				aus(1,7);
     bdc:	6c 2f       	mov	r22, r28
     bde:	81 e0       	ldi	r24, 0x01	; 1
     be0:	a6 dc       	rcall	.-1716   	; 0x52e <_Z3aushh>
				aus(2,0);
     be2:	60 e0       	ldi	r22, 0x00	; 0
     be4:	82 e0       	ldi	r24, 0x02	; 2
     be6:	a3 dc       	rcall	.-1722   	; 0x52e <_Z3aushh>
				lcd_string("Wohenende");
     be8:	85 e2       	ldi	r24, 0x25	; 37
     bea:	91 e0       	ldi	r25, 0x01	; 1
     bec:	3c db       	rcall	.-2440   	; 0x266 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     bee:	2b c0       	rjmp	.+86     	; 0xc46 <_Z4menuv+0x12a>
				{
					if(Sekunden!=sektemp){
     bf0:	90 91 7b 01 	lds	r25, 0x017B
     bf4:	80 91 72 01 	lds	r24, 0x0172
     bf8:	98 13       	cpse	r25, r24
						zeit();
     bfa:	f6 db       	rcall	.-2068   	; 0x3e8 <_Z4zeitv>
     bfc:	82 99       	sbic	0x10, 2	; 16
     bfe:	13 c0       	rjmp	.+38     	; 0xc26 <_Z4menuv+0x10a>
     c00:	8f ef       	ldi	r24, 0xFF	; 255
     c02:	93 eb       	ldi	r25, 0xB3	; 179
     c04:	01 97       	sbiw	r24, 0x01	; 1
     c06:	f1 f7       	brne	.-4      	; 0xc04 <_Z4menuv+0xe8>
     c08:	00 c0       	rjmp	.+0      	; 0xc0a <_Z4menuv+0xee>
     c0a:	00 00       	nop
     c0c:	8f ef       	ldi	r24, 0xFF	; 255
     c0e:	93 e2       	ldi	r25, 0x23	; 35
     c10:	01 97       	sbiw	r24, 0x01	; 1
     c12:	f1 f7       	brne	.-4      	; 0xc10 <_Z4menuv+0xf4>
     c14:	00 c0       	rjmp	.+0      	; 0xc16 <_Z4menuv+0xfa>
     c16:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     c18:	82 99       	sbic	0x10, 2	; 16
     c1a:	05 c0       	rjmp	.+10     	; 0xc26 <_Z4menuv+0x10a>
					{
						einst(5);
     c1c:	85 e0       	ldi	r24, 0x05	; 5
     c1e:	4b dd       	rcall	.-1386   	; 0x6b6 <_Z5einsth>
						lcd_string("Wohenende");
     c20:	85 e2       	ldi	r24, 0x25	; 37
     c22:	91 e0       	ldi	r25, 0x01	; 1
     c24:	20 db       	rcall	.-2496   	; 0x266 <_Z10lcd_stringPKc>
     c26:	84 99       	sbic	0x10, 4	; 16
     c28:	0e c0       	rjmp	.+28     	; 0xc46 <_Z4menuv+0x12a>
     c2a:	8f ef       	ldi	r24, 0xFF	; 255
     c2c:	93 eb       	ldi	r25, 0xB3	; 179
     c2e:	01 97       	sbiw	r24, 0x01	; 1
     c30:	f1 f7       	brne	.-4      	; 0xc2e <_Z4menuv+0x112>
     c32:	00 c0       	rjmp	.+0      	; 0xc34 <_Z4menuv+0x118>
     c34:	00 00       	nop
     c36:	8f ef       	ldi	r24, 0xFF	; 255
     c38:	93 e2       	ldi	r25, 0x23	; 35
     c3a:	01 97       	sbiw	r24, 0x01	; 1
     c3c:	f1 f7       	brne	.-4      	; 0xc3a <_Z4menuv+0x11e>
     c3e:	00 c0       	rjmp	.+0      	; 0xc40 <_Z4menuv+0x124>
     c40:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     c42:	84 9b       	sbis	0x10, 4	; 16
     c44:	8f c1       	rjmp	.+798    	; 0xf64 <_Z4menuv+0x448>
     c46:	83 99       	sbic	0x10, 3	; 16
     c48:	d3 cf       	rjmp	.-90     	; 0xbf0 <_Z4menuv+0xd4>
     c4a:	8f ef       	ldi	r24, 0xFF	; 255
     c4c:	93 eb       	ldi	r25, 0xB3	; 179
     c4e:	01 97       	sbiw	r24, 0x01	; 1
     c50:	f1 f7       	brne	.-4      	; 0xc4e <_Z4menuv+0x132>
     c52:	00 c0       	rjmp	.+0      	; 0xc54 <_Z4menuv+0x138>
     c54:	00 00       	nop
     c56:	8f ef       	ldi	r24, 0xFF	; 255
     c58:	93 e2       	ldi	r25, 0x23	; 35
     c5a:	01 97       	sbiw	r24, 0x01	; 1
     c5c:	f1 f7       	brne	.-4      	; 0xc5a <_Z4menuv+0x13e>
     c5e:	00 c0       	rjmp	.+0      	; 0xc60 <_Z4menuv+0x144>
     c60:	00 00       	nop
			//Weckzeit anzeige und einstellungen am Wochenende
				lcd_clear();
				aus(1,7);
				aus(2,0);
				lcd_string("Wohenende");
				while (!debounce(&PIND,PD3))
     c62:	83 99       	sbic	0x10, 3	; 16
     c64:	c5 cf       	rjmp	.-118    	; 0xbf0 <_Z4menuv+0xd4>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     c66:	82 e0       	ldi	r24, 0x02	; 2
     c68:	5e cf       	rjmp	.-324    	; 0xb26 <_Z4menuv+0xa>
				break;
			
			case 2:
				//Lampe einstellen
				//Jetzt noch nicht implementiert
				lcd_clear();
     c6a:	ab da       	rcall	.-2730   	; 0x1c2 <_Z9lcd_clearv>
				aus(1,2);
     c6c:	62 e0       	ldi	r22, 0x02	; 2
     c6e:	81 e0       	ldi	r24, 0x01	; 1
     c70:	5e dc       	rcall	.-1860   	; 0x52e <_Z3aushh>
				aus(2,0);
     c72:	60 e0       	ldi	r22, 0x00	; 0
     c74:	82 e0       	ldi	r24, 0x02	; 2
     c76:	5b dc       	rcall	.-1866   	; 0x52e <_Z3aushh>
				lcd_string("Lampenstärke:");
     c78:	8b eb       	ldi	r24, 0xBB	; 187
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	f4 da       	rcall	.-2584   	; 0x266 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     c7e:	2b c0       	rjmp	.+86     	; 0xcd6 <_Z4menuv+0x1ba>
				{
					if(Sekunden!=sektemp){
     c80:	90 91 7b 01 	lds	r25, 0x017B
     c84:	80 91 72 01 	lds	r24, 0x0172
     c88:	98 13       	cpse	r25, r24
						zeit();
     c8a:	ae db       	rcall	.-2212   	; 0x3e8 <_Z4zeitv>
     c8c:	82 99       	sbic	0x10, 2	; 16
     c8e:	13 c0       	rjmp	.+38     	; 0xcb6 <_Z4menuv+0x19a>
     c90:	8f ef       	ldi	r24, 0xFF	; 255
     c92:	93 eb       	ldi	r25, 0xB3	; 179
     c94:	01 97       	sbiw	r24, 0x01	; 1
     c96:	f1 f7       	brne	.-4      	; 0xc94 <_Z4menuv+0x178>
     c98:	00 c0       	rjmp	.+0      	; 0xc9a <_Z4menuv+0x17e>
     c9a:	00 00       	nop
     c9c:	8f ef       	ldi	r24, 0xFF	; 255
     c9e:	93 e2       	ldi	r25, 0x23	; 35
     ca0:	01 97       	sbiw	r24, 0x01	; 1
     ca2:	f1 f7       	brne	.-4      	; 0xca0 <_Z4menuv+0x184>
     ca4:	00 c0       	rjmp	.+0      	; 0xca6 <_Z4menuv+0x18a>
     ca6:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     ca8:	82 99       	sbic	0x10, 2	; 16
     caa:	05 c0       	rjmp	.+10     	; 0xcb6 <_Z4menuv+0x19a>
					{
						einst(1);
     cac:	81 e0       	ldi	r24, 0x01	; 1
     cae:	03 dd       	rcall	.-1530   	; 0x6b6 <_Z5einsth>
						lcd_string("Lampenstärke");
     cb0:	8f e2       	ldi	r24, 0x2F	; 47
     cb2:	91 e0       	ldi	r25, 0x01	; 1
     cb4:	d8 da       	rcall	.-2640   	; 0x266 <_Z10lcd_stringPKc>
     cb6:	84 99       	sbic	0x10, 4	; 16
     cb8:	0e c0       	rjmp	.+28     	; 0xcd6 <_Z4menuv+0x1ba>
     cba:	8f ef       	ldi	r24, 0xFF	; 255
     cbc:	93 eb       	ldi	r25, 0xB3	; 179
     cbe:	01 97       	sbiw	r24, 0x01	; 1
     cc0:	f1 f7       	brne	.-4      	; 0xcbe <_Z4menuv+0x1a2>
     cc2:	00 c0       	rjmp	.+0      	; 0xcc4 <_Z4menuv+0x1a8>
     cc4:	00 00       	nop
     cc6:	8f ef       	ldi	r24, 0xFF	; 255
     cc8:	93 e2       	ldi	r25, 0x23	; 35
     cca:	01 97       	sbiw	r24, 0x01	; 1
     ccc:	f1 f7       	brne	.-4      	; 0xcca <_Z4menuv+0x1ae>
     cce:	00 c0       	rjmp	.+0      	; 0xcd0 <_Z4menuv+0x1b4>
     cd0:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     cd2:	84 9b       	sbis	0x10, 4	; 16
     cd4:	47 c1       	rjmp	.+654    	; 0xf64 <_Z4menuv+0x448>
     cd6:	83 99       	sbic	0x10, 3	; 16
     cd8:	d3 cf       	rjmp	.-90     	; 0xc80 <_Z4menuv+0x164>
     cda:	8f ef       	ldi	r24, 0xFF	; 255
     cdc:	93 eb       	ldi	r25, 0xB3	; 179
     cde:	01 97       	sbiw	r24, 0x01	; 1
     ce0:	f1 f7       	brne	.-4      	; 0xcde <_Z4menuv+0x1c2>
     ce2:	00 c0       	rjmp	.+0      	; 0xce4 <_Z4menuv+0x1c8>
     ce4:	00 00       	nop
     ce6:	8f ef       	ldi	r24, 0xFF	; 255
     ce8:	93 e2       	ldi	r25, 0x23	; 35
     cea:	01 97       	sbiw	r24, 0x01	; 1
     cec:	f1 f7       	brne	.-4      	; 0xcea <_Z4menuv+0x1ce>
     cee:	00 c0       	rjmp	.+0      	; 0xcf0 <_Z4menuv+0x1d4>
     cf0:	00 00       	nop
				//Jetzt noch nicht implementiert
				lcd_clear();
				aus(1,2);
				aus(2,0);
				lcd_string("Lampenstärke:");
				while (!debounce(&PIND,PD3))
     cf2:	83 99       	sbic	0x10, 3	; 16
     cf4:	c5 cf       	rjmp	.-118    	; 0xc80 <_Z4menuv+0x164>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     cf6:	83 e0       	ldi	r24, 0x03	; 3
     cf8:	16 cf       	rjmp	.-468    	; 0xb26 <_Z4menuv+0xa>
				break;
			
			case 3:
				//Zeit einstellen ohnen Sekunden
				lcd_clear();
     cfa:	63 da       	rcall	.-2874   	; 0x1c2 <_Z9lcd_clearv>
				aus(1,3);
     cfc:	63 e0       	ldi	r22, 0x03	; 3
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	16 dc       	rcall	.-2004   	; 0x52e <_Z3aushh>
				aus(2,0);
     d02:	60 e0       	ldi	r22, 0x00	; 0
     d04:	82 e0       	ldi	r24, 0x02	; 2
     d06:	13 dc       	rcall	.-2010   	; 0x52e <_Z3aushh>
				lcd_string("Zeit");
     d08:	8d e3       	ldi	r24, 0x3D	; 61
     d0a:	91 e0       	ldi	r25, 0x01	; 1
     d0c:	ac da       	rcall	.-2728   	; 0x266 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     d0e:	2b c0       	rjmp	.+86     	; 0xd66 <_Z4menuv+0x24a>
				{
					if(Sekunden!=sektemp){
     d10:	90 91 7b 01 	lds	r25, 0x017B
     d14:	80 91 72 01 	lds	r24, 0x0172
     d18:	98 13       	cpse	r25, r24
						zeit();
     d1a:	66 db       	rcall	.-2356   	; 0x3e8 <_Z4zeitv>
     d1c:	82 99       	sbic	0x10, 2	; 16
     d1e:	13 c0       	rjmp	.+38     	; 0xd46 <_Z4menuv+0x22a>
     d20:	8f ef       	ldi	r24, 0xFF	; 255
     d22:	93 eb       	ldi	r25, 0xB3	; 179
     d24:	01 97       	sbiw	r24, 0x01	; 1
     d26:	f1 f7       	brne	.-4      	; 0xd24 <_Z4menuv+0x208>
     d28:	00 c0       	rjmp	.+0      	; 0xd2a <_Z4menuv+0x20e>
     d2a:	00 00       	nop
     d2c:	8f ef       	ldi	r24, 0xFF	; 255
     d2e:	93 e2       	ldi	r25, 0x23	; 35
     d30:	01 97       	sbiw	r24, 0x01	; 1
     d32:	f1 f7       	brne	.-4      	; 0xd30 <_Z4menuv+0x214>
     d34:	00 c0       	rjmp	.+0      	; 0xd36 <_Z4menuv+0x21a>
     d36:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     d38:	82 99       	sbic	0x10, 2	; 16
     d3a:	05 c0       	rjmp	.+10     	; 0xd46 <_Z4menuv+0x22a>
					{
						einst(0);
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	bb dc       	rcall	.-1674   	; 0x6b6 <_Z5einsth>
						lcd_string("Zeit");
     d40:	8d e3       	ldi	r24, 0x3D	; 61
     d42:	91 e0       	ldi	r25, 0x01	; 1
     d44:	90 da       	rcall	.-2784   	; 0x266 <_Z10lcd_stringPKc>
     d46:	84 99       	sbic	0x10, 4	; 16
     d48:	0e c0       	rjmp	.+28     	; 0xd66 <_Z4menuv+0x24a>
     d4a:	8f ef       	ldi	r24, 0xFF	; 255
     d4c:	93 eb       	ldi	r25, 0xB3	; 179
     d4e:	01 97       	sbiw	r24, 0x01	; 1
     d50:	f1 f7       	brne	.-4      	; 0xd4e <_Z4menuv+0x232>
     d52:	00 c0       	rjmp	.+0      	; 0xd54 <_Z4menuv+0x238>
     d54:	00 00       	nop
     d56:	8f ef       	ldi	r24, 0xFF	; 255
     d58:	93 e2       	ldi	r25, 0x23	; 35
     d5a:	01 97       	sbiw	r24, 0x01	; 1
     d5c:	f1 f7       	brne	.-4      	; 0xd5a <_Z4menuv+0x23e>
     d5e:	00 c0       	rjmp	.+0      	; 0xd60 <_Z4menuv+0x244>
     d60:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     d62:	84 9b       	sbis	0x10, 4	; 16
     d64:	ff c0       	rjmp	.+510    	; 0xf64 <_Z4menuv+0x448>
     d66:	83 99       	sbic	0x10, 3	; 16
     d68:	d3 cf       	rjmp	.-90     	; 0xd10 <_Z4menuv+0x1f4>
     d6a:	8f ef       	ldi	r24, 0xFF	; 255
     d6c:	93 eb       	ldi	r25, 0xB3	; 179
     d6e:	01 97       	sbiw	r24, 0x01	; 1
     d70:	f1 f7       	brne	.-4      	; 0xd6e <_Z4menuv+0x252>
     d72:	00 c0       	rjmp	.+0      	; 0xd74 <_Z4menuv+0x258>
     d74:	00 00       	nop
     d76:	8f ef       	ldi	r24, 0xFF	; 255
     d78:	93 e2       	ldi	r25, 0x23	; 35
     d7a:	01 97       	sbiw	r24, 0x01	; 1
     d7c:	f1 f7       	brne	.-4      	; 0xd7a <_Z4menuv+0x25e>
     d7e:	00 c0       	rjmp	.+0      	; 0xd80 <_Z4menuv+0x264>
     d80:	00 00       	nop
				//Zeit einstellen ohnen Sekunden
				lcd_clear();
				aus(1,3);
				aus(2,0);
				lcd_string("Zeit");
				while (!debounce(&PIND,PD3))
     d82:	83 99       	sbic	0x10, 3	; 16
     d84:	c5 cf       	rjmp	.-118    	; 0xd10 <_Z4menuv+0x1f4>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     d86:	84 e0       	ldi	r24, 0x04	; 4
     d88:	ce ce       	rjmp	.-612    	; 0xb26 <_Z4menuv+0xa>
				break;
				
			case 4:
				//Sekundenoffset einstellen
				lcd_clear();
     d8a:	1b da       	rcall	.-3018   	; 0x1c2 <_Z9lcd_clearv>
				lcd_home();
     d8c:	51 da       	rcall	.-2910   	; 0x230 <_Z8lcd_homev>
				lcd_string("Sekundenoffset:");
     d8e:	8a ec       	ldi	r24, 0xCA	; 202
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	69 da       	rcall	.-2862   	; 0x266 <_Z10lcd_stringPKc>
				aus(2,0);
     d94:	60 e0       	ldi	r22, 0x00	; 0
     d96:	82 e0       	ldi	r24, 0x02	; 2
     d98:	ca db       	rcall	.-2156   	; 0x52e <_Z3aushh>
				itoa(sekoffset,Buffer,10);
     d9a:	80 91 6d 01 	lds	r24, 0x016D
     d9e:	4a e0       	ldi	r20, 0x0A	; 10
     da0:	50 e0       	ldi	r21, 0x00	; 0
     da2:	69 e5       	ldi	r22, 0x59	; 89
     da4:	71 e0       	ldi	r23, 0x01	; 1
     da6:	99 27       	eor	r25, r25
     da8:	87 fd       	sbrc	r24, 7
     daa:	90 95       	com	r25
     dac:	7c d3       	rcall	.+1784   	; 0x14a6 <itoa>
				lcd_string(Buffer);
     dae:	89 e5       	ldi	r24, 0x59	; 89
     db0:	91 e0       	ldi	r25, 0x01	; 1
     db2:	59 da       	rcall	.-2894   	; 0x266 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     db4:	28 c0       	rjmp	.+80     	; 0xe06 <_Z4menuv+0x2ea>
				{
					if(Sekunden!=sektemp){
     db6:	90 91 7b 01 	lds	r25, 0x017B
     dba:	80 91 72 01 	lds	r24, 0x0172
     dbe:	98 13       	cpse	r25, r24
						zeit();
     dc0:	13 db       	rcall	.-2522   	; 0x3e8 <_Z4zeitv>
     dc2:	82 99       	sbic	0x10, 2	; 16
     dc4:	10 c0       	rjmp	.+32     	; 0xde6 <_Z4menuv+0x2ca>
     dc6:	8f ef       	ldi	r24, 0xFF	; 255
     dc8:	93 eb       	ldi	r25, 0xB3	; 179
     dca:	01 97       	sbiw	r24, 0x01	; 1
     dcc:	f1 f7       	brne	.-4      	; 0xdca <_Z4menuv+0x2ae>
     dce:	00 c0       	rjmp	.+0      	; 0xdd0 <_Z4menuv+0x2b4>
     dd0:	00 00       	nop
     dd2:	8f ef       	ldi	r24, 0xFF	; 255
     dd4:	93 e2       	ldi	r25, 0x23	; 35
     dd6:	01 97       	sbiw	r24, 0x01	; 1
     dd8:	f1 f7       	brne	.-4      	; 0xdd6 <_Z4menuv+0x2ba>
     dda:	00 c0       	rjmp	.+0      	; 0xddc <_Z4menuv+0x2c0>
     ddc:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     dde:	82 99       	sbic	0x10, 2	; 16
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <_Z4menuv+0x2ca>
					{
						einst(2);
     de2:	82 e0       	ldi	r24, 0x02	; 2
     de4:	68 dc       	rcall	.-1840   	; 0x6b6 <_Z5einsth>
     de6:	84 99       	sbic	0x10, 4	; 16
     de8:	0e c0       	rjmp	.+28     	; 0xe06 <_Z4menuv+0x2ea>
     dea:	8f ef       	ldi	r24, 0xFF	; 255
     dec:	93 eb       	ldi	r25, 0xB3	; 179
     dee:	01 97       	sbiw	r24, 0x01	; 1
     df0:	f1 f7       	brne	.-4      	; 0xdee <_Z4menuv+0x2d2>
     df2:	00 c0       	rjmp	.+0      	; 0xdf4 <_Z4menuv+0x2d8>
     df4:	00 00       	nop
     df6:	8f ef       	ldi	r24, 0xFF	; 255
     df8:	93 e2       	ldi	r25, 0x23	; 35
     dfa:	01 97       	sbiw	r24, 0x01	; 1
     dfc:	f1 f7       	brne	.-4      	; 0xdfa <_Z4menuv+0x2de>
     dfe:	00 c0       	rjmp	.+0      	; 0xe00 <_Z4menuv+0x2e4>
     e00:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     e02:	84 9b       	sbis	0x10, 4	; 16
     e04:	af c0       	rjmp	.+350    	; 0xf64 <_Z4menuv+0x448>
     e06:	83 99       	sbic	0x10, 3	; 16
     e08:	d6 cf       	rjmp	.-84     	; 0xdb6 <_Z4menuv+0x29a>
     e0a:	8f ef       	ldi	r24, 0xFF	; 255
     e0c:	93 eb       	ldi	r25, 0xB3	; 179
     e0e:	01 97       	sbiw	r24, 0x01	; 1
     e10:	f1 f7       	brne	.-4      	; 0xe0e <_Z4menuv+0x2f2>
     e12:	00 c0       	rjmp	.+0      	; 0xe14 <_Z4menuv+0x2f8>
     e14:	00 00       	nop
     e16:	8f ef       	ldi	r24, 0xFF	; 255
     e18:	93 e2       	ldi	r25, 0x23	; 35
     e1a:	01 97       	sbiw	r24, 0x01	; 1
     e1c:	f1 f7       	brne	.-4      	; 0xe1a <_Z4menuv+0x2fe>
     e1e:	00 c0       	rjmp	.+0      	; 0xe20 <_Z4menuv+0x304>
     e20:	00 00       	nop
				lcd_home();
				lcd_string("Sekundenoffset:");
				aus(2,0);
				itoa(sekoffset,Buffer,10);
				lcd_string(Buffer);
				while (!debounce(&PIND,PD3))
     e22:	83 99       	sbic	0x10, 3	; 16
     e24:	c8 cf       	rjmp	.-112    	; 0xdb6 <_Z4menuv+0x29a>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     e26:	85 e0       	ldi	r24, 0x05	; 5
     e28:	7e ce       	rjmp	.-772    	; 0xb26 <_Z4menuv+0xa>
				break;
				
			case 5:
				//Temperaturoffset einstellen
				lcd_clear();
     e2a:	cb d9       	rcall	.-3178   	; 0x1c2 <_Z9lcd_clearv>
				lcd_home();
     e2c:	01 da       	rcall	.-3070   	; 0x230 <_Z8lcd_homev>
				lcd_string("Temperaturoffset:");
     e2e:	8a ed       	ldi	r24, 0xDA	; 218
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	19 da       	rcall	.-3022   	; 0x266 <_Z10lcd_stringPKc>
				aus(2,0);
     e34:	60 e0       	ldi	r22, 0x00	; 0
     e36:	82 e0       	ldi	r24, 0x02	; 2
     e38:	7a db       	rcall	.-2316   	; 0x52e <_Z3aushh>
				itoa(tempoffset,Buffer,10);
     e3a:	80 91 62 00 	lds	r24, 0x0062
     e3e:	4a e0       	ldi	r20, 0x0A	; 10
     e40:	50 e0       	ldi	r21, 0x00	; 0
     e42:	69 e5       	ldi	r22, 0x59	; 89
     e44:	71 e0       	ldi	r23, 0x01	; 1
     e46:	99 27       	eor	r25, r25
     e48:	87 fd       	sbrc	r24, 7
     e4a:	90 95       	com	r25
     e4c:	2c d3       	rcall	.+1624   	; 0x14a6 <itoa>
				lcd_string(Buffer);
     e4e:	89 e5       	ldi	r24, 0x59	; 89
     e50:	91 e0       	ldi	r25, 0x01	; 1
     e52:	09 da       	rcall	.-3054   	; 0x266 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     e54:	2a c0       	rjmp	.+84     	; 0xeaa <_Z4menuv+0x38e>
				{
					if(Sekunden!=sektemp){
     e56:	90 91 7b 01 	lds	r25, 0x017B
     e5a:	80 91 72 01 	lds	r24, 0x0172
     e5e:	98 13       	cpse	r25, r24
						zeit();
     e60:	c3 da       	rcall	.-2682   	; 0x3e8 <_Z4zeitv>
     e62:	82 99       	sbic	0x10, 2	; 16
     e64:	10 c0       	rjmp	.+32     	; 0xe86 <_Z4menuv+0x36a>
     e66:	8f ef       	ldi	r24, 0xFF	; 255
     e68:	93 eb       	ldi	r25, 0xB3	; 179
     e6a:	01 97       	sbiw	r24, 0x01	; 1
     e6c:	f1 f7       	brne	.-4      	; 0xe6a <_Z4menuv+0x34e>
     e6e:	00 c0       	rjmp	.+0      	; 0xe70 <_Z4menuv+0x354>
     e70:	00 00       	nop
     e72:	8f ef       	ldi	r24, 0xFF	; 255
     e74:	93 e2       	ldi	r25, 0x23	; 35
     e76:	01 97       	sbiw	r24, 0x01	; 1
     e78:	f1 f7       	brne	.-4      	; 0xe76 <_Z4menuv+0x35a>
     e7a:	00 c0       	rjmp	.+0      	; 0xe7c <_Z4menuv+0x360>
     e7c:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     e7e:	82 99       	sbic	0x10, 2	; 16
     e80:	02 c0       	rjmp	.+4      	; 0xe86 <_Z4menuv+0x36a>
					{
						einst(3);
     e82:	83 e0       	ldi	r24, 0x03	; 3
     e84:	18 dc       	rcall	.-2000   	; 0x6b6 <_Z5einsth>
     e86:	84 99       	sbic	0x10, 4	; 16
     e88:	10 c0       	rjmp	.+32     	; 0xeaa <_Z4menuv+0x38e>
     e8a:	8f ef       	ldi	r24, 0xFF	; 255
     e8c:	93 eb       	ldi	r25, 0xB3	; 179
     e8e:	01 97       	sbiw	r24, 0x01	; 1
     e90:	f1 f7       	brne	.-4      	; 0xe8e <_Z4menuv+0x372>
     e92:	00 c0       	rjmp	.+0      	; 0xe94 <_Z4menuv+0x378>
     e94:	00 00       	nop
     e96:	8f ef       	ldi	r24, 0xFF	; 255
     e98:	93 e2       	ldi	r25, 0x23	; 35
     e9a:	01 97       	sbiw	r24, 0x01	; 1
     e9c:	f1 f7       	brne	.-4      	; 0xe9a <_Z4menuv+0x37e>
     e9e:	00 c0       	rjmp	.+0      	; 0xea0 <_Z4menuv+0x384>
     ea0:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     ea2:	84 99       	sbic	0x10, 4	; 16
     ea4:	02 c0       	rjmp	.+4      	; 0xeaa <_Z4menuv+0x38e>
					{
						temperatur();
     ea6:	44 da       	rcall	.-2936   	; 0x330 <_Z10temperaturv>
						return 1;
     ea8:	5d c0       	rjmp	.+186    	; 0xf64 <_Z4menuv+0x448>
     eaa:	83 99       	sbic	0x10, 3	; 16
     eac:	d4 cf       	rjmp	.-88     	; 0xe56 <_Z4menuv+0x33a>
     eae:	8f ef       	ldi	r24, 0xFF	; 255
     eb0:	93 eb       	ldi	r25, 0xB3	; 179
     eb2:	01 97       	sbiw	r24, 0x01	; 1
     eb4:	f1 f7       	brne	.-4      	; 0xeb2 <_Z4menuv+0x396>
     eb6:	00 c0       	rjmp	.+0      	; 0xeb8 <_Z4menuv+0x39c>
     eb8:	00 00       	nop
     eba:	8f ef       	ldi	r24, 0xFF	; 255
     ebc:	93 e2       	ldi	r25, 0x23	; 35
     ebe:	01 97       	sbiw	r24, 0x01	; 1
     ec0:	f1 f7       	brne	.-4      	; 0xebe <_Z4menuv+0x3a2>
     ec2:	00 c0       	rjmp	.+0      	; 0xec4 <_Z4menuv+0x3a8>
     ec4:	00 00       	nop
				lcd_home();
				lcd_string("Temperaturoffset:");
				aus(2,0);
				itoa(tempoffset,Buffer,10);
				lcd_string(Buffer);
				while (!debounce(&PIND,PD3))
     ec6:	83 99       	sbic	0x10, 3	; 16
     ec8:	c6 cf       	rjmp	.-116    	; 0xe56 <_Z4menuv+0x33a>
					{
						temperatur();
						return 1;
					}
				}
				temperatur();
     eca:	32 da       	rcall	.-2972   	; 0x330 <_Z10temperaturv>
				posit++;
     ecc:	8d 2f       	mov	r24, r29
				break;
     ece:	2b ce       	rjmp	.-938    	; 0xb26 <_Z4menuv+0xa>
				
			case 6:
				//Display ausschalten
				lcd_clear();
     ed0:	78 d9       	rcall	.-3344   	; 0x1c2 <_Z9lcd_clearv>
				lcd_home();
     ed2:	ae d9       	rcall	.-3236   	; 0x230 <_Z8lcd_homev>
				lcd_string("Display");
     ed4:	82 e4       	ldi	r24, 0x42	; 66
     ed6:	91 e0       	ldi	r25, 0x01	; 1
     ed8:	c6 d9       	rcall	.-3188   	; 0x266 <_Z10lcd_stringPKc>
				aus(2,0);
     eda:	60 e0       	ldi	r22, 0x00	; 0
     edc:	82 e0       	ldi	r24, 0x02	; 2
     ede:	27 db       	rcall	.-2482   	; 0x52e <_Z3aushh>
				lcd_string("ausschalten?");
     ee0:	8a e4       	ldi	r24, 0x4A	; 74
     ee2:	91 e0       	ldi	r25, 0x01	; 1
     ee4:	c0 d9       	rcall	.-3200   	; 0x266 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     ee6:	2c c0       	rjmp	.+88     	; 0xf40 <_Z4menuv+0x424>
				{
					if(Sekunden!=sektemp){
     ee8:	90 91 7b 01 	lds	r25, 0x017B
     eec:	80 91 72 01 	lds	r24, 0x0172
     ef0:	98 13       	cpse	r25, r24
						zeit();
     ef2:	7a da       	rcall	.-2828   	; 0x3e8 <_Z4zeitv>
     ef4:	82 99       	sbic	0x10, 2	; 16
     ef6:	14 c0       	rjmp	.+40     	; 0xf20 <_Z4menuv+0x404>
     ef8:	8f ef       	ldi	r24, 0xFF	; 255
     efa:	93 eb       	ldi	r25, 0xB3	; 179
     efc:	01 97       	sbiw	r24, 0x01	; 1
     efe:	f1 f7       	brne	.-4      	; 0xefc <_Z4menuv+0x3e0>
     f00:	00 c0       	rjmp	.+0      	; 0xf02 <_Z4menuv+0x3e6>
     f02:	00 00       	nop
     f04:	8f ef       	ldi	r24, 0xFF	; 255
     f06:	93 e2       	ldi	r25, 0x23	; 35
     f08:	01 97       	sbiw	r24, 0x01	; 1
     f0a:	f1 f7       	brne	.-4      	; 0xf08 <_Z4menuv+0x3ec>
     f0c:	00 c0       	rjmp	.+0      	; 0xf0e <_Z4menuv+0x3f2>
     f0e:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     f10:	82 99       	sbic	0x10, 2	; 16
     f12:	06 c0       	rjmp	.+12     	; 0xf20 <_Z4menuv+0x404>
					{
						displaystat=false;
     f14:	10 92 60 00 	sts	0x0060, r1
						displayoff=0;
     f18:	10 92 58 01 	sts	0x0158, r1
						PORTC &= ~(1<<PC2); //Display ausschalten
     f1c:	aa 98       	cbi	0x15, 2	; 21
						return 1;
     f1e:	22 c0       	rjmp	.+68     	; 0xf64 <_Z4menuv+0x448>
     f20:	84 99       	sbic	0x10, 4	; 16
     f22:	0e c0       	rjmp	.+28     	; 0xf40 <_Z4menuv+0x424>
     f24:	8f ef       	ldi	r24, 0xFF	; 255
     f26:	93 eb       	ldi	r25, 0xB3	; 179
     f28:	01 97       	sbiw	r24, 0x01	; 1
     f2a:	f1 f7       	brne	.-4      	; 0xf28 <_Z4menuv+0x40c>
     f2c:	00 c0       	rjmp	.+0      	; 0xf2e <_Z4menuv+0x412>
     f2e:	00 00       	nop
     f30:	8f ef       	ldi	r24, 0xFF	; 255
     f32:	93 e2       	ldi	r25, 0x23	; 35
     f34:	01 97       	sbiw	r24, 0x01	; 1
     f36:	f1 f7       	brne	.-4      	; 0xf34 <_Z4menuv+0x418>
     f38:	00 c0       	rjmp	.+0      	; 0xf3a <_Z4menuv+0x41e>
     f3a:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     f3c:	84 9b       	sbis	0x10, 4	; 16
     f3e:	12 c0       	rjmp	.+36     	; 0xf64 <_Z4menuv+0x448>
     f40:	83 99       	sbic	0x10, 3	; 16
     f42:	d2 cf       	rjmp	.-92     	; 0xee8 <_Z4menuv+0x3cc>
     f44:	8f ef       	ldi	r24, 0xFF	; 255
     f46:	93 eb       	ldi	r25, 0xB3	; 179
     f48:	01 97       	sbiw	r24, 0x01	; 1
     f4a:	f1 f7       	brne	.-4      	; 0xf48 <_Z4menuv+0x42c>
     f4c:	00 c0       	rjmp	.+0      	; 0xf4e <_Z4menuv+0x432>
     f4e:	00 00       	nop
     f50:	8f ef       	ldi	r24, 0xFF	; 255
     f52:	93 e2       	ldi	r25, 0x23	; 35
     f54:	01 97       	sbiw	r24, 0x01	; 1
     f56:	f1 f7       	brne	.-4      	; 0xf54 <_Z4menuv+0x438>
     f58:	00 c0       	rjmp	.+0      	; 0xf5a <_Z4menuv+0x43e>
     f5a:	00 00       	nop
				lcd_clear();
				lcd_home();
				lcd_string("Display");
				aus(2,0);
				lcd_string("ausschalten?");
				while (!debounce(&PIND,PD3))
     f5c:	83 99       	sbic	0x10, 3	; 16
     f5e:	c4 cf       	rjmp	.-120    	; 0xee8 <_Z4menuv+0x3cc>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     f60:	8c 2f       	mov	r24, r28
     f62:	e1 cd       	rjmp	.-1086   	; 0xb26 <_Z4menuv+0xa>
				posit=0;
				break;
		}
	}
return 0;
}
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	df 91       	pop	r29
     f68:	cf 91       	pop	r28
     f6a:	08 95       	ret

00000f6c <_Z4initv>:
}

void init(){
	//ADC
	ADMUX = (1<<REFS0);
     f6c:	80 e4       	ldi	r24, 0x40	; 64
     f6e:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
     f70:	83 e0       	ldi	r24, 0x03	; 3
     f72:	86 b9       	out	0x06, r24	; 6
	ADCSRA |= (1<<ADEN);
     f74:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1<<ADSC);
     f76:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     f78:	36 99       	sbic	0x06, 6	; 6
     f7a:	fe cf       	rjmp	.-4      	; 0xf78 <_Z4initv+0xc>
	}
	(void) ADCW;
     f7c:	84 b1       	in	r24, 0x04	; 4
     f7e:	95 b1       	in	r25, 0x05	; 5
	
	//Eingänge
	PORTD |= (1<<PD2) | (1<<PD3) | (1<<PD4);
     f80:	82 b3       	in	r24, 0x12	; 18
     f82:	8c 61       	ori	r24, 0x1C	; 28
     f84:	82 bb       	out	0x12, r24	; 18
	
	//Ausgänge
	DDRC = (1<<PC5) | (1<<PC4) | (1<<PC3) | (1<<PC2);
     f86:	8c e3       	ldi	r24, 0x3C	; 60
     f88:	84 bb       	out	0x14, r24	; 20
	
	//LCD einstellen und erste Ausgabe
	PORTC |= (1<PC2);
     f8a:	a8 9a       	sbi	0x15, 0	; 21
	lcd_init();
     f8c:	21 d9       	rcall	.-3518   	; 0x1d0 <_Z8lcd_initv>
	aus(1,4);
     f8e:	64 e0       	ldi	r22, 0x04	; 4
     f90:	81 e0       	ldi	r24, 0x01	; 1
     f92:	cd da       	rcall	.-2662   	; 0x52e <_Z3aushh>
     f94:	2f ef       	ldi	r18, 0xFF	; 255
     f96:	8f ed       	ldi	r24, 0xDF	; 223
     f98:	90 e1       	ldi	r25, 0x10	; 16
     f9a:	21 50       	subi	r18, 0x01	; 1
     f9c:	80 40       	sbci	r24, 0x00	; 0
     f9e:	90 40       	sbci	r25, 0x00	; 0
     fa0:	e1 f7       	brne	.-8      	; 0xf9a <_Z4initv+0x2e>
     fa2:	00 c0       	rjmp	.+0      	; 0xfa4 <_Z4initv+0x38>
     fa4:	00 00       	nop
	_delay_ms(1500);
	lcd_clear();
     fa6:	0d d9       	rcall	.-3558   	; 0x1c2 <_Z9lcd_clearv>
	
	//erste zeiteinstellung
	zeitsetzen();
     fa8:	9c dd       	rcall	.-1224   	; 0xae2 <_Z10zeitsetzenv>
	
	//Timer 1 Einstelungen
	TCNT1H = 0b11110001;
     faa:	81 ef       	ldi	r24, 0xF1	; 241
     fac:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     fae:	80 ef       	ldi	r24, 0xF0	; 240
     fb0:	8c bd       	out	0x2c, r24	; 44
	TIMSK = (1<<TOIE1);
     fb2:	84 e0       	ldi	r24, 0x04	; 4
     fb4:	89 bf       	out	0x39, r24	; 57
	TCCR1B = (1<<CS10) | (1<<CS12);
     fb6:	85 e0       	ldi	r24, 0x05	; 5
     fb8:	8e bd       	out	0x2e, r24	; 46
	
	//Interupts aktivieren
	sei();
     fba:	78 94       	sei
	
	//Wecker einschalten
	Wan=0;
     fbc:	10 92 73 01 	sts	0x0173, r1
     fc0:	08 95       	ret

00000fc2 <__vector_8>:
#include "einstellungen.h"
#include "zeit.h"
#include "menue.h"
#include "ausgabe.h"

ISR(TIMER1_OVF_vect){
     fc2:	1f 92       	push	r1
     fc4:	0f 92       	push	r0
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	0f 92       	push	r0
     fca:	11 24       	eor	r1, r1
     fcc:	8f 93       	push	r24
	TCNT1H = 0b11110001;
     fce:	81 ef       	ldi	r24, 0xF1	; 241
     fd0:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     fd2:	80 ef       	ldi	r24, 0xF0	; 240
     fd4:	8c bd       	out	0x2c, r24	; 44
	Sekunden++;
     fd6:	80 91 7b 01 	lds	r24, 0x017B
     fda:	8f 5f       	subi	r24, 0xFF	; 255
     fdc:	80 93 7b 01 	sts	0x017B, r24
}
     fe0:	8f 91       	pop	r24
     fe2:	0f 90       	pop	r0
     fe4:	0f be       	out	0x3f, r0	; 63
     fe6:	0f 90       	pop	r0
     fe8:	1f 90       	pop	r1
     fea:	18 95       	reti

00000fec <main>:

int main(void)
{
	init();
     fec:	bf df       	rcall	.-130    	; 0xf6c <_Z4initv>
	
	while(1)
	{
		if (Sekunden!=sektemp)
     fee:	90 91 7b 01 	lds	r25, 0x017B
     ff2:	80 91 72 01 	lds	r24, 0x0172
     ff6:	98 17       	cp	r25, r24
     ff8:	c9 f0       	breq	.+50     	; 0x102c <main+0x40>
		{
			zeit();
     ffa:	f6 d9       	rcall	.-3092   	; 0x3e8 <_Z4zeitv>
			if (displaystat)
     ffc:	80 91 60 00 	lds	r24, 0x0060
    1000:	88 23       	and	r24, r24
    1002:	59 f0       	breq	.+22     	; 0x101a <main+0x2e>
			{
				aus(1,3);
    1004:	63 e0       	ldi	r22, 0x03	; 3
    1006:	81 e0       	ldi	r24, 0x01	; 1
    1008:	92 da       	rcall	.-2780   	; 0x52e <_Z3aushh>
				aus(2,1);
    100a:	61 e0       	ldi	r22, 0x01	; 1
    100c:	82 e0       	ldi	r24, 0x02	; 2
    100e:	8f da       	rcall	.-2786   	; 0x52e <_Z3aushh>
				displayoff++;
    1010:	80 91 58 01 	lds	r24, 0x0158
    1014:	8f 5f       	subi	r24, 0xFF	; 255
    1016:	80 93 58 01 	sts	0x0158, r24
			}
			if (displayoff>=120)
    101a:	80 91 58 01 	lds	r24, 0x0158
    101e:	88 37       	cpi	r24, 0x78	; 120
    1020:	28 f0       	brcs	.+10     	; 0x102c <main+0x40>
			{
				displaystat=false;
    1022:	10 92 60 00 	sts	0x0060, r1
				displayoff=0;
    1026:	10 92 58 01 	sts	0x0158, r1
				PORTC &= ~(1<<PC2); //Display ausschalten
    102a:	aa 98       	cbi	0x15, 2	; 21
    102c:	82 99       	sbic	0x10, 2	; 16
    102e:	12 c0       	rjmp	.+36     	; 0x1054 <main+0x68>
    1030:	8f ef       	ldi	r24, 0xFF	; 255
    1032:	93 eb       	ldi	r25, 0xB3	; 179
    1034:	01 97       	sbiw	r24, 0x01	; 1
    1036:	f1 f7       	brne	.-4      	; 0x1034 <main+0x48>
    1038:	00 c0       	rjmp	.+0      	; 0x103a <main+0x4e>
    103a:	00 00       	nop
    103c:	8f ef       	ldi	r24, 0xFF	; 255
    103e:	93 e2       	ldi	r25, 0x23	; 35
    1040:	01 97       	sbiw	r24, 0x01	; 1
    1042:	f1 f7       	brne	.-4      	; 0x1040 <main+0x54>
    1044:	00 c0       	rjmp	.+0      	; 0x1046 <main+0x5a>
    1046:	00 00       	nop
			}
			
		}
		if(debounce(&PIND,2))
    1048:	82 99       	sbic	0x10, 2	; 16
    104a:	04 c0       	rjmp	.+8      	; 0x1054 <main+0x68>
		{
			Wan=0;
    104c:	10 92 73 01 	sts	0x0173, r1
			lichteinaus(0);
    1050:	80 e0       	ldi	r24, 0x00	; 0
    1052:	24 d9       	rcall	.-3512   	; 0x29c <_Z11lichteinaush>
    1054:	84 99       	sbic	0x10, 4	; 16
    1056:	25 c0       	rjmp	.+74     	; 0x10a2 <main+0xb6>
    1058:	8f ef       	ldi	r24, 0xFF	; 255
    105a:	93 eb       	ldi	r25, 0xB3	; 179
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	f1 f7       	brne	.-4      	; 0x105c <main+0x70>
    1060:	00 c0       	rjmp	.+0      	; 0x1062 <main+0x76>
    1062:	00 00       	nop
    1064:	8f ef       	ldi	r24, 0xFF	; 255
    1066:	93 e2       	ldi	r25, 0x23	; 35
    1068:	01 97       	sbiw	r24, 0x01	; 1
    106a:	f1 f7       	brne	.-4      	; 0x1068 <main+0x7c>
    106c:	00 c0       	rjmp	.+0      	; 0x106e <main+0x82>
    106e:	00 00       	nop
		}
		if (debounce(&PIND,PD4))
    1070:	84 99       	sbic	0x10, 4	; 16
    1072:	17 c0       	rjmp	.+46     	; 0x10a2 <main+0xb6>
		{
			if (!displaystat)
    1074:	80 91 60 00 	lds	r24, 0x0060
    1078:	81 11       	cpse	r24, r1
    107a:	0c c0       	rjmp	.+24     	; 0x1094 <main+0xa8>
			{
				PORTC |= (1<<PC2); //display einsschalten und neue anzeige starten
    107c:	aa 9a       	sbi	0x15, 2	; 21
				lcd_init();
    107e:	a8 d8       	rcall	.-3760   	; 0x1d0 <_Z8lcd_initv>
				aus(1,3);
    1080:	63 e0       	ldi	r22, 0x03	; 3
    1082:	81 e0       	ldi	r24, 0x01	; 1
    1084:	54 da       	rcall	.-2904   	; 0x52e <_Z3aushh>
				aus(2,1);
    1086:	61 e0       	ldi	r22, 0x01	; 1
    1088:	82 e0       	ldi	r24, 0x02	; 2
    108a:	51 da       	rcall	.-2910   	; 0x52e <_Z3aushh>
				displaystat=true;
    108c:	81 e0       	ldi	r24, 0x01	; 1
    108e:	80 93 60 00 	sts	0x0060, r24
    1092:	07 c0       	rjmp	.+14     	; 0x10a2 <main+0xb6>
			}
			else
			{
				menu();
    1094:	43 dd       	rcall	.-1402   	; 0xb1c <_Z4menuv>
				aus(1,3);
    1096:	63 e0       	ldi	r22, 0x03	; 3
    1098:	81 e0       	ldi	r24, 0x01	; 1
    109a:	49 da       	rcall	.-2926   	; 0x52e <_Z3aushh>
				aus(2,1);
    109c:	61 e0       	ldi	r22, 0x01	; 1
    109e:	82 e0       	ldi	r24, 0x02	; 2
    10a0:	46 da       	rcall	.-2932   	; 0x52e <_Z3aushh>
    10a2:	83 99       	sbic	0x10, 3	; 16
    10a4:	a4 cf       	rjmp	.-184    	; 0xfee <main+0x2>
    10a6:	8f ef       	ldi	r24, 0xFF	; 255
    10a8:	93 eb       	ldi	r25, 0xB3	; 179
    10aa:	01 97       	sbiw	r24, 0x01	; 1
    10ac:	f1 f7       	brne	.-4      	; 0x10aa <main+0xbe>
    10ae:	00 c0       	rjmp	.+0      	; 0x10b0 <main+0xc4>
    10b0:	00 00       	nop
    10b2:	8f ef       	ldi	r24, 0xFF	; 255
    10b4:	93 e2       	ldi	r25, 0x23	; 35
    10b6:	01 97       	sbiw	r24, 0x01	; 1
    10b8:	f1 f7       	brne	.-4      	; 0x10b6 <main+0xca>
    10ba:	00 c0       	rjmp	.+0      	; 0x10bc <main+0xd0>
    10bc:	00 00       	nop
			}
			
		}
		if (debounce(&PIND,PD3))
    10be:	83 99       	sbic	0x10, 3	; 16
    10c0:	96 cf       	rjmp	.-212    	; 0xfee <main+0x2>
		{
			switch (lampenstaerke)
    10c2:	80 91 61 00 	lds	r24, 0x0061
    10c6:	82 30       	cpi	r24, 0x02	; 2
    10c8:	31 f0       	breq	.+12     	; 0x10d6 <main+0xea>
    10ca:	83 30       	cpi	r24, 0x03	; 3
    10cc:	39 f0       	breq	.+14     	; 0x10dc <main+0xf0>
    10ce:	81 30       	cpi	r24, 0x01	; 1
    10d0:	39 f4       	brne	.+14     	; 0x10e0 <main+0xf4>
			{
				case 1:
					lichteinaus(1);
    10d2:	e4 d8       	rcall	.-3640   	; 0x29c <_Z11lichteinaush>
					break;
    10d4:	05 c0       	rjmp	.+10     	; 0x10e0 <main+0xf4>
					
				case 2:
					lichteinaus(5);
    10d6:	85 e0       	ldi	r24, 0x05	; 5
    10d8:	e1 d8       	rcall	.-3646   	; 0x29c <_Z11lichteinaush>
					break;
    10da:	02 c0       	rjmp	.+4      	; 0x10e0 <main+0xf4>
					
				case 3:
					lichteinaus(4);
    10dc:	84 e0       	ldi	r24, 0x04	; 4
    10de:	de d8       	rcall	.-3652   	; 0x29c <_Z11lichteinaush>
					break;
					
				default:
					break;
			}
			if ( PORTC& (1<<PC3) )
    10e0:	ab 9b       	sbis	0x15, 3	; 21
    10e2:	85 cf       	rjmp	.-246    	; 0xfee <main+0x2>
			{
				lichteinaus(0);
    10e4:	80 e0       	ldi	r24, 0x00	; 0
    10e6:	da d8       	rcall	.-3660   	; 0x29c <_Z11lichteinaush>
    10e8:	82 cf       	rjmp	.-252    	; 0xfee <main+0x2>

000010ea <__subsf3>:
    10ea:	50 58       	subi	r21, 0x80	; 128

000010ec <__addsf3>:
    10ec:	bb 27       	eor	r27, r27
    10ee:	aa 27       	eor	r26, r26
    10f0:	0e d0       	rcall	.+28     	; 0x110e <__addsf3x>
    10f2:	1c c1       	rjmp	.+568    	; 0x132c <__fp_round>
    10f4:	0d d1       	rcall	.+538    	; 0x1310 <__fp_pscA>
    10f6:	30 f0       	brcs	.+12     	; 0x1104 <__addsf3+0x18>
    10f8:	12 d1       	rcall	.+548    	; 0x131e <__fp_pscB>
    10fa:	20 f0       	brcs	.+8      	; 0x1104 <__addsf3+0x18>
    10fc:	31 f4       	brne	.+12     	; 0x110a <__addsf3+0x1e>
    10fe:	9f 3f       	cpi	r25, 0xFF	; 255
    1100:	11 f4       	brne	.+4      	; 0x1106 <__addsf3+0x1a>
    1102:	1e f4       	brtc	.+6      	; 0x110a <__addsf3+0x1e>
    1104:	02 c1       	rjmp	.+516    	; 0x130a <__fp_nan>
    1106:	0e f4       	brtc	.+2      	; 0x110a <__addsf3+0x1e>
    1108:	e0 95       	com	r30
    110a:	e7 fb       	bst	r30, 7
    110c:	f8 c0       	rjmp	.+496    	; 0x12fe <__fp_inf>

0000110e <__addsf3x>:
    110e:	e9 2f       	mov	r30, r25
    1110:	1e d1       	rcall	.+572    	; 0x134e <__fp_split3>
    1112:	80 f3       	brcs	.-32     	; 0x10f4 <__addsf3+0x8>
    1114:	ba 17       	cp	r27, r26
    1116:	62 07       	cpc	r22, r18
    1118:	73 07       	cpc	r23, r19
    111a:	84 07       	cpc	r24, r20
    111c:	95 07       	cpc	r25, r21
    111e:	18 f0       	brcs	.+6      	; 0x1126 <__addsf3x+0x18>
    1120:	71 f4       	brne	.+28     	; 0x113e <__addsf3x+0x30>
    1122:	9e f5       	brtc	.+102    	; 0x118a <__addsf3x+0x7c>
    1124:	36 c1       	rjmp	.+620    	; 0x1392 <__fp_zero>
    1126:	0e f4       	brtc	.+2      	; 0x112a <__addsf3x+0x1c>
    1128:	e0 95       	com	r30
    112a:	0b 2e       	mov	r0, r27
    112c:	ba 2f       	mov	r27, r26
    112e:	a0 2d       	mov	r26, r0
    1130:	0b 01       	movw	r0, r22
    1132:	b9 01       	movw	r22, r18
    1134:	90 01       	movw	r18, r0
    1136:	0c 01       	movw	r0, r24
    1138:	ca 01       	movw	r24, r20
    113a:	a0 01       	movw	r20, r0
    113c:	11 24       	eor	r1, r1
    113e:	ff 27       	eor	r31, r31
    1140:	59 1b       	sub	r21, r25
    1142:	99 f0       	breq	.+38     	; 0x116a <__addsf3x+0x5c>
    1144:	59 3f       	cpi	r21, 0xF9	; 249
    1146:	50 f4       	brcc	.+20     	; 0x115c <__addsf3x+0x4e>
    1148:	50 3e       	cpi	r21, 0xE0	; 224
    114a:	68 f1       	brcs	.+90     	; 0x11a6 <__addsf3x+0x98>
    114c:	1a 16       	cp	r1, r26
    114e:	f0 40       	sbci	r31, 0x00	; 0
    1150:	a2 2f       	mov	r26, r18
    1152:	23 2f       	mov	r18, r19
    1154:	34 2f       	mov	r19, r20
    1156:	44 27       	eor	r20, r20
    1158:	58 5f       	subi	r21, 0xF8	; 248
    115a:	f3 cf       	rjmp	.-26     	; 0x1142 <__addsf3x+0x34>
    115c:	46 95       	lsr	r20
    115e:	37 95       	ror	r19
    1160:	27 95       	ror	r18
    1162:	a7 95       	ror	r26
    1164:	f0 40       	sbci	r31, 0x00	; 0
    1166:	53 95       	inc	r21
    1168:	c9 f7       	brne	.-14     	; 0x115c <__addsf3x+0x4e>
    116a:	7e f4       	brtc	.+30     	; 0x118a <__addsf3x+0x7c>
    116c:	1f 16       	cp	r1, r31
    116e:	ba 0b       	sbc	r27, r26
    1170:	62 0b       	sbc	r22, r18
    1172:	73 0b       	sbc	r23, r19
    1174:	84 0b       	sbc	r24, r20
    1176:	ba f0       	brmi	.+46     	; 0x11a6 <__addsf3x+0x98>
    1178:	91 50       	subi	r25, 0x01	; 1
    117a:	a1 f0       	breq	.+40     	; 0x11a4 <__addsf3x+0x96>
    117c:	ff 0f       	add	r31, r31
    117e:	bb 1f       	adc	r27, r27
    1180:	66 1f       	adc	r22, r22
    1182:	77 1f       	adc	r23, r23
    1184:	88 1f       	adc	r24, r24
    1186:	c2 f7       	brpl	.-16     	; 0x1178 <__addsf3x+0x6a>
    1188:	0e c0       	rjmp	.+28     	; 0x11a6 <__addsf3x+0x98>
    118a:	ba 0f       	add	r27, r26
    118c:	62 1f       	adc	r22, r18
    118e:	73 1f       	adc	r23, r19
    1190:	84 1f       	adc	r24, r20
    1192:	48 f4       	brcc	.+18     	; 0x11a6 <__addsf3x+0x98>
    1194:	87 95       	ror	r24
    1196:	77 95       	ror	r23
    1198:	67 95       	ror	r22
    119a:	b7 95       	ror	r27
    119c:	f7 95       	ror	r31
    119e:	9e 3f       	cpi	r25, 0xFE	; 254
    11a0:	08 f0       	brcs	.+2      	; 0x11a4 <__addsf3x+0x96>
    11a2:	b3 cf       	rjmp	.-154    	; 0x110a <__addsf3+0x1e>
    11a4:	93 95       	inc	r25
    11a6:	88 0f       	add	r24, r24
    11a8:	08 f0       	brcs	.+2      	; 0x11ac <__addsf3x+0x9e>
    11aa:	99 27       	eor	r25, r25
    11ac:	ee 0f       	add	r30, r30
    11ae:	97 95       	ror	r25
    11b0:	87 95       	ror	r24
    11b2:	08 95       	ret

000011b4 <__divsf3>:
    11b4:	0c d0       	rcall	.+24     	; 0x11ce <__divsf3x>
    11b6:	ba c0       	rjmp	.+372    	; 0x132c <__fp_round>
    11b8:	b2 d0       	rcall	.+356    	; 0x131e <__fp_pscB>
    11ba:	40 f0       	brcs	.+16     	; 0x11cc <__divsf3+0x18>
    11bc:	a9 d0       	rcall	.+338    	; 0x1310 <__fp_pscA>
    11be:	30 f0       	brcs	.+12     	; 0x11cc <__divsf3+0x18>
    11c0:	21 f4       	brne	.+8      	; 0x11ca <__divsf3+0x16>
    11c2:	5f 3f       	cpi	r21, 0xFF	; 255
    11c4:	19 f0       	breq	.+6      	; 0x11cc <__divsf3+0x18>
    11c6:	9b c0       	rjmp	.+310    	; 0x12fe <__fp_inf>
    11c8:	51 11       	cpse	r21, r1
    11ca:	e4 c0       	rjmp	.+456    	; 0x1394 <__fp_szero>
    11cc:	9e c0       	rjmp	.+316    	; 0x130a <__fp_nan>

000011ce <__divsf3x>:
    11ce:	bf d0       	rcall	.+382    	; 0x134e <__fp_split3>
    11d0:	98 f3       	brcs	.-26     	; 0x11b8 <__divsf3+0x4>

000011d2 <__divsf3_pse>:
    11d2:	99 23       	and	r25, r25
    11d4:	c9 f3       	breq	.-14     	; 0x11c8 <__divsf3+0x14>
    11d6:	55 23       	and	r21, r21
    11d8:	b1 f3       	breq	.-20     	; 0x11c6 <__divsf3+0x12>
    11da:	95 1b       	sub	r25, r21
    11dc:	55 0b       	sbc	r21, r21
    11de:	bb 27       	eor	r27, r27
    11e0:	aa 27       	eor	r26, r26
    11e2:	62 17       	cp	r22, r18
    11e4:	73 07       	cpc	r23, r19
    11e6:	84 07       	cpc	r24, r20
    11e8:	38 f0       	brcs	.+14     	; 0x11f8 <__divsf3_pse+0x26>
    11ea:	9f 5f       	subi	r25, 0xFF	; 255
    11ec:	5f 4f       	sbci	r21, 0xFF	; 255
    11ee:	22 0f       	add	r18, r18
    11f0:	33 1f       	adc	r19, r19
    11f2:	44 1f       	adc	r20, r20
    11f4:	aa 1f       	adc	r26, r26
    11f6:	a9 f3       	breq	.-22     	; 0x11e2 <__divsf3_pse+0x10>
    11f8:	33 d0       	rcall	.+102    	; 0x1260 <__divsf3_pse+0x8e>
    11fa:	0e 2e       	mov	r0, r30
    11fc:	3a f0       	brmi	.+14     	; 0x120c <__divsf3_pse+0x3a>
    11fe:	e0 e8       	ldi	r30, 0x80	; 128
    1200:	30 d0       	rcall	.+96     	; 0x1262 <__divsf3_pse+0x90>
    1202:	91 50       	subi	r25, 0x01	; 1
    1204:	50 40       	sbci	r21, 0x00	; 0
    1206:	e6 95       	lsr	r30
    1208:	00 1c       	adc	r0, r0
    120a:	ca f7       	brpl	.-14     	; 0x11fe <__divsf3_pse+0x2c>
    120c:	29 d0       	rcall	.+82     	; 0x1260 <__divsf3_pse+0x8e>
    120e:	fe 2f       	mov	r31, r30
    1210:	27 d0       	rcall	.+78     	; 0x1260 <__divsf3_pse+0x8e>
    1212:	66 0f       	add	r22, r22
    1214:	77 1f       	adc	r23, r23
    1216:	88 1f       	adc	r24, r24
    1218:	bb 1f       	adc	r27, r27
    121a:	26 17       	cp	r18, r22
    121c:	37 07       	cpc	r19, r23
    121e:	48 07       	cpc	r20, r24
    1220:	ab 07       	cpc	r26, r27
    1222:	b0 e8       	ldi	r27, 0x80	; 128
    1224:	09 f0       	breq	.+2      	; 0x1228 <__divsf3_pse+0x56>
    1226:	bb 0b       	sbc	r27, r27
    1228:	80 2d       	mov	r24, r0
    122a:	bf 01       	movw	r22, r30
    122c:	ff 27       	eor	r31, r31
    122e:	93 58       	subi	r25, 0x83	; 131
    1230:	5f 4f       	sbci	r21, 0xFF	; 255
    1232:	2a f0       	brmi	.+10     	; 0x123e <__divsf3_pse+0x6c>
    1234:	9e 3f       	cpi	r25, 0xFE	; 254
    1236:	51 05       	cpc	r21, r1
    1238:	68 f0       	brcs	.+26     	; 0x1254 <__divsf3_pse+0x82>
    123a:	61 c0       	rjmp	.+194    	; 0x12fe <__fp_inf>
    123c:	ab c0       	rjmp	.+342    	; 0x1394 <__fp_szero>
    123e:	5f 3f       	cpi	r21, 0xFF	; 255
    1240:	ec f3       	brlt	.-6      	; 0x123c <__divsf3_pse+0x6a>
    1242:	98 3e       	cpi	r25, 0xE8	; 232
    1244:	dc f3       	brlt	.-10     	; 0x123c <__divsf3_pse+0x6a>
    1246:	86 95       	lsr	r24
    1248:	77 95       	ror	r23
    124a:	67 95       	ror	r22
    124c:	b7 95       	ror	r27
    124e:	f7 95       	ror	r31
    1250:	9f 5f       	subi	r25, 0xFF	; 255
    1252:	c9 f7       	brne	.-14     	; 0x1246 <__divsf3_pse+0x74>
    1254:	88 0f       	add	r24, r24
    1256:	91 1d       	adc	r25, r1
    1258:	96 95       	lsr	r25
    125a:	87 95       	ror	r24
    125c:	97 f9       	bld	r25, 7
    125e:	08 95       	ret
    1260:	e1 e0       	ldi	r30, 0x01	; 1
    1262:	66 0f       	add	r22, r22
    1264:	77 1f       	adc	r23, r23
    1266:	88 1f       	adc	r24, r24
    1268:	bb 1f       	adc	r27, r27
    126a:	62 17       	cp	r22, r18
    126c:	73 07       	cpc	r23, r19
    126e:	84 07       	cpc	r24, r20
    1270:	ba 07       	cpc	r27, r26
    1272:	20 f0       	brcs	.+8      	; 0x127c <__divsf3_pse+0xaa>
    1274:	62 1b       	sub	r22, r18
    1276:	73 0b       	sbc	r23, r19
    1278:	84 0b       	sbc	r24, r20
    127a:	ba 0b       	sbc	r27, r26
    127c:	ee 1f       	adc	r30, r30
    127e:	88 f7       	brcc	.-30     	; 0x1262 <__divsf3_pse+0x90>
    1280:	e0 95       	com	r30
    1282:	08 95       	ret

00001284 <__floatunsisf>:
    1284:	e8 94       	clt
    1286:	09 c0       	rjmp	.+18     	; 0x129a <__floatsisf+0x12>

00001288 <__floatsisf>:
    1288:	97 fb       	bst	r25, 7
    128a:	3e f4       	brtc	.+14     	; 0x129a <__floatsisf+0x12>
    128c:	90 95       	com	r25
    128e:	80 95       	com	r24
    1290:	70 95       	com	r23
    1292:	61 95       	neg	r22
    1294:	7f 4f       	sbci	r23, 0xFF	; 255
    1296:	8f 4f       	sbci	r24, 0xFF	; 255
    1298:	9f 4f       	sbci	r25, 0xFF	; 255
    129a:	99 23       	and	r25, r25
    129c:	a9 f0       	breq	.+42     	; 0x12c8 <__floatsisf+0x40>
    129e:	f9 2f       	mov	r31, r25
    12a0:	96 e9       	ldi	r25, 0x96	; 150
    12a2:	bb 27       	eor	r27, r27
    12a4:	93 95       	inc	r25
    12a6:	f6 95       	lsr	r31
    12a8:	87 95       	ror	r24
    12aa:	77 95       	ror	r23
    12ac:	67 95       	ror	r22
    12ae:	b7 95       	ror	r27
    12b0:	f1 11       	cpse	r31, r1
    12b2:	f8 cf       	rjmp	.-16     	; 0x12a4 <__floatsisf+0x1c>
    12b4:	fa f4       	brpl	.+62     	; 0x12f4 <__floatsisf+0x6c>
    12b6:	bb 0f       	add	r27, r27
    12b8:	11 f4       	brne	.+4      	; 0x12be <__floatsisf+0x36>
    12ba:	60 ff       	sbrs	r22, 0
    12bc:	1b c0       	rjmp	.+54     	; 0x12f4 <__floatsisf+0x6c>
    12be:	6f 5f       	subi	r22, 0xFF	; 255
    12c0:	7f 4f       	sbci	r23, 0xFF	; 255
    12c2:	8f 4f       	sbci	r24, 0xFF	; 255
    12c4:	9f 4f       	sbci	r25, 0xFF	; 255
    12c6:	16 c0       	rjmp	.+44     	; 0x12f4 <__floatsisf+0x6c>
    12c8:	88 23       	and	r24, r24
    12ca:	11 f0       	breq	.+4      	; 0x12d0 <__floatsisf+0x48>
    12cc:	96 e9       	ldi	r25, 0x96	; 150
    12ce:	11 c0       	rjmp	.+34     	; 0x12f2 <__floatsisf+0x6a>
    12d0:	77 23       	and	r23, r23
    12d2:	21 f0       	breq	.+8      	; 0x12dc <__floatsisf+0x54>
    12d4:	9e e8       	ldi	r25, 0x8E	; 142
    12d6:	87 2f       	mov	r24, r23
    12d8:	76 2f       	mov	r23, r22
    12da:	05 c0       	rjmp	.+10     	; 0x12e6 <__floatsisf+0x5e>
    12dc:	66 23       	and	r22, r22
    12de:	71 f0       	breq	.+28     	; 0x12fc <__floatsisf+0x74>
    12e0:	96 e8       	ldi	r25, 0x86	; 134
    12e2:	86 2f       	mov	r24, r22
    12e4:	70 e0       	ldi	r23, 0x00	; 0
    12e6:	60 e0       	ldi	r22, 0x00	; 0
    12e8:	2a f0       	brmi	.+10     	; 0x12f4 <__floatsisf+0x6c>
    12ea:	9a 95       	dec	r25
    12ec:	66 0f       	add	r22, r22
    12ee:	77 1f       	adc	r23, r23
    12f0:	88 1f       	adc	r24, r24
    12f2:	da f7       	brpl	.-10     	; 0x12ea <__floatsisf+0x62>
    12f4:	88 0f       	add	r24, r24
    12f6:	96 95       	lsr	r25
    12f8:	87 95       	ror	r24
    12fa:	97 f9       	bld	r25, 7
    12fc:	08 95       	ret

000012fe <__fp_inf>:
    12fe:	97 f9       	bld	r25, 7
    1300:	9f 67       	ori	r25, 0x7F	; 127
    1302:	80 e8       	ldi	r24, 0x80	; 128
    1304:	70 e0       	ldi	r23, 0x00	; 0
    1306:	60 e0       	ldi	r22, 0x00	; 0
    1308:	08 95       	ret

0000130a <__fp_nan>:
    130a:	9f ef       	ldi	r25, 0xFF	; 255
    130c:	80 ec       	ldi	r24, 0xC0	; 192
    130e:	08 95       	ret

00001310 <__fp_pscA>:
    1310:	00 24       	eor	r0, r0
    1312:	0a 94       	dec	r0
    1314:	16 16       	cp	r1, r22
    1316:	17 06       	cpc	r1, r23
    1318:	18 06       	cpc	r1, r24
    131a:	09 06       	cpc	r0, r25
    131c:	08 95       	ret

0000131e <__fp_pscB>:
    131e:	00 24       	eor	r0, r0
    1320:	0a 94       	dec	r0
    1322:	12 16       	cp	r1, r18
    1324:	13 06       	cpc	r1, r19
    1326:	14 06       	cpc	r1, r20
    1328:	05 06       	cpc	r0, r21
    132a:	08 95       	ret

0000132c <__fp_round>:
    132c:	09 2e       	mov	r0, r25
    132e:	03 94       	inc	r0
    1330:	00 0c       	add	r0, r0
    1332:	11 f4       	brne	.+4      	; 0x1338 <__fp_round+0xc>
    1334:	88 23       	and	r24, r24
    1336:	52 f0       	brmi	.+20     	; 0x134c <__fp_round+0x20>
    1338:	bb 0f       	add	r27, r27
    133a:	40 f4       	brcc	.+16     	; 0x134c <__fp_round+0x20>
    133c:	bf 2b       	or	r27, r31
    133e:	11 f4       	brne	.+4      	; 0x1344 <__fp_round+0x18>
    1340:	60 ff       	sbrs	r22, 0
    1342:	04 c0       	rjmp	.+8      	; 0x134c <__fp_round+0x20>
    1344:	6f 5f       	subi	r22, 0xFF	; 255
    1346:	7f 4f       	sbci	r23, 0xFF	; 255
    1348:	8f 4f       	sbci	r24, 0xFF	; 255
    134a:	9f 4f       	sbci	r25, 0xFF	; 255
    134c:	08 95       	ret

0000134e <__fp_split3>:
    134e:	57 fd       	sbrc	r21, 7
    1350:	90 58       	subi	r25, 0x80	; 128
    1352:	44 0f       	add	r20, r20
    1354:	55 1f       	adc	r21, r21
    1356:	59 f0       	breq	.+22     	; 0x136e <__fp_splitA+0x10>
    1358:	5f 3f       	cpi	r21, 0xFF	; 255
    135a:	71 f0       	breq	.+28     	; 0x1378 <__fp_splitA+0x1a>
    135c:	47 95       	ror	r20

0000135e <__fp_splitA>:
    135e:	88 0f       	add	r24, r24
    1360:	97 fb       	bst	r25, 7
    1362:	99 1f       	adc	r25, r25
    1364:	61 f0       	breq	.+24     	; 0x137e <__fp_splitA+0x20>
    1366:	9f 3f       	cpi	r25, 0xFF	; 255
    1368:	79 f0       	breq	.+30     	; 0x1388 <__fp_splitA+0x2a>
    136a:	87 95       	ror	r24
    136c:	08 95       	ret
    136e:	12 16       	cp	r1, r18
    1370:	13 06       	cpc	r1, r19
    1372:	14 06       	cpc	r1, r20
    1374:	55 1f       	adc	r21, r21
    1376:	f2 cf       	rjmp	.-28     	; 0x135c <__fp_split3+0xe>
    1378:	46 95       	lsr	r20
    137a:	f1 df       	rcall	.-30     	; 0x135e <__fp_splitA>
    137c:	08 c0       	rjmp	.+16     	; 0x138e <__fp_splitA+0x30>
    137e:	16 16       	cp	r1, r22
    1380:	17 06       	cpc	r1, r23
    1382:	18 06       	cpc	r1, r24
    1384:	99 1f       	adc	r25, r25
    1386:	f1 cf       	rjmp	.-30     	; 0x136a <__fp_splitA+0xc>
    1388:	86 95       	lsr	r24
    138a:	71 05       	cpc	r23, r1
    138c:	61 05       	cpc	r22, r1
    138e:	08 94       	sec
    1390:	08 95       	ret

00001392 <__fp_zero>:
    1392:	e8 94       	clt

00001394 <__fp_szero>:
    1394:	bb 27       	eor	r27, r27
    1396:	66 27       	eor	r22, r22
    1398:	77 27       	eor	r23, r23
    139a:	cb 01       	movw	r24, r22
    139c:	97 f9       	bld	r25, 7
    139e:	08 95       	ret

000013a0 <__mulsf3>:
    13a0:	0b d0       	rcall	.+22     	; 0x13b8 <__mulsf3x>
    13a2:	c4 cf       	rjmp	.-120    	; 0x132c <__fp_round>
    13a4:	b5 df       	rcall	.-150    	; 0x1310 <__fp_pscA>
    13a6:	28 f0       	brcs	.+10     	; 0x13b2 <__mulsf3+0x12>
    13a8:	ba df       	rcall	.-140    	; 0x131e <__fp_pscB>
    13aa:	18 f0       	brcs	.+6      	; 0x13b2 <__mulsf3+0x12>
    13ac:	95 23       	and	r25, r21
    13ae:	09 f0       	breq	.+2      	; 0x13b2 <__mulsf3+0x12>
    13b0:	a6 cf       	rjmp	.-180    	; 0x12fe <__fp_inf>
    13b2:	ab cf       	rjmp	.-170    	; 0x130a <__fp_nan>
    13b4:	11 24       	eor	r1, r1
    13b6:	ee cf       	rjmp	.-36     	; 0x1394 <__fp_szero>

000013b8 <__mulsf3x>:
    13b8:	ca df       	rcall	.-108    	; 0x134e <__fp_split3>
    13ba:	a0 f3       	brcs	.-24     	; 0x13a4 <__mulsf3+0x4>

000013bc <__mulsf3_pse>:
    13bc:	95 9f       	mul	r25, r21
    13be:	d1 f3       	breq	.-12     	; 0x13b4 <__mulsf3+0x14>
    13c0:	95 0f       	add	r25, r21
    13c2:	50 e0       	ldi	r21, 0x00	; 0
    13c4:	55 1f       	adc	r21, r21
    13c6:	62 9f       	mul	r22, r18
    13c8:	f0 01       	movw	r30, r0
    13ca:	72 9f       	mul	r23, r18
    13cc:	bb 27       	eor	r27, r27
    13ce:	f0 0d       	add	r31, r0
    13d0:	b1 1d       	adc	r27, r1
    13d2:	63 9f       	mul	r22, r19
    13d4:	aa 27       	eor	r26, r26
    13d6:	f0 0d       	add	r31, r0
    13d8:	b1 1d       	adc	r27, r1
    13da:	aa 1f       	adc	r26, r26
    13dc:	64 9f       	mul	r22, r20
    13de:	66 27       	eor	r22, r22
    13e0:	b0 0d       	add	r27, r0
    13e2:	a1 1d       	adc	r26, r1
    13e4:	66 1f       	adc	r22, r22
    13e6:	82 9f       	mul	r24, r18
    13e8:	22 27       	eor	r18, r18
    13ea:	b0 0d       	add	r27, r0
    13ec:	a1 1d       	adc	r26, r1
    13ee:	62 1f       	adc	r22, r18
    13f0:	73 9f       	mul	r23, r19
    13f2:	b0 0d       	add	r27, r0
    13f4:	a1 1d       	adc	r26, r1
    13f6:	62 1f       	adc	r22, r18
    13f8:	83 9f       	mul	r24, r19
    13fa:	a0 0d       	add	r26, r0
    13fc:	61 1d       	adc	r22, r1
    13fe:	22 1f       	adc	r18, r18
    1400:	74 9f       	mul	r23, r20
    1402:	33 27       	eor	r19, r19
    1404:	a0 0d       	add	r26, r0
    1406:	61 1d       	adc	r22, r1
    1408:	23 1f       	adc	r18, r19
    140a:	84 9f       	mul	r24, r20
    140c:	60 0d       	add	r22, r0
    140e:	21 1d       	adc	r18, r1
    1410:	82 2f       	mov	r24, r18
    1412:	76 2f       	mov	r23, r22
    1414:	6a 2f       	mov	r22, r26
    1416:	11 24       	eor	r1, r1
    1418:	9f 57       	subi	r25, 0x7F	; 127
    141a:	50 40       	sbci	r21, 0x00	; 0
    141c:	8a f0       	brmi	.+34     	; 0x1440 <__mulsf3_pse+0x84>
    141e:	e1 f0       	breq	.+56     	; 0x1458 <__mulsf3_pse+0x9c>
    1420:	88 23       	and	r24, r24
    1422:	4a f0       	brmi	.+18     	; 0x1436 <__mulsf3_pse+0x7a>
    1424:	ee 0f       	add	r30, r30
    1426:	ff 1f       	adc	r31, r31
    1428:	bb 1f       	adc	r27, r27
    142a:	66 1f       	adc	r22, r22
    142c:	77 1f       	adc	r23, r23
    142e:	88 1f       	adc	r24, r24
    1430:	91 50       	subi	r25, 0x01	; 1
    1432:	50 40       	sbci	r21, 0x00	; 0
    1434:	a9 f7       	brne	.-22     	; 0x1420 <__mulsf3_pse+0x64>
    1436:	9e 3f       	cpi	r25, 0xFE	; 254
    1438:	51 05       	cpc	r21, r1
    143a:	70 f0       	brcs	.+28     	; 0x1458 <__mulsf3_pse+0x9c>
    143c:	60 cf       	rjmp	.-320    	; 0x12fe <__fp_inf>
    143e:	aa cf       	rjmp	.-172    	; 0x1394 <__fp_szero>
    1440:	5f 3f       	cpi	r21, 0xFF	; 255
    1442:	ec f3       	brlt	.-6      	; 0x143e <__mulsf3_pse+0x82>
    1444:	98 3e       	cpi	r25, 0xE8	; 232
    1446:	dc f3       	brlt	.-10     	; 0x143e <__mulsf3_pse+0x82>
    1448:	86 95       	lsr	r24
    144a:	77 95       	ror	r23
    144c:	67 95       	ror	r22
    144e:	b7 95       	ror	r27
    1450:	f7 95       	ror	r31
    1452:	e7 95       	ror	r30
    1454:	9f 5f       	subi	r25, 0xFF	; 255
    1456:	c1 f7       	brne	.-16     	; 0x1448 <__mulsf3_pse+0x8c>
    1458:	fe 2b       	or	r31, r30
    145a:	88 0f       	add	r24, r24
    145c:	91 1d       	adc	r25, r1
    145e:	96 95       	lsr	r25
    1460:	87 95       	ror	r24
    1462:	97 f9       	bld	r25, 7
    1464:	08 95       	ret

00001466 <dtostrf>:
    1466:	ef 92       	push	r14
    1468:	0f 93       	push	r16
    146a:	1f 93       	push	r17
    146c:	cf 93       	push	r28
    146e:	c0 2f       	mov	r28, r16
    1470:	47 ff       	sbrs	r20, 7
    1472:	02 c0       	rjmp	.+4      	; 0x1478 <dtostrf+0x12>
    1474:	34 e1       	ldi	r19, 0x14	; 20
    1476:	01 c0       	rjmp	.+2      	; 0x147a <dtostrf+0x14>
    1478:	34 e0       	ldi	r19, 0x04	; 4
    147a:	e4 2f       	mov	r30, r20
    147c:	ff 27       	eor	r31, r31
    147e:	e7 fd       	sbrc	r30, 7
    1480:	f0 95       	com	r31
    1482:	f7 ff       	sbrs	r31, 7
    1484:	03 c0       	rjmp	.+6      	; 0x148c <dtostrf+0x26>
    1486:	f1 95       	neg	r31
    1488:	e1 95       	neg	r30
    148a:	f1 09       	sbc	r31, r1
    148c:	e3 2e       	mov	r14, r19
    148e:	02 2f       	mov	r16, r18
    1490:	2e 2f       	mov	r18, r30
    1492:	4c 2f       	mov	r20, r28
    1494:	51 2f       	mov	r21, r17
    1496:	26 d0       	rcall	.+76     	; 0x14e4 <dtoa_prf>
    1498:	8c 2f       	mov	r24, r28
    149a:	91 2f       	mov	r25, r17
    149c:	cf 91       	pop	r28
    149e:	1f 91       	pop	r17
    14a0:	0f 91       	pop	r16
    14a2:	ef 90       	pop	r14
    14a4:	08 95       	ret

000014a6 <itoa>:
    14a6:	fb 01       	movw	r30, r22
    14a8:	9f 01       	movw	r18, r30
    14aa:	e8 94       	clt
    14ac:	42 30       	cpi	r20, 0x02	; 2
    14ae:	bc f0       	brlt	.+46     	; 0x14de <itoa+0x38>
    14b0:	45 32       	cpi	r20, 0x25	; 37
    14b2:	ac f4       	brge	.+42     	; 0x14de <itoa+0x38>
    14b4:	4a 30       	cpi	r20, 0x0A	; 10
    14b6:	29 f4       	brne	.+10     	; 0x14c2 <itoa+0x1c>
    14b8:	97 fb       	bst	r25, 7
    14ba:	1e f4       	brtc	.+6      	; 0x14c2 <itoa+0x1c>
    14bc:	90 95       	com	r25
    14be:	81 95       	neg	r24
    14c0:	9f 4f       	sbci	r25, 0xFF	; 255
    14c2:	64 2f       	mov	r22, r20
    14c4:	77 27       	eor	r23, r23
    14c6:	72 d2       	rcall	.+1252   	; 0x19ac <__udivmodhi4>
    14c8:	80 5d       	subi	r24, 0xD0	; 208
    14ca:	8a 33       	cpi	r24, 0x3A	; 58
    14cc:	0c f0       	brlt	.+2      	; 0x14d0 <itoa+0x2a>
    14ce:	89 5d       	subi	r24, 0xD9	; 217
    14d0:	81 93       	st	Z+, r24
    14d2:	cb 01       	movw	r24, r22
    14d4:	00 97       	sbiw	r24, 0x00	; 0
    14d6:	a9 f7       	brne	.-22     	; 0x14c2 <itoa+0x1c>
    14d8:	16 f4       	brtc	.+4      	; 0x14de <itoa+0x38>
    14da:	5d e2       	ldi	r21, 0x2D	; 45
    14dc:	51 93       	st	Z+, r21
    14de:	10 82       	st	Z, r1
    14e0:	c9 01       	movw	r24, r18
    14e2:	54 c2       	rjmp	.+1192   	; 0x198c <strrev>

000014e4 <dtoa_prf>:
    14e4:	6f 92       	push	r6
    14e6:	7f 92       	push	r7
    14e8:	9f 92       	push	r9
    14ea:	af 92       	push	r10
    14ec:	bf 92       	push	r11
    14ee:	cf 92       	push	r12
    14f0:	df 92       	push	r13
    14f2:	ef 92       	push	r14
    14f4:	ff 92       	push	r15
    14f6:	0f 93       	push	r16
    14f8:	1f 93       	push	r17
    14fa:	cf 93       	push	r28
    14fc:	df 93       	push	r29
    14fe:	cd b7       	in	r28, 0x3d	; 61
    1500:	de b7       	in	r29, 0x3e	; 62
    1502:	29 97       	sbiw	r28, 0x09	; 9
    1504:	0f b6       	in	r0, 0x3f	; 63
    1506:	f8 94       	cli
    1508:	de bf       	out	0x3e, r29	; 62
    150a:	0f be       	out	0x3f, r0	; 63
    150c:	cd bf       	out	0x3d, r28	; 61
    150e:	6a 01       	movw	r12, r20
    1510:	b2 2e       	mov	r11, r18
    1512:	10 2f       	mov	r17, r16
    1514:	0c 33       	cpi	r16, 0x3C	; 60
    1516:	18 f4       	brcc	.+6      	; 0x151e <dtoa_prf+0x3a>
    1518:	f0 2e       	mov	r15, r16
    151a:	f3 94       	inc	r15
    151c:	02 c0       	rjmp	.+4      	; 0x1522 <dtoa_prf+0x3e>
    151e:	5c e3       	ldi	r21, 0x3C	; 60
    1520:	f5 2e       	mov	r15, r21
    1522:	0f 2d       	mov	r16, r15
    1524:	27 e0       	ldi	r18, 0x07	; 7
    1526:	ae 01       	movw	r20, r28
    1528:	4f 5f       	subi	r20, 0xFF	; 255
    152a:	5f 4f       	sbci	r21, 0xFF	; 255
    152c:	57 d1       	rcall	.+686    	; 0x17dc <__ftoa_engine>
    152e:	79 81       	ldd	r23, Y+1	; 0x01
    1530:	27 2f       	mov	r18, r23
    1532:	29 70       	andi	r18, 0x09	; 9
    1534:	21 30       	cpi	r18, 0x01	; 1
    1536:	31 f0       	breq	.+12     	; 0x1544 <dtoa_prf+0x60>
    1538:	e1 fc       	sbrc	r14, 1
    153a:	06 c0       	rjmp	.+12     	; 0x1548 <dtoa_prf+0x64>
    153c:	e0 fe       	sbrs	r14, 0
    153e:	06 c0       	rjmp	.+12     	; 0x154c <dtoa_prf+0x68>
    1540:	60 e2       	ldi	r22, 0x20	; 32
    1542:	05 c0       	rjmp	.+10     	; 0x154e <dtoa_prf+0x6a>
    1544:	6d e2       	ldi	r22, 0x2D	; 45
    1546:	03 c0       	rjmp	.+6      	; 0x154e <dtoa_prf+0x6a>
    1548:	6b e2       	ldi	r22, 0x2B	; 43
    154a:	01 c0       	rjmp	.+2      	; 0x154e <dtoa_prf+0x6a>
    154c:	60 e0       	ldi	r22, 0x00	; 0
    154e:	73 ff       	sbrs	r23, 3
    1550:	3d c0       	rjmp	.+122    	; 0x15cc <dtoa_prf+0xe8>
    1552:	66 23       	and	r22, r22
    1554:	11 f0       	breq	.+4      	; 0x155a <dtoa_prf+0x76>
    1556:	84 e0       	ldi	r24, 0x04	; 4
    1558:	01 c0       	rjmp	.+2      	; 0x155c <dtoa_prf+0x78>
    155a:	83 e0       	ldi	r24, 0x03	; 3
    155c:	8b 15       	cp	r24, r11
    155e:	10 f4       	brcc	.+4      	; 0x1564 <dtoa_prf+0x80>
    1560:	b8 1a       	sub	r11, r24
    1562:	01 c0       	rjmp	.+2      	; 0x1566 <dtoa_prf+0x82>
    1564:	b1 2c       	mov	r11, r1
    1566:	e4 fc       	sbrc	r14, 4
    1568:	0b c0       	rjmp	.+22     	; 0x1580 <dtoa_prf+0x9c>
    156a:	8b 2d       	mov	r24, r11
    156c:	f6 01       	movw	r30, r12
    156e:	90 e2       	ldi	r25, 0x20	; 32
    1570:	02 c0       	rjmp	.+4      	; 0x1576 <dtoa_prf+0x92>
    1572:	91 93       	st	Z+, r25
    1574:	81 50       	subi	r24, 0x01	; 1
    1576:	81 11       	cpse	r24, r1
    1578:	fc cf       	rjmp	.-8      	; 0x1572 <dtoa_prf+0x8e>
    157a:	cb 0c       	add	r12, r11
    157c:	d1 1c       	adc	r13, r1
    157e:	b1 2c       	mov	r11, r1
    1580:	66 23       	and	r22, r22
    1582:	19 f0       	breq	.+6      	; 0x158a <dtoa_prf+0xa6>
    1584:	d6 01       	movw	r26, r12
    1586:	6d 93       	st	X+, r22
    1588:	6d 01       	movw	r12, r26
    158a:	e2 fe       	sbrs	r14, 2
    158c:	0a c0       	rjmp	.+20     	; 0x15a2 <dtoa_prf+0xbe>
    158e:	8e e4       	ldi	r24, 0x4E	; 78
    1590:	f6 01       	movw	r30, r12
    1592:	80 83       	st	Z, r24
    1594:	91 e4       	ldi	r25, 0x41	; 65
    1596:	91 83       	std	Z+1, r25	; 0x01
    1598:	82 83       	std	Z+2, r24	; 0x02
    159a:	f3 e0       	ldi	r31, 0x03	; 3
    159c:	cf 0e       	add	r12, r31
    159e:	d1 1c       	adc	r13, r1
    15a0:	0c c0       	rjmp	.+24     	; 0x15ba <dtoa_prf+0xd6>
    15a2:	8e e6       	ldi	r24, 0x6E	; 110
    15a4:	d6 01       	movw	r26, r12
    15a6:	8c 93       	st	X, r24
    15a8:	91 e6       	ldi	r25, 0x61	; 97
    15aa:	11 96       	adiw	r26, 0x01	; 1
    15ac:	9c 93       	st	X, r25
    15ae:	11 97       	sbiw	r26, 0x01	; 1
    15b0:	12 96       	adiw	r26, 0x02	; 2
    15b2:	8c 93       	st	X, r24
    15b4:	b3 e0       	ldi	r27, 0x03	; 3
    15b6:	cb 0e       	add	r12, r27
    15b8:	d1 1c       	adc	r13, r1
    15ba:	8b 2d       	mov	r24, r11
    15bc:	f6 01       	movw	r30, r12
    15be:	90 e2       	ldi	r25, 0x20	; 32
    15c0:	02 c0       	rjmp	.+4      	; 0x15c6 <dtoa_prf+0xe2>
    15c2:	91 93       	st	Z+, r25
    15c4:	81 50       	subi	r24, 0x01	; 1
    15c6:	81 11       	cpse	r24, r1
    15c8:	fc cf       	rjmp	.-8      	; 0x15c2 <dtoa_prf+0xde>
    15ca:	40 c0       	rjmp	.+128    	; 0x164c <dtoa_prf+0x168>
    15cc:	72 ff       	sbrs	r23, 2
    15ce:	45 c0       	rjmp	.+138    	; 0x165a <dtoa_prf+0x176>
    15d0:	66 23       	and	r22, r22
    15d2:	11 f0       	breq	.+4      	; 0x15d8 <dtoa_prf+0xf4>
    15d4:	84 e0       	ldi	r24, 0x04	; 4
    15d6:	01 c0       	rjmp	.+2      	; 0x15da <dtoa_prf+0xf6>
    15d8:	83 e0       	ldi	r24, 0x03	; 3
    15da:	8b 15       	cp	r24, r11
    15dc:	10 f4       	brcc	.+4      	; 0x15e2 <dtoa_prf+0xfe>
    15de:	b8 1a       	sub	r11, r24
    15e0:	01 c0       	rjmp	.+2      	; 0x15e4 <dtoa_prf+0x100>
    15e2:	b1 2c       	mov	r11, r1
    15e4:	e4 fc       	sbrc	r14, 4
    15e6:	0b c0       	rjmp	.+22     	; 0x15fe <dtoa_prf+0x11a>
    15e8:	8b 2d       	mov	r24, r11
    15ea:	f6 01       	movw	r30, r12
    15ec:	90 e2       	ldi	r25, 0x20	; 32
    15ee:	02 c0       	rjmp	.+4      	; 0x15f4 <dtoa_prf+0x110>
    15f0:	91 93       	st	Z+, r25
    15f2:	81 50       	subi	r24, 0x01	; 1
    15f4:	81 11       	cpse	r24, r1
    15f6:	fc cf       	rjmp	.-8      	; 0x15f0 <dtoa_prf+0x10c>
    15f8:	cb 0c       	add	r12, r11
    15fa:	d1 1c       	adc	r13, r1
    15fc:	b1 2c       	mov	r11, r1
    15fe:	66 23       	and	r22, r22
    1600:	19 f0       	breq	.+6      	; 0x1608 <dtoa_prf+0x124>
    1602:	f6 01       	movw	r30, r12
    1604:	61 93       	st	Z+, r22
    1606:	6f 01       	movw	r12, r30
    1608:	e2 fe       	sbrs	r14, 2
    160a:	0e c0       	rjmp	.+28     	; 0x1628 <dtoa_prf+0x144>
    160c:	89 e4       	ldi	r24, 0x49	; 73
    160e:	d6 01       	movw	r26, r12
    1610:	8c 93       	st	X, r24
    1612:	8e e4       	ldi	r24, 0x4E	; 78
    1614:	11 96       	adiw	r26, 0x01	; 1
    1616:	8c 93       	st	X, r24
    1618:	11 97       	sbiw	r26, 0x01	; 1
    161a:	86 e4       	ldi	r24, 0x46	; 70
    161c:	12 96       	adiw	r26, 0x02	; 2
    161e:	8c 93       	st	X, r24
    1620:	b3 e0       	ldi	r27, 0x03	; 3
    1622:	cb 0e       	add	r12, r27
    1624:	d1 1c       	adc	r13, r1
    1626:	0a c0       	rjmp	.+20     	; 0x163c <dtoa_prf+0x158>
    1628:	89 e6       	ldi	r24, 0x69	; 105
    162a:	f6 01       	movw	r30, r12
    162c:	80 83       	st	Z, r24
    162e:	8e e6       	ldi	r24, 0x6E	; 110
    1630:	81 83       	std	Z+1, r24	; 0x01
    1632:	86 e6       	ldi	r24, 0x66	; 102
    1634:	82 83       	std	Z+2, r24	; 0x02
    1636:	f3 e0       	ldi	r31, 0x03	; 3
    1638:	cf 0e       	add	r12, r31
    163a:	d1 1c       	adc	r13, r1
    163c:	8b 2d       	mov	r24, r11
    163e:	f6 01       	movw	r30, r12
    1640:	90 e2       	ldi	r25, 0x20	; 32
    1642:	02 c0       	rjmp	.+4      	; 0x1648 <dtoa_prf+0x164>
    1644:	91 93       	st	Z+, r25
    1646:	81 50       	subi	r24, 0x01	; 1
    1648:	81 11       	cpse	r24, r1
    164a:	fc cf       	rjmp	.-8      	; 0x1644 <dtoa_prf+0x160>
    164c:	f6 01       	movw	r30, r12
    164e:	eb 0d       	add	r30, r11
    1650:	f1 1d       	adc	r31, r1
    1652:	10 82       	st	Z, r1
    1654:	2e ef       	ldi	r18, 0xFE	; 254
    1656:	3f ef       	ldi	r19, 0xFF	; 255
    1658:	ac c0       	rjmp	.+344    	; 0x17b2 <dtoa_prf+0x2ce>
    165a:	a1 e0       	ldi	r26, 0x01	; 1
    165c:	61 11       	cpse	r22, r1
    165e:	01 c0       	rjmp	.+2      	; 0x1662 <dtoa_prf+0x17e>
    1660:	a0 e0       	ldi	r26, 0x00	; 0
    1662:	4a 2f       	mov	r20, r26
    1664:	50 e0       	ldi	r21, 0x00	; 0
    1666:	18 16       	cp	r1, r24
    1668:	19 06       	cpc	r1, r25
    166a:	24 f4       	brge	.+8      	; 0x1674 <dtoa_prf+0x190>
    166c:	9c 01       	movw	r18, r24
    166e:	2f 5f       	subi	r18, 0xFF	; 255
    1670:	3f 4f       	sbci	r19, 0xFF	; 255
    1672:	02 c0       	rjmp	.+4      	; 0x1678 <dtoa_prf+0x194>
    1674:	21 e0       	ldi	r18, 0x01	; 1
    1676:	30 e0       	ldi	r19, 0x00	; 0
    1678:	24 0f       	add	r18, r20
    167a:	35 1f       	adc	r19, r21
    167c:	11 23       	and	r17, r17
    167e:	29 f0       	breq	.+10     	; 0x168a <dtoa_prf+0x1a6>
    1680:	41 2f       	mov	r20, r17
    1682:	50 e0       	ldi	r21, 0x00	; 0
    1684:	4f 5f       	subi	r20, 0xFF	; 255
    1686:	5f 4f       	sbci	r21, 0xFF	; 255
    1688:	02 c0       	rjmp	.+4      	; 0x168e <dtoa_prf+0x1aa>
    168a:	40 e0       	ldi	r20, 0x00	; 0
    168c:	50 e0       	ldi	r21, 0x00	; 0
    168e:	42 0f       	add	r20, r18
    1690:	53 1f       	adc	r21, r19
    1692:	2b 2d       	mov	r18, r11
    1694:	30 e0       	ldi	r19, 0x00	; 0
    1696:	42 17       	cp	r20, r18
    1698:	53 07       	cpc	r21, r19
    169a:	14 f4       	brge	.+4      	; 0x16a0 <dtoa_prf+0x1bc>
    169c:	b4 1a       	sub	r11, r20
    169e:	01 c0       	rjmp	.+2      	; 0x16a2 <dtoa_prf+0x1be>
    16a0:	b1 2c       	mov	r11, r1
    16a2:	3e 2d       	mov	r19, r14
    16a4:	30 71       	andi	r19, 0x10	; 16
    16a6:	e4 fc       	sbrc	r14, 4
    16a8:	0d c0       	rjmp	.+26     	; 0x16c4 <dtoa_prf+0x1e0>
    16aa:	e3 fc       	sbrc	r14, 3
    16ac:	0b c0       	rjmp	.+22     	; 0x16c4 <dtoa_prf+0x1e0>
    16ae:	2b 2d       	mov	r18, r11
    16b0:	f6 01       	movw	r30, r12
    16b2:	40 e2       	ldi	r20, 0x20	; 32
    16b4:	02 c0       	rjmp	.+4      	; 0x16ba <dtoa_prf+0x1d6>
    16b6:	41 93       	st	Z+, r20
    16b8:	21 50       	subi	r18, 0x01	; 1
    16ba:	21 11       	cpse	r18, r1
    16bc:	fc cf       	rjmp	.-8      	; 0x16b6 <dtoa_prf+0x1d2>
    16be:	cb 0c       	add	r12, r11
    16c0:	d1 1c       	adc	r13, r1
    16c2:	b1 2c       	mov	r11, r1
    16c4:	aa 23       	and	r26, r26
    16c6:	19 f0       	breq	.+6      	; 0x16ce <dtoa_prf+0x1ea>
    16c8:	d6 01       	movw	r26, r12
    16ca:	6d 93       	st	X+, r22
    16cc:	6d 01       	movw	r12, r26
    16ce:	31 11       	cpse	r19, r1
    16d0:	0b c0       	rjmp	.+22     	; 0x16e8 <dtoa_prf+0x204>
    16d2:	2b 2d       	mov	r18, r11
    16d4:	f6 01       	movw	r30, r12
    16d6:	30 e3       	ldi	r19, 0x30	; 48
    16d8:	02 c0       	rjmp	.+4      	; 0x16de <dtoa_prf+0x1fa>
    16da:	31 93       	st	Z+, r19
    16dc:	21 50       	subi	r18, 0x01	; 1
    16de:	21 11       	cpse	r18, r1
    16e0:	fc cf       	rjmp	.-8      	; 0x16da <dtoa_prf+0x1f6>
    16e2:	cb 0c       	add	r12, r11
    16e4:	d1 1c       	adc	r13, r1
    16e6:	b1 2c       	mov	r11, r1
    16e8:	f8 0e       	add	r15, r24
    16ea:	0a 81       	ldd	r16, Y+2	; 0x02
    16ec:	40 e1       	ldi	r20, 0x10	; 16
    16ee:	a4 2e       	mov	r10, r20
    16f0:	a7 22       	and	r10, r23
    16f2:	74 ff       	sbrs	r23, 4
    16f4:	03 c0       	rjmp	.+6      	; 0x16fc <dtoa_prf+0x218>
    16f6:	01 33       	cpi	r16, 0x31	; 49
    16f8:	09 f4       	brne	.+2      	; 0x16fc <dtoa_prf+0x218>
    16fa:	fa 94       	dec	r15
    16fc:	1f 14       	cp	r1, r15
    16fe:	2c f4       	brge	.+10     	; 0x170a <dtoa_prf+0x226>
    1700:	2f 2d       	mov	r18, r15
    1702:	29 30       	cpi	r18, 0x09	; 9
    1704:	18 f0       	brcs	.+6      	; 0x170c <dtoa_prf+0x228>
    1706:	28 e0       	ldi	r18, 0x08	; 8
    1708:	01 c0       	rjmp	.+2      	; 0x170c <dtoa_prf+0x228>
    170a:	21 e0       	ldi	r18, 0x01	; 1
    170c:	ac 01       	movw	r20, r24
    170e:	97 ff       	sbrs	r25, 7
    1710:	02 c0       	rjmp	.+4      	; 0x1716 <dtoa_prf+0x232>
    1712:	40 e0       	ldi	r20, 0x00	; 0
    1714:	50 e0       	ldi	r21, 0x00	; 0
    1716:	60 e0       	ldi	r22, 0x00	; 0
    1718:	70 e0       	ldi	r23, 0x00	; 0
    171a:	3e e2       	ldi	r19, 0x2E	; 46
    171c:	93 2e       	mov	r9, r19
    171e:	fc 01       	movw	r30, r24
    1720:	e2 1b       	sub	r30, r18
    1722:	f1 09       	sbc	r31, r1
    1724:	9f 01       	movw	r18, r30
    1726:	dc 01       	movw	r26, r24
    1728:	a4 1b       	sub	r26, r20
    172a:	b5 0b       	sbc	r27, r21
    172c:	fe 01       	movw	r30, r28
    172e:	31 96       	adiw	r30, 0x01	; 1
    1730:	ea 0f       	add	r30, r26
    1732:	fb 1f       	adc	r31, r27
    1734:	a1 2f       	mov	r26, r17
    1736:	b0 e0       	ldi	r27, 0x00	; 0
    1738:	66 24       	eor	r6, r6
    173a:	77 24       	eor	r7, r7
    173c:	6a 1a       	sub	r6, r26
    173e:	7b 0a       	sbc	r7, r27
    1740:	4f 3f       	cpi	r20, 0xFF	; 255
    1742:	1f ef       	ldi	r17, 0xFF	; 255
    1744:	51 07       	cpc	r21, r17
    1746:	19 f4       	brne	.+6      	; 0x174e <dtoa_prf+0x26a>
    1748:	d6 01       	movw	r26, r12
    174a:	9d 92       	st	X+, r9
    174c:	6d 01       	movw	r12, r26
    174e:	84 17       	cp	r24, r20
    1750:	95 07       	cpc	r25, r21
    1752:	54 f0       	brlt	.+20     	; 0x1768 <dtoa_prf+0x284>
    1754:	24 17       	cp	r18, r20
    1756:	35 07       	cpc	r19, r21
    1758:	3c f4       	brge	.+14     	; 0x1768 <dtoa_prf+0x284>
    175a:	7f 01       	movw	r14, r30
    175c:	e6 0e       	add	r14, r22
    175e:	f7 1e       	adc	r15, r23
    1760:	d7 01       	movw	r26, r14
    1762:	11 96       	adiw	r26, 0x01	; 1
    1764:	1c 91       	ld	r17, X
    1766:	01 c0       	rjmp	.+2      	; 0x176a <dtoa_prf+0x286>
    1768:	10 e3       	ldi	r17, 0x30	; 48
    176a:	41 50       	subi	r20, 0x01	; 1
    176c:	51 09       	sbc	r21, r1
    176e:	6f 5f       	subi	r22, 0xFF	; 255
    1770:	7f 4f       	sbci	r23, 0xFF	; 255
    1772:	46 15       	cp	r20, r6
    1774:	57 05       	cpc	r21, r7
    1776:	24 f0       	brlt	.+8      	; 0x1780 <dtoa_prf+0x29c>
    1778:	d6 01       	movw	r26, r12
    177a:	1d 93       	st	X+, r17
    177c:	6d 01       	movw	r12, r26
    177e:	e0 cf       	rjmp	.-64     	; 0x1740 <dtoa_prf+0x25c>
    1780:	48 17       	cp	r20, r24
    1782:	59 07       	cpc	r21, r25
    1784:	39 f4       	brne	.+14     	; 0x1794 <dtoa_prf+0x2b0>
    1786:	06 33       	cpi	r16, 0x36	; 54
    1788:	20 f4       	brcc	.+8      	; 0x1792 <dtoa_prf+0x2ae>
    178a:	05 33       	cpi	r16, 0x35	; 53
    178c:	19 f4       	brne	.+6      	; 0x1794 <dtoa_prf+0x2b0>
    178e:	a1 10       	cpse	r10, r1
    1790:	01 c0       	rjmp	.+2      	; 0x1794 <dtoa_prf+0x2b0>
    1792:	11 e3       	ldi	r17, 0x31	; 49
    1794:	f6 01       	movw	r30, r12
    1796:	11 93       	st	Z+, r17
    1798:	8b 2d       	mov	r24, r11
    179a:	df 01       	movw	r26, r30
    179c:	90 e2       	ldi	r25, 0x20	; 32
    179e:	02 c0       	rjmp	.+4      	; 0x17a4 <dtoa_prf+0x2c0>
    17a0:	9d 93       	st	X+, r25
    17a2:	81 50       	subi	r24, 0x01	; 1
    17a4:	81 11       	cpse	r24, r1
    17a6:	fc cf       	rjmp	.-8      	; 0x17a0 <dtoa_prf+0x2bc>
    17a8:	eb 0d       	add	r30, r11
    17aa:	f1 1d       	adc	r31, r1
    17ac:	10 82       	st	Z, r1
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	c9 01       	movw	r24, r18
    17b4:	29 96       	adiw	r28, 0x09	; 9
    17b6:	0f b6       	in	r0, 0x3f	; 63
    17b8:	f8 94       	cli
    17ba:	de bf       	out	0x3e, r29	; 62
    17bc:	0f be       	out	0x3f, r0	; 63
    17be:	cd bf       	out	0x3d, r28	; 61
    17c0:	df 91       	pop	r29
    17c2:	cf 91       	pop	r28
    17c4:	1f 91       	pop	r17
    17c6:	0f 91       	pop	r16
    17c8:	ff 90       	pop	r15
    17ca:	ef 90       	pop	r14
    17cc:	df 90       	pop	r13
    17ce:	cf 90       	pop	r12
    17d0:	bf 90       	pop	r11
    17d2:	af 90       	pop	r10
    17d4:	9f 90       	pop	r9
    17d6:	7f 90       	pop	r7
    17d8:	6f 90       	pop	r6
    17da:	08 95       	ret

000017dc <__ftoa_engine>:
    17dc:	28 30       	cpi	r18, 0x08	; 8
    17de:	08 f0       	brcs	.+2      	; 0x17e2 <__ftoa_engine+0x6>
    17e0:	27 e0       	ldi	r18, 0x07	; 7
    17e2:	33 27       	eor	r19, r19
    17e4:	da 01       	movw	r26, r20
    17e6:	99 0f       	add	r25, r25
    17e8:	31 1d       	adc	r19, r1
    17ea:	87 fd       	sbrc	r24, 7
    17ec:	91 60       	ori	r25, 0x01	; 1
    17ee:	00 96       	adiw	r24, 0x00	; 0
    17f0:	61 05       	cpc	r22, r1
    17f2:	71 05       	cpc	r23, r1
    17f4:	39 f4       	brne	.+14     	; 0x1804 <__ftoa_engine+0x28>
    17f6:	32 60       	ori	r19, 0x02	; 2
    17f8:	2e 5f       	subi	r18, 0xFE	; 254
    17fa:	3d 93       	st	X+, r19
    17fc:	30 e3       	ldi	r19, 0x30	; 48
    17fe:	2a 95       	dec	r18
    1800:	e1 f7       	brne	.-8      	; 0x17fa <__ftoa_engine+0x1e>
    1802:	08 95       	ret
    1804:	9f 3f       	cpi	r25, 0xFF	; 255
    1806:	30 f0       	brcs	.+12     	; 0x1814 <__ftoa_engine+0x38>
    1808:	80 38       	cpi	r24, 0x80	; 128
    180a:	71 05       	cpc	r23, r1
    180c:	61 05       	cpc	r22, r1
    180e:	09 f0       	breq	.+2      	; 0x1812 <__ftoa_engine+0x36>
    1810:	3c 5f       	subi	r19, 0xFC	; 252
    1812:	3c 5f       	subi	r19, 0xFC	; 252
    1814:	3d 93       	st	X+, r19
    1816:	91 30       	cpi	r25, 0x01	; 1
    1818:	08 f0       	brcs	.+2      	; 0x181c <__ftoa_engine+0x40>
    181a:	80 68       	ori	r24, 0x80	; 128
    181c:	91 1d       	adc	r25, r1
    181e:	df 93       	push	r29
    1820:	cf 93       	push	r28
    1822:	1f 93       	push	r17
    1824:	0f 93       	push	r16
    1826:	ff 92       	push	r15
    1828:	ef 92       	push	r14
    182a:	19 2f       	mov	r17, r25
    182c:	98 7f       	andi	r25, 0xF8	; 248
    182e:	96 95       	lsr	r25
    1830:	e9 2f       	mov	r30, r25
    1832:	96 95       	lsr	r25
    1834:	96 95       	lsr	r25
    1836:	e9 0f       	add	r30, r25
    1838:	ff 27       	eor	r31, r31
    183a:	e0 57       	subi	r30, 0x70	; 112
    183c:	ff 4f       	sbci	r31, 0xFF	; 255
    183e:	99 27       	eor	r25, r25
    1840:	33 27       	eor	r19, r19
    1842:	ee 24       	eor	r14, r14
    1844:	ff 24       	eor	r15, r15
    1846:	a7 01       	movw	r20, r14
    1848:	e7 01       	movw	r28, r14
    184a:	05 90       	lpm	r0, Z+
    184c:	08 94       	sec
    184e:	07 94       	ror	r0
    1850:	28 f4       	brcc	.+10     	; 0x185c <__ftoa_engine+0x80>
    1852:	36 0f       	add	r19, r22
    1854:	e7 1e       	adc	r14, r23
    1856:	f8 1e       	adc	r15, r24
    1858:	49 1f       	adc	r20, r25
    185a:	51 1d       	adc	r21, r1
    185c:	66 0f       	add	r22, r22
    185e:	77 1f       	adc	r23, r23
    1860:	88 1f       	adc	r24, r24
    1862:	99 1f       	adc	r25, r25
    1864:	06 94       	lsr	r0
    1866:	a1 f7       	brne	.-24     	; 0x1850 <__ftoa_engine+0x74>
    1868:	05 90       	lpm	r0, Z+
    186a:	07 94       	ror	r0
    186c:	28 f4       	brcc	.+10     	; 0x1878 <__ftoa_engine+0x9c>
    186e:	e7 0e       	add	r14, r23
    1870:	f8 1e       	adc	r15, r24
    1872:	49 1f       	adc	r20, r25
    1874:	56 1f       	adc	r21, r22
    1876:	c1 1d       	adc	r28, r1
    1878:	77 0f       	add	r23, r23
    187a:	88 1f       	adc	r24, r24
    187c:	99 1f       	adc	r25, r25
    187e:	66 1f       	adc	r22, r22
    1880:	06 94       	lsr	r0
    1882:	a1 f7       	brne	.-24     	; 0x186c <__ftoa_engine+0x90>
    1884:	05 90       	lpm	r0, Z+
    1886:	07 94       	ror	r0
    1888:	28 f4       	brcc	.+10     	; 0x1894 <__ftoa_engine+0xb8>
    188a:	f8 0e       	add	r15, r24
    188c:	49 1f       	adc	r20, r25
    188e:	56 1f       	adc	r21, r22
    1890:	c7 1f       	adc	r28, r23
    1892:	d1 1d       	adc	r29, r1
    1894:	88 0f       	add	r24, r24
    1896:	99 1f       	adc	r25, r25
    1898:	66 1f       	adc	r22, r22
    189a:	77 1f       	adc	r23, r23
    189c:	06 94       	lsr	r0
    189e:	a1 f7       	brne	.-24     	; 0x1888 <__ftoa_engine+0xac>
    18a0:	05 90       	lpm	r0, Z+
    18a2:	07 94       	ror	r0
    18a4:	20 f4       	brcc	.+8      	; 0x18ae <__ftoa_engine+0xd2>
    18a6:	49 0f       	add	r20, r25
    18a8:	56 1f       	adc	r21, r22
    18aa:	c7 1f       	adc	r28, r23
    18ac:	d8 1f       	adc	r29, r24
    18ae:	99 0f       	add	r25, r25
    18b0:	66 1f       	adc	r22, r22
    18b2:	77 1f       	adc	r23, r23
    18b4:	88 1f       	adc	r24, r24
    18b6:	06 94       	lsr	r0
    18b8:	a9 f7       	brne	.-22     	; 0x18a4 <__ftoa_engine+0xc8>
    18ba:	84 91       	lpm	r24, Z
    18bc:	10 95       	com	r17
    18be:	17 70       	andi	r17, 0x07	; 7
    18c0:	41 f0       	breq	.+16     	; 0x18d2 <__ftoa_engine+0xf6>
    18c2:	d6 95       	lsr	r29
    18c4:	c7 95       	ror	r28
    18c6:	57 95       	ror	r21
    18c8:	47 95       	ror	r20
    18ca:	f7 94       	ror	r15
    18cc:	e7 94       	ror	r14
    18ce:	1a 95       	dec	r17
    18d0:	c1 f7       	brne	.-16     	; 0x18c2 <__ftoa_engine+0xe6>
    18d2:	e6 e3       	ldi	r30, 0x36	; 54
    18d4:	f0 e0       	ldi	r31, 0x00	; 0
    18d6:	68 94       	set
    18d8:	15 90       	lpm	r1, Z+
    18da:	15 91       	lpm	r17, Z+
    18dc:	35 91       	lpm	r19, Z+
    18de:	65 91       	lpm	r22, Z+
    18e0:	95 91       	lpm	r25, Z+
    18e2:	05 90       	lpm	r0, Z+
    18e4:	7f e2       	ldi	r23, 0x2F	; 47
    18e6:	73 95       	inc	r23
    18e8:	e1 18       	sub	r14, r1
    18ea:	f1 0a       	sbc	r15, r17
    18ec:	43 0b       	sbc	r20, r19
    18ee:	56 0b       	sbc	r21, r22
    18f0:	c9 0b       	sbc	r28, r25
    18f2:	d0 09       	sbc	r29, r0
    18f4:	c0 f7       	brcc	.-16     	; 0x18e6 <__ftoa_engine+0x10a>
    18f6:	e1 0c       	add	r14, r1
    18f8:	f1 1e       	adc	r15, r17
    18fa:	43 1f       	adc	r20, r19
    18fc:	56 1f       	adc	r21, r22
    18fe:	c9 1f       	adc	r28, r25
    1900:	d0 1d       	adc	r29, r0
    1902:	7e f4       	brtc	.+30     	; 0x1922 <__ftoa_engine+0x146>
    1904:	70 33       	cpi	r23, 0x30	; 48
    1906:	11 f4       	brne	.+4      	; 0x190c <__ftoa_engine+0x130>
    1908:	8a 95       	dec	r24
    190a:	e6 cf       	rjmp	.-52     	; 0x18d8 <__ftoa_engine+0xfc>
    190c:	e8 94       	clt
    190e:	01 50       	subi	r16, 0x01	; 1
    1910:	30 f0       	brcs	.+12     	; 0x191e <__ftoa_engine+0x142>
    1912:	08 0f       	add	r16, r24
    1914:	0a f4       	brpl	.+2      	; 0x1918 <__ftoa_engine+0x13c>
    1916:	00 27       	eor	r16, r16
    1918:	02 17       	cp	r16, r18
    191a:	08 f4       	brcc	.+2      	; 0x191e <__ftoa_engine+0x142>
    191c:	20 2f       	mov	r18, r16
    191e:	23 95       	inc	r18
    1920:	02 2f       	mov	r16, r18
    1922:	7a 33       	cpi	r23, 0x3A	; 58
    1924:	28 f0       	brcs	.+10     	; 0x1930 <__ftoa_engine+0x154>
    1926:	79 e3       	ldi	r23, 0x39	; 57
    1928:	7d 93       	st	X+, r23
    192a:	2a 95       	dec	r18
    192c:	e9 f7       	brne	.-6      	; 0x1928 <__ftoa_engine+0x14c>
    192e:	10 c0       	rjmp	.+32     	; 0x1950 <__ftoa_engine+0x174>
    1930:	7d 93       	st	X+, r23
    1932:	2a 95       	dec	r18
    1934:	89 f6       	brne	.-94     	; 0x18d8 <__ftoa_engine+0xfc>
    1936:	06 94       	lsr	r0
    1938:	97 95       	ror	r25
    193a:	67 95       	ror	r22
    193c:	37 95       	ror	r19
    193e:	17 95       	ror	r17
    1940:	17 94       	ror	r1
    1942:	e1 18       	sub	r14, r1
    1944:	f1 0a       	sbc	r15, r17
    1946:	43 0b       	sbc	r20, r19
    1948:	56 0b       	sbc	r21, r22
    194a:	c9 0b       	sbc	r28, r25
    194c:	d0 09       	sbc	r29, r0
    194e:	98 f0       	brcs	.+38     	; 0x1976 <__ftoa_engine+0x19a>
    1950:	23 95       	inc	r18
    1952:	7e 91       	ld	r23, -X
    1954:	73 95       	inc	r23
    1956:	7a 33       	cpi	r23, 0x3A	; 58
    1958:	08 f0       	brcs	.+2      	; 0x195c <__ftoa_engine+0x180>
    195a:	70 e3       	ldi	r23, 0x30	; 48
    195c:	7c 93       	st	X, r23
    195e:	20 13       	cpse	r18, r16
    1960:	b8 f7       	brcc	.-18     	; 0x1950 <__ftoa_engine+0x174>
    1962:	7e 91       	ld	r23, -X
    1964:	70 61       	ori	r23, 0x10	; 16
    1966:	7d 93       	st	X+, r23
    1968:	30 f0       	brcs	.+12     	; 0x1976 <__ftoa_engine+0x19a>
    196a:	83 95       	inc	r24
    196c:	71 e3       	ldi	r23, 0x31	; 49
    196e:	7d 93       	st	X+, r23
    1970:	70 e3       	ldi	r23, 0x30	; 48
    1972:	2a 95       	dec	r18
    1974:	e1 f7       	brne	.-8      	; 0x196e <__ftoa_engine+0x192>
    1976:	11 24       	eor	r1, r1
    1978:	ef 90       	pop	r14
    197a:	ff 90       	pop	r15
    197c:	0f 91       	pop	r16
    197e:	1f 91       	pop	r17
    1980:	cf 91       	pop	r28
    1982:	df 91       	pop	r29
    1984:	99 27       	eor	r25, r25
    1986:	87 fd       	sbrc	r24, 7
    1988:	90 95       	com	r25
    198a:	08 95       	ret

0000198c <strrev>:
    198c:	dc 01       	movw	r26, r24
    198e:	fc 01       	movw	r30, r24
    1990:	67 2f       	mov	r22, r23
    1992:	71 91       	ld	r23, Z+
    1994:	77 23       	and	r23, r23
    1996:	e1 f7       	brne	.-8      	; 0x1990 <strrev+0x4>
    1998:	32 97       	sbiw	r30, 0x02	; 2
    199a:	04 c0       	rjmp	.+8      	; 0x19a4 <strrev+0x18>
    199c:	7c 91       	ld	r23, X
    199e:	6d 93       	st	X+, r22
    19a0:	70 83       	st	Z, r23
    19a2:	62 91       	ld	r22, -Z
    19a4:	ae 17       	cp	r26, r30
    19a6:	bf 07       	cpc	r27, r31
    19a8:	c8 f3       	brcs	.-14     	; 0x199c <strrev+0x10>
    19aa:	08 95       	ret

000019ac <__udivmodhi4>:
    19ac:	aa 1b       	sub	r26, r26
    19ae:	bb 1b       	sub	r27, r27
    19b0:	51 e1       	ldi	r21, 0x11	; 17
    19b2:	07 c0       	rjmp	.+14     	; 0x19c2 <__udivmodhi4_ep>

000019b4 <__udivmodhi4_loop>:
    19b4:	aa 1f       	adc	r26, r26
    19b6:	bb 1f       	adc	r27, r27
    19b8:	a6 17       	cp	r26, r22
    19ba:	b7 07       	cpc	r27, r23
    19bc:	10 f0       	brcs	.+4      	; 0x19c2 <__udivmodhi4_ep>
    19be:	a6 1b       	sub	r26, r22
    19c0:	b7 0b       	sbc	r27, r23

000019c2 <__udivmodhi4_ep>:
    19c2:	88 1f       	adc	r24, r24
    19c4:	99 1f       	adc	r25, r25
    19c6:	5a 95       	dec	r21
    19c8:	a9 f7       	brne	.-22     	; 0x19b4 <__udivmodhi4_loop>
    19ca:	80 95       	com	r24
    19cc:	90 95       	com	r25
    19ce:	bc 01       	movw	r22, r24
    19d0:	cd 01       	movw	r24, r26
    19d2:	08 95       	ret

000019d4 <_exit>:
    19d4:	f8 94       	cli

000019d6 <__stop_program>:
    19d6:	ff cf       	rjmp	.-2      	; 0x19d6 <__stop_program>
