
Sonnenaufgangsweckerlampe_2_0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000090  00800060  000013be  00001452  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000021  008000f0  008000f0  000014e2  2**0
                  ALLOC
  3 .stab         00002b80  00000000  00000000  000014e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000854  00000000  00000000  00004064  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000048b8  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000140  00000000  00000000  000048e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002eef  00000000  00000000  00004a27  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000054a  00000000  00000000  00007916  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000b04  00000000  00000000  00007e60  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000350  00000000  00000000  00008964  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000058e  00000000  00000000  00008cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001a17  00000000  00000000  00009242  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000128  00000000  00000000  0000ac59  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	a9 c0       	rjmp	.+338    	; 0x156 <__bad_interrupt>
       4:	a8 c0       	rjmp	.+336    	; 0x156 <__bad_interrupt>
       6:	a7 c0       	rjmp	.+334    	; 0x156 <__bad_interrupt>
       8:	a6 c0       	rjmp	.+332    	; 0x156 <__bad_interrupt>
       a:	a5 c0       	rjmp	.+330    	; 0x156 <__bad_interrupt>
       c:	a4 c0       	rjmp	.+328    	; 0x156 <__bad_interrupt>
       e:	a3 c0       	rjmp	.+326    	; 0x156 <__bad_interrupt>
      10:	17 c5       	rjmp	.+2606   	; 0xa40 <__vector_8>
      12:	a1 c0       	rjmp	.+322    	; 0x156 <__bad_interrupt>
      14:	a0 c0       	rjmp	.+320    	; 0x156 <__bad_interrupt>
      16:	9f c0       	rjmp	.+318    	; 0x156 <__bad_interrupt>
      18:	9e c0       	rjmp	.+316    	; 0x156 <__bad_interrupt>
      1a:	9d c0       	rjmp	.+314    	; 0x156 <__bad_interrupt>
      1c:	9c c0       	rjmp	.+312    	; 0x156 <__bad_interrupt>
      1e:	9b c0       	rjmp	.+310    	; 0x156 <__bad_interrupt>
      20:	9a c0       	rjmp	.+308    	; 0x156 <__bad_interrupt>
      22:	99 c0       	rjmp	.+306    	; 0x156 <__bad_interrupt>
      24:	98 c0       	rjmp	.+304    	; 0x156 <__bad_interrupt>
      26:	00 40       	sbci	r16, 0x00	; 0
      28:	7a 10       	cpse	r7, r10
      2a:	f3 5a       	subi	r31, 0xA3	; 163
      2c:	00 a0       	ldd	r0, Z+32	; 0x20
      2e:	72 4e       	sbci	r23, 0xE2	; 226
      30:	18 09       	sbc	r17, r8
      32:	00 10       	cpse	r0, r0
      34:	a5 d4       	rcall	.+2378   	; 0x980 <_Z4menuv+0x3a>
      36:	e8 00       	.word	0x00e8	; ????
      38:	00 e8       	ldi	r16, 0x80	; 128
      3a:	76 48       	sbci	r23, 0x86	; 134
      3c:	17 00       	.word	0x0017	; ????
      3e:	00 e4       	ldi	r16, 0x40	; 64
      40:	0b 54       	subi	r16, 0x4B	; 75
      42:	02 00       	.word	0x0002	; ????
      44:	00 ca       	rjmp	.-3072   	; 0xfffff446 <__eeprom_end+0xff7ef446>
      46:	9a 3b       	cpi	r25, 0xBA	; 186
      48:	00 00       	nop
      4a:	00 e1       	ldi	r16, 0x10	; 16
      4c:	f5 05       	cpc	r31, r5
      4e:	00 00       	nop
      50:	80 96       	adiw	r24, 0x20	; 32
      52:	98 00       	.word	0x0098	; ????
      54:	00 00       	nop
      56:	40 42       	sbci	r20, 0x20	; 32
      58:	0f 00       	.word	0x000f	; ????
      5a:	00 00       	nop
      5c:	a0 86       	std	Z+8, r10	; 0x08
      5e:	01 00       	.word	0x0001	; ????
      60:	00 00       	nop
      62:	10 27       	eor	r17, r16
      64:	00 00       	nop
      66:	00 00       	nop
      68:	e8 03       	fmulsu	r22, r16
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	64 00       	.word	0x0064	; ????
      70:	00 00       	nop
      72:	00 00       	nop
      74:	0a 00       	.word	0x000a	; ????
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	01 00       	.word	0x0001	; ????
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	2c 76       	andi	r18, 0x6C	; 108
      82:	d8 88       	ldd	r13, Y+16	; 0x10
      84:	dc 67       	ori	r29, 0x7C	; 124
      86:	4f 08       	sbc	r4, r15
      88:	23 df       	rcall	.-442    	; 0xfffffed0 <__eeprom_end+0xff7efed0>
      8a:	c1 df       	rcall	.-126    	; 0xe <__zero_reg__+0xd>
      8c:	ae 59       	subi	r26, 0x9E	; 158
      8e:	e1 b1       	in	r30, 0x01	; 1
      90:	b7 96       	adiw	r30, 0x27	; 39
      92:	e5 e3       	ldi	r30, 0x35	; 53
      94:	e4 53       	subi	r30, 0x34	; 52
      96:	c6 3a       	cpi	r28, 0xA6	; 166
      98:	e6 51       	subi	r30, 0x16	; 22
      9a:	99 76       	andi	r25, 0x69	; 105
      9c:	96 e8       	ldi	r25, 0x86	; 134
      9e:	e6 c2       	rjmp	.+1484   	; 0x66c <_Z5einsth+0x2>
      a0:	84 26       	eor	r8, r20
      a2:	eb 89       	ldd	r30, Y+19	; 0x13
      a4:	8c 9b       	sbis	0x11, 4	; 17
      a6:	62 ed       	ldi	r22, 0xD2	; 210
      a8:	40 7c       	andi	r20, 0xC0	; 192
      aa:	6f fc       	.word	0xfc6f	; ????
      ac:	ef bc       	out	0x2f, r14	; 47
      ae:	9c 9f       	mul	r25, r28
      b0:	40 f2       	brcs	.-112    	; 0x42 <__SREG__+0x3>
      b2:	ba a5       	ldd	r27, Y+42	; 0x2a
      b4:	6f a5       	ldd	r22, Y+47	; 0x2f
      b6:	f4 90       	lpm	r15, Z
      b8:	05 5a       	subi	r16, 0xA5	; 165
      ba:	2a f7       	brpl	.-54     	; 0x86 <__SREG__+0x47>
      bc:	5c 93       	st	X, r21
      be:	6b 6c       	ori	r22, 0xCB	; 203
      c0:	f9 67       	ori	r31, 0x79	; 121
      c2:	6d c1       	rjmp	.+730    	; 0x39e <_Z4zeitv+0xe4>
      c4:	1b fc       	.word	0xfc1b	; ????
      c6:	e0 e4       	ldi	r30, 0x40	; 64
      c8:	0d 47       	sbci	r16, 0x7D	; 125
      ca:	fe f5       	brtc	.+126    	; 0x14a <.do_clear_bss_loop>
      cc:	20 e6       	ldi	r18, 0x60	; 96
      ce:	b5 00       	.word	0x00b5	; ????
      d0:	d0 ed       	ldi	r29, 0xD0	; 208
      d2:	90 2e       	mov	r9, r16
      d4:	03 00       	.word	0x0003	; ????
      d6:	94 35       	cpi	r25, 0x54	; 84
      d8:	77 05       	cpc	r23, r7
      da:	00 80       	ld	r0, Z
      dc:	84 1e       	adc	r8, r20
      de:	08 00       	.word	0x0008	; ????
      e0:	00 20       	and	r0, r0
      e2:	4e 0a       	sbc	r4, r30
      e4:	00 00       	nop
      e6:	00 c8       	rjmp	.-4096   	; 0xfffff0e8 <__eeprom_end+0xff7ef0e8>
      e8:	0c 33       	cpi	r16, 0x3C	; 60
      ea:	33 33       	cpi	r19, 0x33	; 51
      ec:	33 0f       	add	r19, r19
      ee:	98 6e       	ori	r25, 0xE8	; 232
      f0:	12 83       	std	Z+2, r17	; 0x02
      f2:	11 41       	sbci	r17, 0x11	; 17
      f4:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f6:	21 14       	cp	r2, r1
      f8:	89 3b       	cpi	r24, 0xB9	; 185
      fa:	e6 55       	subi	r30, 0x56	; 86
      fc:	16 cf       	rjmp	.-468    	; 0xffffff2a <__eeprom_end+0xff7eff2a>
      fe:	fe e6       	ldi	r31, 0x6E	; 110
     100:	db 18       	sub	r13, r11
     102:	d1 84       	ldd	r13, Z+9	; 0x09
     104:	4b 38       	cpi	r20, 0x8B	; 139
     106:	1b f7       	brvc	.-58     	; 0xce <__SREG__+0x8f>
     108:	7c 1d       	adc	r23, r12
     10a:	90 1d       	adc	r25, r0
     10c:	a4 bb       	out	0x14, r26	; 20
     10e:	e4 24       	eor	r14, r4
     110:	20 32       	cpi	r18, 0x20	; 32
     112:	84 72       	andi	r24, 0x24	; 36
     114:	5e 22       	and	r5, r30
     116:	81 00       	.word	0x0081	; ????
     118:	c9 f1       	breq	.+114    	; 0x18c <_Z8lcd_datah+0x12>
     11a:	24 ec       	ldi	r18, 0xC4	; 196
     11c:	a1 e5       	ldi	r26, 0x51	; 81
     11e:	3d 27       	eor	r19, r29

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf e5       	ldi	r28, 0x5F	; 95
     126:	d4 e0       	ldi	r29, 0x04	; 4
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	10 e0       	ldi	r17, 0x00	; 0
     12e:	a0 e6       	ldi	r26, 0x60	; 96
     130:	b0 e0       	ldi	r27, 0x00	; 0
     132:	ee eb       	ldi	r30, 0xBE	; 190
     134:	f3 e1       	ldi	r31, 0x13	; 19
     136:	02 c0       	rjmp	.+4      	; 0x13c <__do_copy_data+0x10>
     138:	05 90       	lpm	r0, Z+
     13a:	0d 92       	st	X+, r0
     13c:	a0 3f       	cpi	r26, 0xF0	; 240
     13e:	b1 07       	cpc	r27, r17
     140:	d9 f7       	brne	.-10     	; 0x138 <__do_copy_data+0xc>

00000142 <__do_clear_bss>:
     142:	21 e0       	ldi	r18, 0x01	; 1
     144:	a0 ef       	ldi	r26, 0xF0	; 240
     146:	b0 e0       	ldi	r27, 0x00	; 0
     148:	01 c0       	rjmp	.+2      	; 0x14c <.do_clear_bss_start>

0000014a <.do_clear_bss_loop>:
     14a:	1d 92       	st	X+, r1

0000014c <.do_clear_bss_start>:
     14c:	a1 31       	cpi	r26, 0x11	; 17
     14e:	b2 07       	cpc	r27, r18
     150:	e1 f7       	brne	.-8      	; 0x14a <.do_clear_bss_loop>
     152:	8b d4       	rcall	.+2326   	; 0xa6a <main>
     154:	32 c9       	rjmp	.-3484   	; 0xfffff3ba <__eeprom_end+0xff7ef3ba>

00000156 <__bad_interrupt>:
     156:	54 cf       	rjmp	.-344    	; 0x0 <__vectors>

00000158 <_ZL10lcd_enablev>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     158:	c5 9a       	sbi	0x18, 5	; 24
     15a:	88 e1       	ldi	r24, 0x18	; 24
     15c:	8a 95       	dec	r24
     15e:	f1 f7       	brne	.-4      	; 0x15c <_ZL10lcd_enablev+0x4>
     160:	00 c0       	rjmp	.+0      	; 0x162 <_ZL10lcd_enablev+0xa>
     162:	c5 98       	cbi	0x18, 5	; 24
     164:	08 95       	ret

00000166 <_ZL7lcd_outh>:
	}
	aus(1,0);
	aus(2,0);
	lcd_string(NAME(Sekunden));
	while(!debounce(&PIND,3)){
		if (debounce(&PIND,2))
     166:	98 b3       	in	r25, 0x18	; 24
     168:	90 7f       	andi	r25, 0xF0	; 240
		{
			Sekunden++;
     16a:	98 bb       	out	0x18, r25	; 24
     16c:	98 b3       	in	r25, 0x18	; 24
     16e:	82 95       	swap	r24
			if (Sekunden==60)
     170:	8f 70       	andi	r24, 0x0F	; 15
     172:	98 2b       	or	r25, r24
	aus(2,0);
	lcd_string(NAME(Sekunden));
	while(!debounce(&PIND,3)){
		if (debounce(&PIND,2))
		{
			Sekunden++;
     174:	98 bb       	out	0x18, r25	; 24
     176:	f0 df       	rcall	.-32     	; 0x158 <_ZL10lcd_enablev>
     178:	08 95       	ret

0000017a <_Z8lcd_datah>:
			if (Sekunden==60)
			{
				Sekunden=0;
     17a:	cf 93       	push	r28
     17c:	c8 2f       	mov	r28, r24
			}
			aus(1,0);
     17e:	c4 9a       	sbi	0x18, 4	; 24
     180:	f2 df       	rcall	.-28     	; 0x166 <_ZL7lcd_outh>
     182:	8c 2f       	mov	r24, r28
			aus(2,0);
     184:	82 95       	swap	r24
     186:	80 7f       	andi	r24, 0xF0	; 240
     188:	ee df       	rcall	.-36     	; 0x166 <_ZL7lcd_outh>
			lcd_string(NAME(Sekunden));
     18a:	88 e3       	ldi	r24, 0x38	; 56
     18c:	8a 95       	dec	r24
     18e:	f1 f7       	brne	.-4      	; 0x18c <_Z8lcd_datah+0x12>

#endif /* DEFINITIONEN_H_ */

inline uint8_t debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( !(*port & (1 << pin)) )
     190:	00 c0       	rjmp	.+0      	; 0x192 <_Z8lcd_datah+0x18>
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <_Z11lcd_commandh>:
     196:	cf 93       	push	r28
     198:	c8 2f       	mov	r28, r24
     19a:	c4 98       	cbi	0x18, 4	; 24
     19c:	e4 df       	rcall	.-56     	; 0x166 <_ZL7lcd_outh>
     19e:	8c 2f       	mov	r24, r28
     1a0:	82 95       	swap	r24
     1a2:	80 7f       	andi	r24, 0xF0	; 240
     1a4:	e0 df       	rcall	.-64     	; 0x166 <_ZL7lcd_outh>
     1a6:	83 e3       	ldi	r24, 0x33	; 51
     1a8:	8a 95       	dec	r24
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <_Z11lcd_commandh+0x12>
		
	}
	aus(1,0);
	aus(2,0);
	lcd_string(NAME(Sekunden));
	while(!debounce(&PIND,3)){
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <_Z11lcd_commandh+0x18>
     1ae:	cf 91       	pop	r28
			aus(2,0);
			lcd_string(NAME(Sekunden));
		}
		
	}
}
     1b0:	08 95       	ret

000001b2 <_Z9lcd_clearv>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl zur Löschung des Displays
void lcd_clear( void )
{
	lcd_command( LCD_CLEAR_DISPLAY );
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	f0 df       	rcall	.-32     	; 0x196 <_Z11lcd_commandh>
     1b6:	83 e3       	ldi	r24, 0x33	; 51
     1b8:	97 e0       	ldi	r25, 0x07	; 7
     1ba:	01 97       	sbiw	r24, 0x01	; 1
     1bc:	f1 f7       	brne	.-4      	; 0x1ba <_Z9lcd_clearv+0x8>
     1be:	08 95       	ret

000001c0 <_Z8lcd_initv>:
{
	// verwendete Pins auf Ausgang schalten
	uint8_t pins = (0x0F << LCD_DB) |           // 4 Datenleitungen
	(1<<LCD_RS) |                // R/S Leitung
	(1<<LCD_EN);                 // Enable Leitung
	LCD_DDR |= pins;
     1c0:	87 b3       	in	r24, 0x17	; 23
     1c2:	8f 63       	ori	r24, 0x3F	; 63
     1c4:	87 bb       	out	0x17, r24	; 23
	
	// initial alle Ausgänge auf Null
	LCD_PORT &= ~pins;
     1c6:	88 b3       	in	r24, 0x18	; 24
     1c8:	80 7c       	andi	r24, 0xC0	; 192
     1ca:	88 bb       	out	0x18, r24	; 24
     1cc:	8f ef       	ldi	r24, 0xFF	; 255
     1ce:	95 e3       	ldi	r25, 0x35	; 53
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <_Z8lcd_initv+0x10>
     1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <_Z8lcd_initv+0x16>
     1d6:	00 00       	nop
	
	// warten auf die Bereitschaft des LCD
	_delay_ms( LCD_BOOTUP_MS );
	
	// Soft-Reset muss 3mal hintereinander gesendet werden zur Initialisierung
	lcd_out( LCD_SOFT_RESET );
     1d8:	80 e3       	ldi	r24, 0x30	; 48
     1da:	c5 df       	rcall	.-118    	; 0x166 <_ZL7lcd_outh>
     1dc:	8f ef       	ldi	r24, 0xFF	; 255
     1de:	91 e1       	ldi	r25, 0x11	; 17
     1e0:	01 97       	sbiw	r24, 0x01	; 1
     1e2:	f1 f7       	brne	.-4      	; 0x1e0 <_Z8lcd_initv+0x20>
     1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <_Z8lcd_initv+0x26>
     1e6:	00 00       	nop
	_delay_ms( LCD_SOFT_RESET_MS1 );
	
	lcd_enable();
     1e8:	b7 df       	rcall	.-146    	; 0x158 <_ZL10lcd_enablev>
     1ea:	89 e9       	ldi	r24, 0x99	; 153
     1ec:	93 e0       	ldi	r25, 0x03	; 3
     1ee:	01 97       	sbiw	r24, 0x01	; 1
     1f0:	f1 f7       	brne	.-4      	; 0x1ee <_Z8lcd_initv+0x2e>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <_Z8lcd_initv+0x34>
	_delay_ms( LCD_SOFT_RESET_MS2 );
	
	lcd_enable();
     1f4:	b1 df       	rcall	.-158    	; 0x158 <_ZL10lcd_enablev>
     1f6:	89 e9       	ldi	r24, 0x99	; 153
     1f8:	93 e0       	ldi	r25, 0x03	; 3
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <_Z8lcd_initv+0x3a>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <_Z8lcd_initv+0x40>
	_delay_ms( LCD_SOFT_RESET_MS3 );
	
	// 4-bit Modus aktivieren
	lcd_out( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT );
     200:	80 e2       	ldi	r24, 0x20	; 32
     202:	b1 df       	rcall	.-158    	; 0x166 <_ZL7lcd_outh>
     204:	8f ef       	ldi	r24, 0xFF	; 255
     206:	91 e1       	ldi	r25, 0x11	; 17
     208:	01 97       	sbiw	r24, 0x01	; 1
     20a:	f1 f7       	brne	.-4      	; 0x208 <_Z8lcd_initv+0x48>
     20c:	00 c0       	rjmp	.+0      	; 0x20e <_Z8lcd_initv+0x4e>
     20e:	00 00       	nop
	
	// 4-bit Modus / 2 Zeilen / 5x7
	lcd_command( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT |
	LCD_FUNCTION_2LINE |
	LCD_FUNCTION_5X7 );
     210:	88 e2       	ldi	r24, 0x28	; 40
     212:	c1 df       	rcall	.-126    	; 0x196 <_Z11lcd_commandh>
	
	// Display ein / Cursor aus / Blinken aus
	lcd_command( LCD_SET_DISPLAY |
	LCD_DISPLAY_ON |
	LCD_CURSOR_OFF |
	LCD_BLINKING_OFF);
     214:	8c e0       	ldi	r24, 0x0C	; 12
     216:	bf df       	rcall	.-130    	; 0x196 <_Z11lcd_commandh>
	
	// Cursor inkrement / kein Scrollen
	lcd_command( LCD_SET_ENTRY |
	LCD_ENTRY_INCREASE |
	LCD_ENTRY_NOSHIFT );
     218:	86 e0       	ldi	r24, 0x06	; 6
     21a:	bd df       	rcall	.-134    	; 0x196 <_Z11lcd_commandh>
	
	lcd_clear();
     21c:	ca df       	rcall	.-108    	; 0x1b2 <_Z9lcd_clearv>
     21e:	08 95       	ret

00000220 <_Z8lcd_homev>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl: Cursor Home
void lcd_home( void )
{
	lcd_command( LCD_CURSOR_HOME );
     220:	82 e0       	ldi	r24, 0x02	; 2
     222:	b9 df       	rcall	.-142    	; 0x196 <_Z11lcd_commandh>
     224:	83 e3       	ldi	r24, 0x33	; 51
     226:	97 e0       	ldi	r25, 0x07	; 7
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <_Z8lcd_homev+0x8>
     22c:	08 95       	ret

0000022e <_Z13lcd_setcursorhh>:

void lcd_setcursor( uint8_t x, uint8_t y )
{
	uint8_t data;
	
	switch (y)
     22e:	62 30       	cpi	r22, 0x02	; 2
     230:	59 f0       	breq	.+22     	; 0x248 <_Z13lcd_setcursorhh+0x1a>
     232:	18 f4       	brcc	.+6      	; 0x23a <_Z13lcd_setcursorhh+0xc>
     234:	61 30       	cpi	r22, 0x01	; 1
     236:	71 f4       	brne	.+28     	; 0x254 <_Z13lcd_setcursorhh+0x26>
     238:	05 c0       	rjmp	.+10     	; 0x244 <_Z13lcd_setcursorhh+0x16>
     23a:	63 30       	cpi	r22, 0x03	; 3
     23c:	39 f0       	breq	.+14     	; 0x24c <_Z13lcd_setcursorhh+0x1e>
     23e:	64 30       	cpi	r22, 0x04	; 4
     240:	49 f4       	brne	.+18     	; 0x254 <_Z13lcd_setcursorhh+0x26>
     242:	06 c0       	rjmp	.+12     	; 0x250 <_Z13lcd_setcursorhh+0x22>
	{
		case 1:    // 1. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE1 + x;
     244:	80 58       	subi	r24, 0x80	; 128
		break;
     246:	05 c0       	rjmp	.+10     	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 2:    // 2. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE2 + x;
     248:	80 54       	subi	r24, 0x40	; 64
		break;
     24a:	03 c0       	rjmp	.+6      	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 3:    // 3. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE3 + x;
     24c:	80 57       	subi	r24, 0x70	; 112
		break;
     24e:	01 c0       	rjmp	.+2      	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 4:    // 4. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE4 + x;
     250:	80 53       	subi	r24, 0x30	; 48
		
		default:
		return;                                   // für den Fall einer falschen Zeile
	}
	
	lcd_command( data );
     252:	a1 df       	rcall	.-190    	; 0x196 <_Z11lcd_commandh>
     254:	08 95       	ret

00000256 <_Z10lcd_stringPKc>:

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	ec 01       	movw	r28, r24
	while( *data != '\0' )
     25c:	88 81       	ld	r24, Y
     25e:	88 23       	and	r24, r24
     260:	29 f0       	breq	.+10     	; 0x26c <_Z10lcd_stringPKc+0x16>
}

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
     262:	21 96       	adiw	r28, 0x01	; 1
{
	while( *data != '\0' )
	lcd_data( *data++ );
     264:	8a df       	rcall	.-236    	; 0x17a <_Z8lcd_datah>
////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
	while( *data != '\0' )
     266:	89 91       	ld	r24, Y+
     268:	81 11       	cpse	r24, r1
     26a:	fc cf       	rjmp	.-8      	; 0x264 <_Z10lcd_stringPKc+0xe>
	lcd_data( *data++ );
}
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <_Z8ADC_Readh>:
#ifndef ADC_H_
#define ADC_H_

uint16_t ADC_Read( uint8_t channel )
{
	ADMUX = (ADMUX & ~(0x1F)) | (channel & 0x1F);
     272:	97 b1       	in	r25, 0x07	; 7
     274:	8f 71       	andi	r24, 0x1F	; 31
     276:	90 7e       	andi	r25, 0xE0	; 224
     278:	98 2b       	or	r25, r24
     27a:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1<<ADSC);
     27c:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     27e:	36 99       	sbic	0x06, 6	; 6
     280:	fe cf       	rjmp	.-4      	; 0x27e <_Z8ADC_Readh+0xc>
	}
	return ADCW;
     282:	24 b1       	in	r18, 0x04	; 4
     284:	35 b1       	in	r19, 0x05	; 5
}
     286:	82 2f       	mov	r24, r18
     288:	93 2f       	mov	r25, r19
     28a:	08 95       	ret

0000028c <_Z6Weckerv>:

#ifndef ZEIT_H_
#define ZEIT_H_

void Wecker(){
	if (WochenTag!=0 && WochenTag!=6)
     28c:	80 91 0d 01 	lds	r24, 0x010D
     290:	88 23       	and	r24, r24
     292:	91 f0       	breq	.+36     	; 0x2b8 <_Z6Weckerv+0x2c>
     294:	86 30       	cpi	r24, 0x06	; 6
     296:	81 f0       	breq	.+32     	; 0x2b8 <_Z6Weckerv+0x2c>
	{
		if(Stunden==WStunden){
     298:	90 91 0e 01 	lds	r25, 0x010E
     29c:	80 91 0c 01 	lds	r24, 0x010C
     2a0:	98 13       	cpse	r25, r24
     2a2:	0a c0       	rjmp	.+20     	; 0x2b8 <_Z6Weckerv+0x2c>
			if(Minuten==WMinuten){
     2a4:	90 91 0f 01 	lds	r25, 0x010F
     2a8:	80 91 0b 01 	lds	r24, 0x010B
     2ac:	98 13       	cpse	r25, r24
     2ae:	04 c0       	rjmp	.+8      	; 0x2b8 <_Z6Weckerv+0x2c>
				Wan = 1;
     2b0:	81 e0       	ldi	r24, 0x01	; 1
     2b2:	80 93 0a 01 	sts	0x010A, r24
				PORTC |= (1<<PC5);
     2b6:	ad 9a       	sbi	0x15, 5	; 21
     2b8:	08 95       	ret

000002ba <_Z4zeitv>:
			}
		}
	}
}

void zeit(){
     2ba:	cf 92       	push	r12
     2bc:	df 92       	push	r13
     2be:	ef 92       	push	r14
     2c0:	ff 92       	push	r15
     2c2:	0f 93       	push	r16
     2c4:	1f 93       	push	r17
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
	sektemp=Sekunden;
     2ca:	80 91 10 01 	lds	r24, 0x0110
     2ce:	80 93 09 01 	sts	0x0109, r24
	if (Sekunden >= 60){
     2d2:	8c 33       	cpi	r24, 0x3C	; 60
     2d4:	08 f4       	brcc	.+2      	; 0x2d8 <_Z4zeitv+0x1e>
     2d6:	72 c0       	rjmp	.+228    	; 0x3bc <_Z4zeitv+0x102>
		//Temperatur bestimmen
		ADC_Read(0);
     2d8:	80 e0       	ldi	r24, 0x00	; 0
     2da:	cb df       	rcall	.-106    	; 0x272 <_Z8ADC_Readh>
		uint16_t adcval = ADC_Read(0);
     2dc:	80 e0       	ldi	r24, 0x00	; 0
     2de:	c9 df       	rcall	.-110    	; 0x272 <_Z8ADC_Readh>
		double span= (double)adcval*(5.0/1024.0);
     2e0:	bc 01       	movw	r22, r24
     2e2:	80 e0       	ldi	r24, 0x00	; 0
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	c1 d4       	rcall	.+2434   	; 0xc6a <__floatunsisf>
     2e8:	20 e0       	ldi	r18, 0x00	; 0
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	40 ea       	ldi	r20, 0xA0	; 160
     2ee:	5b e3       	ldi	r21, 0x3B	; 59
     2f0:	4a d5       	rcall	.+2708   	; 0xd86 <__mulsf3>
     2f2:	06 2f       	mov	r16, r22
     2f4:	17 2f       	mov	r17, r23
     2f6:	d8 2f       	mov	r29, r24
     2f8:	c9 2f       	mov	r28, r25
		double widerst = ((double)span*2700.0)/((double)(5-(double)span));
     2fa:	20 e0       	ldi	r18, 0x00	; 0
     2fc:	30 ec       	ldi	r19, 0xC0	; 192
     2fe:	48 e2       	ldi	r20, 0x28	; 40
     300:	55 e4       	ldi	r21, 0x45	; 69
     302:	41 d5       	rcall	.+2690   	; 0xd86 <__mulsf3>
     304:	6b 01       	movw	r12, r22
     306:	7c 01       	movw	r14, r24
     308:	20 2f       	mov	r18, r16
     30a:	31 2f       	mov	r19, r17
     30c:	4d 2f       	mov	r20, r29
     30e:	5c 2f       	mov	r21, r28
     310:	60 e0       	ldi	r22, 0x00	; 0
     312:	70 e0       	ldi	r23, 0x00	; 0
     314:	80 ea       	ldi	r24, 0xA0	; 160
     316:	90 e4       	ldi	r25, 0x40	; 64
     318:	db d3       	rcall	.+1974   	; 0xad0 <__subsf3>
     31a:	9b 01       	movw	r18, r22
     31c:	ac 01       	movw	r20, r24
     31e:	c7 01       	movw	r24, r14
     320:	b6 01       	movw	r22, r12
     322:	3b d4       	rcall	.+2166   	; 0xb9a <__divsf3>
		tempera = (100.0/1387.0)*widerst+(50+tempoffset-(100.0/1387.0)*2417.0);
     324:	25 e2       	ldi	r18, 0x25	; 37
     326:	38 ea       	ldi	r19, 0xA8	; 168
     328:	43 e9       	ldi	r20, 0x93	; 147
     32a:	5d e3       	ldi	r21, 0x3D	; 61
     32c:	2c d5       	rcall	.+2648   	; 0xd86 <__mulsf3>
     32e:	6b 01       	movw	r12, r22
     330:	7c 01       	movw	r14, r24
     332:	60 91 63 00 	lds	r22, 0x0063
     336:	70 e0       	ldi	r23, 0x00	; 0
     338:	6e 5c       	subi	r22, 0xCE	; 206
     33a:	7f 4f       	sbci	r23, 0xFF	; 255
     33c:	88 27       	eor	r24, r24
     33e:	77 fd       	sbrc	r23, 7
     340:	80 95       	com	r24
     342:	98 2f       	mov	r25, r24
     344:	94 d4       	rcall	.+2344   	; 0xc6e <__floatsisf>
     346:	21 ed       	ldi	r18, 0xD1	; 209
     348:	32 e4       	ldi	r19, 0x42	; 66
     34a:	4e e2       	ldi	r20, 0x2E	; 46
     34c:	53 e4       	ldi	r21, 0x43	; 67
     34e:	c0 d3       	rcall	.+1920   	; 0xad0 <__subsf3>
     350:	9b 01       	movw	r18, r22
     352:	ac 01       	movw	r20, r24
     354:	c7 01       	movw	r24, r14
     356:	b6 01       	movw	r22, r12
     358:	bc d3       	rcall	.+1912   	; 0xad2 <__addsf3>
     35a:	60 93 05 01 	sts	0x0105, r22
     35e:	70 93 06 01 	sts	0x0106, r23
     362:	80 93 07 01 	sts	0x0107, r24
     366:	90 93 08 01 	sts	0x0108, r25
		
		Sekunden = 0;
     36a:	10 92 10 01 	sts	0x0110, r1
		Minuten++;
     36e:	80 91 0f 01 	lds	r24, 0x010F
     372:	8f 5f       	subi	r24, 0xFF	; 255
		if(Minuten >= 60){
     374:	8c 33       	cpi	r24, 0x3C	; 60
     376:	18 f4       	brcc	.+6      	; 0x37e <_Z4zeitv+0xc4>
		double span= (double)adcval*(5.0/1024.0);
		double widerst = ((double)span*2700.0)/((double)(5-(double)span));
		tempera = (100.0/1387.0)*widerst+(50+tempoffset-(100.0/1387.0)*2417.0);
		
		Sekunden = 0;
		Minuten++;
     378:	80 93 0f 01 	sts	0x010F, r24
     37c:	07 c0       	rjmp	.+14     	; 0x38c <_Z4zeitv+0xd2>
		if(Minuten >= 60){
			Minuten = 0;
     37e:	10 92 0f 01 	sts	0x010F, r1
			Stunden++;
     382:	80 91 0e 01 	lds	r24, 0x010E
     386:	8f 5f       	subi	r24, 0xFF	; 255
     388:	80 93 0e 01 	sts	0x010E, r24
		}
		if(Stunden >= 24){
     38c:	80 91 0e 01 	lds	r24, 0x010E
     390:	88 31       	cpi	r24, 0x18	; 24
     392:	a0 f0       	brcs	.+40     	; 0x3bc <_Z4zeitv+0x102>
			Stunden = 0;
     394:	10 92 0e 01 	sts	0x010E, r1
			WochenTag++;
     398:	80 91 0d 01 	lds	r24, 0x010D
     39c:	8f 5f       	subi	r24, 0xFF	; 255
     39e:	80 93 0d 01 	sts	0x010D, r24
			Tag++;
     3a2:	90 91 62 00 	lds	r25, 0x0062
     3a6:	9f 5f       	subi	r25, 0xFF	; 255
     3a8:	90 93 62 00 	sts	0x0062, r25
			if (WochenTag>=7)
     3ac:	87 30       	cpi	r24, 0x07	; 7
     3ae:	10 f0       	brcs	.+4      	; 0x3b4 <_Z4zeitv+0xfa>
			{
				WochenTag=0;
     3b0:	10 92 0d 01 	sts	0x010D, r1
			{
				if (Tag==28)
				{
				}
			}*/
			Sekunden += sekoffset; //Ausgleich der VerlustSekunden
     3b4:	80 91 04 01 	lds	r24, 0x0104
     3b8:	80 93 10 01 	sts	0x0110, r24
		}
	}
	
	if(Wan==0)
     3bc:	80 91 0a 01 	lds	r24, 0x010A
     3c0:	81 11       	cpse	r24, r1
     3c2:	01 c0       	rjmp	.+2      	; 0x3c6 <_Z4zeitv+0x10c>
	{
		Wecker();
     3c4:	63 df       	rcall	.-314    	; 0x28c <_Z6Weckerv>
	}
}
     3c6:	df 91       	pop	r29
     3c8:	cf 91       	pop	r28
     3ca:	1f 91       	pop	r17
     3cc:	0f 91       	pop	r16
     3ce:	ff 90       	pop	r15
     3d0:	ef 90       	pop	r14
     3d2:	df 90       	pop	r13
     3d4:	cf 90       	pop	r12
     3d6:	08 95       	ret

000003d8 <_Z4wtagh>:
		lcd_data(0b01000011); //C
	}
}

void wtag(uint8_t numm){
	switch (numm)
     3d8:	83 30       	cpi	r24, 0x03	; 3
     3da:	b9 f0       	breq	.+46     	; 0x40a <_Z4wtagh+0x32>
     3dc:	20 f4       	brcc	.+8      	; 0x3e6 <_Z4wtagh+0xe>
     3de:	81 30       	cpi	r24, 0x01	; 1
     3e0:	61 f0       	breq	.+24     	; 0x3fa <_Z4wtagh+0x22>
     3e2:	78 f4       	brcc	.+30     	; 0x402 <_Z4wtagh+0x2a>
     3e4:	06 c0       	rjmp	.+12     	; 0x3f2 <_Z4wtagh+0x1a>
     3e6:	85 30       	cpi	r24, 0x05	; 5
     3e8:	c1 f0       	breq	.+48     	; 0x41a <_Z4wtagh+0x42>
     3ea:	98 f0       	brcs	.+38     	; 0x412 <_Z4wtagh+0x3a>
     3ec:	86 30       	cpi	r24, 0x06	; 6
     3ee:	e1 f4       	brne	.+56     	; 0x428 <_Z4wtagh+0x50>
     3f0:	18 c0       	rjmp	.+48     	; 0x422 <_Z4wtagh+0x4a>
	{
		case 0:
		lcd_string("So ");
     3f2:	84 e6       	ldi	r24, 0x64	; 100
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	2f df       	rcall	.-418    	; 0x256 <_Z10lcd_stringPKc>
		break;
     3f8:	08 95       	ret
		
		case 1:
		lcd_string("Mo ");
     3fa:	88 e6       	ldi	r24, 0x68	; 104
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	2b df       	rcall	.-426    	; 0x256 <_Z10lcd_stringPKc>
		break;
     400:	08 95       	ret
		
		case 2:
		lcd_string("Di ");
     402:	8c e6       	ldi	r24, 0x6C	; 108
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	27 df       	rcall	.-434    	; 0x256 <_Z10lcd_stringPKc>
		break;
     408:	08 95       	ret
		
		case 3:
		lcd_string("Mi ");
     40a:	80 e7       	ldi	r24, 0x70	; 112
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	23 df       	rcall	.-442    	; 0x256 <_Z10lcd_stringPKc>
		break;
     410:	08 95       	ret
		
		case 4:
		lcd_string("Do ");
     412:	84 e7       	ldi	r24, 0x74	; 116
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	1f df       	rcall	.-450    	; 0x256 <_Z10lcd_stringPKc>
		break;
     418:	08 95       	ret
		
		case 5:
		lcd_string("Fr ");
     41a:	88 e7       	ldi	r24, 0x78	; 120
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	1b df       	rcall	.-458    	; 0x256 <_Z10lcd_stringPKc>
		break;
     420:	08 95       	ret
		
		case 6:
		lcd_string("Sa ");
     422:	8c e7       	ldi	r24, 0x7C	; 124
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	17 df       	rcall	.-466    	; 0x256 <_Z10lcd_stringPKc>
     428:	08 95       	ret

0000042a <_Z11Kalenderaush>:
			break;
	}
}

void Kalenderaus(uint8_t pos){
	switch (pos)
     42a:	88 23       	and	r24, r24
     42c:	19 f0       	breq	.+6      	; 0x434 <_Z11Kalenderaush+0xa>
     42e:	81 30       	cpi	r24, 0x01	; 1
     430:	79 f5       	brne	.+94     	; 0x490 <__stack+0x31>
     432:	2b c0       	rjmp	.+86     	; 0x48a <__stack+0x2b>
	{
		case 0:
			//alles
			//Wochentag noch nach der alten Methode
			wtag(WochenTag);
     434:	80 91 0d 01 	lds	r24, 0x010D
     438:	cf df       	rcall	.-98     	; 0x3d8 <_Z4wtagh>
			
			//Kalender als normale Tage, an sich nicht implementiert
			itoa(Tag,Buffer,10);
     43a:	4a e0       	ldi	r20, 0x0A	; 10
     43c:	50 e0       	ldi	r21, 0x00	; 0
     43e:	60 ef       	ldi	r22, 0xF0	; 240
     440:	70 e0       	ldi	r23, 0x00	; 0
     442:	80 91 62 00 	lds	r24, 0x0062
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	21 d5       	rcall	.+2626   	; 0xe8c <itoa>
			lcd_string(Buffer);
     44a:	80 ef       	ldi	r24, 0xF0	; 240
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	03 df       	rcall	.-506    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(".");
     450:	82 e8       	ldi	r24, 0x82	; 130
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	00 df       	rcall	.-512    	; 0x256 <_Z10lcd_stringPKc>
			itoa(Monat,Buffer,10);
     456:	4a e0       	ldi	r20, 0x0A	; 10
     458:	50 e0       	ldi	r21, 0x00	; 0
     45a:	60 ef       	ldi	r22, 0xF0	; 240
     45c:	70 e0       	ldi	r23, 0x00	; 0
     45e:	80 91 61 00 	lds	r24, 0x0061
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	13 d5       	rcall	.+2598   	; 0xe8c <itoa>
			lcd_string(Buffer);
     466:	80 ef       	ldi	r24, 0xF0	; 240
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	f5 de       	rcall	.-534    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(".");
     46c:	82 e8       	ldi	r24, 0x82	; 130
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	f2 de       	rcall	.-540    	; 0x256 <_Z10lcd_stringPKc>
			itoa(Jahr,Buffer,10);
     472:	4a e0       	ldi	r20, 0x0A	; 10
     474:	50 e0       	ldi	r21, 0x00	; 0
     476:	60 ef       	ldi	r22, 0xF0	; 240
     478:	70 e0       	ldi	r23, 0x00	; 0
     47a:	80 91 60 00 	lds	r24, 0x0060
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	05 d5       	rcall	.+2570   	; 0xe8c <itoa>
			lcd_string(Buffer);
     482:	80 ef       	ldi	r24, 0xF0	; 240
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	e7 de       	rcall	.-562    	; 0x256 <_Z10lcd_stringPKc>
			
			break;
     488:	08 95       	ret
		
		case 1:
			//Nur der Wochentag
			wtag(WochenTag);
     48a:	80 91 0d 01 	lds	r24, 0x010D
     48e:	a4 df       	rcall	.-184    	; 0x3d8 <_Z4wtagh>
     490:	08 95       	ret

00000492 <_Z7zeitaush>:
	}
	
}

void zeitaus(uint8_t pos){
	switch (pos)
     492:	88 23       	and	r24, r24
     494:	21 f0       	breq	.+8      	; 0x49e <_Z7zeitaush+0xc>
     496:	81 30       	cpi	r24, 0x01	; 1
     498:	09 f0       	breq	.+2      	; 0x49c <_Z7zeitaush+0xa>
     49a:	42 c0       	rjmp	.+132    	; 0x520 <_Z7zeitaush+0x8e>
     49c:	1a c0       	rjmp	.+52     	; 0x4d2 <_Z7zeitaush+0x40>
	{
		case 0:
			itoa( Stunden, Buffer, 10 );
     49e:	4a e0       	ldi	r20, 0x0A	; 10
     4a0:	50 e0       	ldi	r21, 0x00	; 0
     4a2:	60 ef       	ldi	r22, 0xF0	; 240
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	80 91 0e 01 	lds	r24, 0x010E
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	ef d4       	rcall	.+2526   	; 0xe8c <itoa>
			lcd_string(Buffer);
     4ae:	80 ef       	ldi	r24, 0xF0	; 240
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	d1 de       	rcall	.-606    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     4b4:	80 e8       	ldi	r24, 0x80	; 128
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	ce de       	rcall	.-612    	; 0x256 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     4ba:	4a e0       	ldi	r20, 0x0A	; 10
     4bc:	50 e0       	ldi	r21, 0x00	; 0
     4be:	60 ef       	ldi	r22, 0xF0	; 240
     4c0:	70 e0       	ldi	r23, 0x00	; 0
     4c2:	80 91 0f 01 	lds	r24, 0x010F
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	e1 d4       	rcall	.+2498   	; 0xe8c <itoa>
			lcd_string(Buffer);
     4ca:	80 ef       	ldi	r24, 0xF0	; 240
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	c3 de       	rcall	.-634    	; 0x256 <_Z10lcd_stringPKc>
			
			break;
     4d0:	08 95       	ret
		
		case 1:
			itoa( Stunden, Buffer, 10 );
     4d2:	4a e0       	ldi	r20, 0x0A	; 10
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 ef       	ldi	r22, 0xF0	; 240
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	80 91 0e 01 	lds	r24, 0x010E
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	d5 d4       	rcall	.+2474   	; 0xe8c <itoa>
			lcd_string(Buffer);
     4e2:	80 ef       	ldi	r24, 0xF0	; 240
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	b7 de       	rcall	.-658    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     4e8:	80 e8       	ldi	r24, 0x80	; 128
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	b4 de       	rcall	.-664    	; 0x256 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     4ee:	4a e0       	ldi	r20, 0x0A	; 10
     4f0:	50 e0       	ldi	r21, 0x00	; 0
     4f2:	60 ef       	ldi	r22, 0xF0	; 240
     4f4:	70 e0       	ldi	r23, 0x00	; 0
     4f6:	80 91 0f 01 	lds	r24, 0x010F
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	c7 d4       	rcall	.+2446   	; 0xe8c <itoa>
			lcd_string(Buffer);
     4fe:	80 ef       	ldi	r24, 0xF0	; 240
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	a9 de       	rcall	.-686    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     504:	80 e8       	ldi	r24, 0x80	; 128
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	a6 de       	rcall	.-692    	; 0x256 <_Z10lcd_stringPKc>
			itoa(Sekunden, Buffer,10);
     50a:	4a e0       	ldi	r20, 0x0A	; 10
     50c:	50 e0       	ldi	r21, 0x00	; 0
     50e:	60 ef       	ldi	r22, 0xF0	; 240
     510:	70 e0       	ldi	r23, 0x00	; 0
     512:	80 91 10 01 	lds	r24, 0x0110
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	b9 d4       	rcall	.+2418   	; 0xe8c <itoa>
			lcd_string(Buffer);
     51a:	80 ef       	ldi	r24, 0xF0	; 240
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	9b de       	rcall	.-714    	; 0x256 <_Z10lcd_stringPKc>
     520:	08 95       	ret

00000522 <_Z3aushh>:
		default:
		break;
	}
}

void aus(uint8_t zeile, uint8_t pos){
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	cf 93       	push	r28
     528:	c6 2f       	mov	r28, r22
	
	switch (zeile)
     52a:	81 30       	cpi	r24, 0x01	; 1
     52c:	21 f0       	breq	.+8      	; 0x536 <_Z3aushh+0x14>
     52e:	82 30       	cpi	r24, 0x02	; 2
     530:	09 f0       	breq	.+2      	; 0x534 <_Z3aushh+0x12>
     532:	6a c0       	rjmp	.+212    	; 0x608 <_Z3aushh+0xe6>
     534:	51 c0       	rjmp	.+162    	; 0x5d8 <_Z3aushh+0xb6>
	{
		case 1:
			lcd_clear();
     536:	3d de       	rcall	.-902    	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     538:	73 de       	rcall	.-794    	; 0x220 <_Z8lcd_homev>
			switch (pos)
     53a:	c2 30       	cpi	r28, 0x02	; 2
     53c:	f1 f0       	breq	.+60     	; 0x57a <_Z3aushh+0x58>
     53e:	30 f4       	brcc	.+12     	; 0x54c <_Z3aushh+0x2a>
     540:	cc 23       	and	r28, r28
     542:	59 f0       	breq	.+22     	; 0x55a <_Z3aushh+0x38>
     544:	c1 30       	cpi	r28, 0x01	; 1
     546:	09 f0       	breq	.+2      	; 0x54a <_Z3aushh+0x28>
     548:	5f c0       	rjmp	.+190    	; 0x608 <_Z3aushh+0xe6>
     54a:	0f c0       	rjmp	.+30     	; 0x56a <_Z3aushh+0x48>
     54c:	c4 30       	cpi	r28, 0x04	; 4
     54e:	e9 f0       	breq	.+58     	; 0x58a <_Z3aushh+0x68>
     550:	b8 f0       	brcs	.+46     	; 0x580 <_Z3aushh+0x5e>
     552:	c5 30       	cpi	r28, 0x05	; 5
     554:	09 f0       	breq	.+2      	; 0x558 <_Z3aushh+0x36>
     556:	58 c0       	rjmp	.+176    	; 0x608 <_Z3aushh+0xe6>
     558:	22 c0       	rjmp	.+68     	; 0x59e <_Z3aushh+0x7c>
			{
				case 0:
					//Alles ohne Sekunden
					Kalenderaus(0);
     55a:	80 e0       	ldi	r24, 0x00	; 0
     55c:	66 df       	rcall	.-308    	; 0x42a <_Z11Kalenderaush>
					lcd_string(" ");
     55e:	89 ea       	ldi	r24, 0xA9	; 169
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	79 de       	rcall	.-782    	; 0x256 <_Z10lcd_stringPKc>
					zeitaus(0);
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	95 df       	rcall	.-214    	; 0x492 <_Z7zeitaush>
					
					break;
     568:	4f c0       	rjmp	.+158    	; 0x608 <_Z3aushh+0xe6>
					
				case 1:
					//Alles
					Kalenderaus(0);
     56a:	80 e0       	ldi	r24, 0x00	; 0
     56c:	5e df       	rcall	.-324    	; 0x42a <_Z11Kalenderaush>
					lcd_string(" ");
     56e:	89 ea       	ldi	r24, 0xA9	; 169
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	71 de       	rcall	.-798    	; 0x256 <_Z10lcd_stringPKc>
					zeitaus(1);
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	8d df       	rcall	.-230    	; 0x492 <_Z7zeitaush>
					
					break;
     578:	47 c0       	rjmp	.+142    	; 0x608 <_Z3aushh+0xe6>
				case 2:
					//Nur Kalender
					Kalenderaus(0);
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	56 df       	rcall	.-340    	; 0x42a <_Z11Kalenderaush>
					
					break;
     57e:	44 c0       	rjmp	.+136    	; 0x608 <_Z3aushh+0xe6>
				case 3:
					//Nur Zeit ohne Sekunden mit WDAY
					Kalenderaus(1);
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	53 df       	rcall	.-346    	; 0x42a <_Z11Kalenderaush>
					zeitaus(1);
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	85 df       	rcall	.-246    	; 0x492 <_Z7zeitaush>
					
					break;
     588:	3f c0       	rjmp	.+126    	; 0x608 <_Z3aushh+0xe6>
					
				case 4:
					lcd_string("Guten Tag");
     58a:	84 e8       	ldi	r24, 0x84	; 132
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	63 de       	rcall	.-826    	; 0x256 <_Z10lcd_stringPKc>
					lcd_setcursor(0,2);
     590:	62 e0       	ldi	r22, 0x02	; 2
     592:	80 e0       	ldi	r24, 0x00	; 0
     594:	4c de       	rcall	.-872    	; 0x22e <_Z13lcd_setcursorhh>
					lcd_string("Wecker einstellen");
     596:	8e e8       	ldi	r24, 0x8E	; 142
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	5d de       	rcall	.-838    	; 0x256 <_Z10lcd_stringPKc>
					
					break;
     59c:	35 c0       	rjmp	.+106    	; 0x608 <_Z3aushh+0xe6>
				
				case 5:
					//Wecker
					lcd_string("Weckzeit: ");
     59e:	80 ea       	ldi	r24, 0xA0	; 160
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	59 de       	rcall	.-846    	; 0x256 <_Z10lcd_stringPKc>
					itoa(WStunden,Buffer,10);
     5a4:	4a e0       	ldi	r20, 0x0A	; 10
     5a6:	50 e0       	ldi	r21, 0x00	; 0
     5a8:	60 ef       	ldi	r22, 0xF0	; 240
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	80 91 0c 01 	lds	r24, 0x010C
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	6c d4       	rcall	.+2264   	; 0xe8c <itoa>
					lcd_string(Buffer);
     5b4:	80 ef       	ldi	r24, 0xF0	; 240
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	4e de       	rcall	.-868    	; 0x256 <_Z10lcd_stringPKc>
					lcd_string(":");
     5ba:	80 e8       	ldi	r24, 0x80	; 128
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	4b de       	rcall	.-874    	; 0x256 <_Z10lcd_stringPKc>
					itoa(WMinuten,Buffer,10);
     5c0:	4a e0       	ldi	r20, 0x0A	; 10
     5c2:	50 e0       	ldi	r21, 0x00	; 0
     5c4:	60 ef       	ldi	r22, 0xF0	; 240
     5c6:	70 e0       	ldi	r23, 0x00	; 0
     5c8:	80 91 0b 01 	lds	r24, 0x010B
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	5e d4       	rcall	.+2236   	; 0xe8c <itoa>
					lcd_string(Buffer);
     5d0:	80 ef       	ldi	r24, 0xF0	; 240
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	40 de       	rcall	.-896    	; 0x256 <_Z10lcd_stringPKc>
					
					break;
     5d6:	18 c0       	rjmp	.+48     	; 0x608 <_Z3aushh+0xe6>
			}
			break;
			
		case 2:
			lcd_setcursor(0,2);
     5d8:	62 e0       	ldi	r22, 0x02	; 2
     5da:	80 e0       	ldi	r24, 0x00	; 0
     5dc:	28 de       	rcall	.-944    	; 0x22e <_Z13lcd_setcursorhh>
				switch (pos)
     5de:	c1 30       	cpi	r28, 0x01	; 1
     5e0:	99 f4       	brne	.+38     	; 0x608 <_Z3aushh+0xe6>
					
						break;
						
					case 1:
						//Temperatur
						dtostrf(tempera,2,2,Buffer);
     5e2:	60 91 05 01 	lds	r22, 0x0105
     5e6:	70 91 06 01 	lds	r23, 0x0106
     5ea:	80 91 07 01 	lds	r24, 0x0107
     5ee:	90 91 08 01 	lds	r25, 0x0108
     5f2:	00 ef       	ldi	r16, 0xF0	; 240
     5f4:	10 e0       	ldi	r17, 0x00	; 0
     5f6:	22 e0       	ldi	r18, 0x02	; 2
     5f8:	42 e0       	ldi	r20, 0x02	; 2
     5fa:	28 d4       	rcall	.+2128   	; 0xe4c <dtostrf>
						lcd_string(Buffer);
     5fc:	c8 01       	movw	r24, r16
     5fe:	2b de       	rcall	.-938    	; 0x256 <_Z10lcd_stringPKc>
						lcd_data(0b11011111); //°
     600:	8f ed       	ldi	r24, 0xDF	; 223
     602:	bb dd       	rcall	.-1162   	; 0x17a <_Z8lcd_datah>
						lcd_data(0b01000011); //C
     604:	83 e4       	ldi	r24, 0x43	; 67
     606:	b9 dd       	rcall	.-1166   	; 0x17a <_Z8lcd_datah>
						
						break;
				}
			break;
	}
}
     608:	cf 91       	pop	r28
     60a:	1f 91       	pop	r17
     60c:	0f 91       	pop	r16
     60e:	08 95       	ret

00000610 <_Z8erhoehenPhhhPKc>:
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
     614:	e9 01       	movw	r28, r18
     616:	82 99       	sbic	0x10, 2	; 16
     618:	25 c0       	rjmp	.+74     	; 0x664 <_Z8erhoehenPhhhPKc+0x54>
     61a:	ef ef       	ldi	r30, 0xFF	; 255
     61c:	f3 eb       	ldi	r31, 0xB3	; 179
     61e:	31 97       	sbiw	r30, 0x01	; 1
     620:	f1 f7       	brne	.-4      	; 0x61e <_Z8erhoehenPhhhPKc+0xe>
     622:	00 c0       	rjmp	.+0      	; 0x624 <_Z8erhoehenPhhhPKc+0x14>
     624:	00 00       	nop
     626:	ef ef       	ldi	r30, 0xFF	; 255
     628:	f3 e2       	ldi	r31, 0x23	; 35
     62a:	31 97       	sbiw	r30, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <_Z8erhoehenPhhhPKc+0x1a>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <_Z8erhoehenPhhhPKc+0x20>
     630:	00 00       	nop
	if(debounce(&PIND,2))
     632:	82 99       	sbic	0x10, 2	; 16
     634:	17 c0       	rjmp	.+46     	; 0x664 <_Z8erhoehenPhhhPKc+0x54>
	{
		*var +=1 ;
     636:	fc 01       	movw	r30, r24
     638:	20 81       	ld	r18, Z
     63a:	2f 5f       	subi	r18, 0xFF	; 255
		if(*var>=obergrenze){
     63c:	26 17       	cp	r18, r22
     63e:	10 f4       	brcc	.+4      	; 0x644 <_Z8erhoehenPhhhPKc+0x34>
//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
	if(debounce(&PIND,2))
	{
		*var +=1 ;
     640:	20 83       	st	Z, r18
     642:	02 c0       	rjmp	.+4      	; 0x648 <_Z8erhoehenPhhhPKc+0x38>
		if(*var>=obergrenze){
			*var=0;
     644:	fc 01       	movw	r30, r24
     646:	10 82       	st	Z, r1
		}
		aus(1,pos);
     648:	64 2f       	mov	r22, r20
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	6a df       	rcall	.-300    	; 0x522 <_Z3aushh>
		aus(2,0);
     64e:	60 e0       	ldi	r22, 0x00	; 0
     650:	82 e0       	ldi	r24, 0x02	; 2
     652:	67 df       	rcall	.-306    	; 0x522 <_Z3aushh>
		while( *data != '\0' )
     654:	88 81       	ld	r24, Y
     656:	88 23       	and	r24, r24
     658:	29 f0       	breq	.+10     	; 0x664 <_Z8erhoehenPhhhPKc+0x54>
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     65a:	21 96       	adiw	r28, 0x01	; 1
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
		lcd_data( *data++ );
     65c:	8e dd       	rcall	.-1252   	; 0x17a <_Z8lcd_datah>
		if(*var>=obergrenze){
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
     65e:	89 91       	ld	r24, Y+
     660:	81 11       	cpse	r24, r1
     662:	fc cf       	rjmp	.-8      	; 0x65c <_Z8erhoehenPhhhPKc+0x4c>
		lcd_data( *data++ );
		
	}
}
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	08 95       	ret

0000066a <_Z5einsth>:


//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
     66a:	1f 93       	push	r17
     66c:	cf 93       	push	r28
     66e:	df 93       	push	r29
	uint8_t temp=0;
	//abfrage wass eingestellt werden soll
	switch (posit)
     670:	82 30       	cpi	r24, 0x02	; 2
     672:	09 f4       	brne	.+2      	; 0x676 <_Z5einsth+0xc>
     674:	a9 c0       	rjmp	.+338    	; 0x7c8 <_Z5einsth+0x15e>
     676:	30 f4       	brcc	.+12     	; 0x684 <_Z5einsth+0x1a>
     678:	88 23       	and	r24, r24
     67a:	59 f0       	breq	.+22     	; 0x692 <_Z5einsth+0x28>
     67c:	81 30       	cpi	r24, 0x01	; 1
     67e:	09 f0       	breq	.+2      	; 0x682 <_Z5einsth+0x18>
     680:	41 c1       	rjmp	.+642    	; 0x904 <_Z5einsth+0x29a>
     682:	5f c0       	rjmp	.+190    	; 0x742 <_Z5einsth+0xd8>
     684:	83 30       	cpi	r24, 0x03	; 3
     686:	09 f4       	brne	.+2      	; 0x68a <_Z5einsth+0x20>
     688:	d2 c0       	rjmp	.+420    	; 0x82e <_Z5einsth+0x1c4>
     68a:	84 30       	cpi	r24, 0x04	; 4
     68c:	09 f0       	breq	.+2      	; 0x690 <_Z5einsth+0x26>
     68e:	3a c1       	rjmp	.+628    	; 0x904 <_Z5einsth+0x29a>
     690:	ed c0       	rjmp	.+474    	; 0x86c <_Z5einsth+0x202>
	{
	case 0:
		//Einstellen Zeit
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,3);
     692:	63 e0       	ldi	r22, 0x03	; 3
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	45 df       	rcall	.-374    	; 0x522 <_Z3aushh>

//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
	uint8_t temp=0;
     698:	c0 e0       	ldi	r28, 0x00	; 0
     69a:	83 99       	sbic	0x10, 3	; 16
     69c:	27 c0       	rjmp	.+78     	; 0x6ec <_Z5einsth+0x82>
     69e:	8f ef       	ldi	r24, 0xFF	; 255
     6a0:	93 eb       	ldi	r25, 0xB3	; 179
     6a2:	01 97       	sbiw	r24, 0x01	; 1
     6a4:	f1 f7       	brne	.-4      	; 0x6a2 <_Z5einsth+0x38>
     6a6:	00 c0       	rjmp	.+0      	; 0x6a8 <_Z5einsth+0x3e>
     6a8:	00 00       	nop
     6aa:	8f ef       	ldi	r24, 0xFF	; 255
     6ac:	93 e2       	ldi	r25, 0x23	; 35
     6ae:	01 97       	sbiw	r24, 0x01	; 1
     6b0:	f1 f7       	brne	.-4      	; 0x6ae <_Z5einsth+0x44>
     6b2:	00 c0       	rjmp	.+0      	; 0x6b4 <_Z5einsth+0x4a>
     6b4:	00 00       	nop
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,3);
		while(temp<3)
		{
			if(debounce(&PIND,3))
     6b6:	83 99       	sbic	0x10, 3	; 16
     6b8:	19 c0       	rjmp	.+50     	; 0x6ec <_Z5einsth+0x82>
			{
				temp++;
     6ba:	cf 5f       	subi	r28, 0xFF	; 255
				lcd_clear();
     6bc:	7a dd       	rcall	.-1292   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,3);
     6be:	63 e0       	ldi	r22, 0x03	; 3
     6c0:	81 e0       	ldi	r24, 0x01	; 1
     6c2:	2f df       	rcall	.-418    	; 0x522 <_Z3aushh>
				aus(2,0);
     6c4:	60 e0       	ldi	r22, 0x00	; 0
     6c6:	82 e0       	ldi	r24, 0x02	; 2
     6c8:	2c df       	rcall	.-424    	; 0x522 <_Z3aushh>
				switch (temp)
     6ca:	c1 30       	cpi	r28, 0x01	; 1
     6cc:	41 f0       	breq	.+16     	; 0x6de <_Z5einsth+0x74>
     6ce:	18 f0       	brcs	.+6      	; 0x6d6 <_Z5einsth+0x6c>
     6d0:	c2 30       	cpi	r28, 0x02	; 2
     6d2:	61 f4       	brne	.+24     	; 0x6ec <_Z5einsth+0x82>
     6d4:	08 c0       	rjmp	.+16     	; 0x6e6 <_Z5einsth+0x7c>
				{
					case 0:
						lcd_string(NAME(Stunden));
     6d6:	8c ec       	ldi	r24, 0xCC	; 204
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	bd dd       	rcall	.-1158   	; 0x256 <_Z10lcd_stringPKc>
						break;
     6dc:	07 c0       	rjmp	.+14     	; 0x6ec <_Z5einsth+0x82>
					case 1:
						lcd_string(NAME(Minuten));
     6de:	85 ed       	ldi	r24, 0xD5	; 213
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	b9 dd       	rcall	.-1166   	; 0x256 <_Z10lcd_stringPKc>
						break;
     6e4:	03 c0       	rjmp	.+6      	; 0x6ec <_Z5einsth+0x82>
					case 2:
						lcd_string(NAME(WochenTag));
     6e6:	8b ea       	ldi	r24, 0xAB	; 171
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	b5 dd       	rcall	.-1174   	; 0x256 <_Z10lcd_stringPKc>
						break;
					default:
						break;
				}
			}
			if(Sekunden!=sektemp){
     6ec:	90 91 10 01 	lds	r25, 0x0110
     6f0:	80 91 09 01 	lds	r24, 0x0109
     6f4:	98 13       	cpse	r25, r24
				zeit();
     6f6:	e1 dd       	rcall	.-1086   	; 0x2ba <_Z4zeitv>
				//ausgabe(0);
				//Es muss eine richtge Ausgabe speziell fuer dieses Einstellung geschrieben werden
				//besonders wichtig ist, dass die alte Ausgaba ersetzt werden muss
			}
			switch (temp)
     6f8:	c1 30       	cpi	r28, 0x01	; 1
     6fa:	61 f0       	breq	.+24     	; 0x714 <_Z5einsth+0xaa>
     6fc:	18 f0       	brcs	.+6      	; 0x704 <_Z5einsth+0x9a>
     6fe:	c2 30       	cpi	r28, 0x02	; 2
     700:	c9 f4       	brne	.+50     	; 0x734 <_Z5einsth+0xca>
     702:	10 c0       	rjmp	.+32     	; 0x724 <_Z5einsth+0xba>
			{
			case 0:
				erhoehen(&Stunden,60,3,NAME(Stunden));
     704:	2c ec       	ldi	r18, 0xCC	; 204
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	43 e0       	ldi	r20, 0x03	; 3
     70a:	6c e3       	ldi	r22, 0x3C	; 60
     70c:	8e e0       	ldi	r24, 0x0E	; 14
     70e:	91 e0       	ldi	r25, 0x01	; 1
     710:	7f df       	rcall	.-258    	; 0x610 <_Z8erhoehenPhhhPKc>
				break;
     712:	c3 cf       	rjmp	.-122    	; 0x69a <_Z5einsth+0x30>
			case 1:
				erhoehen(&Minuten,60,3,NAME(Minuten));
     714:	25 ed       	ldi	r18, 0xD5	; 213
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	43 e0       	ldi	r20, 0x03	; 3
     71a:	6c e3       	ldi	r22, 0x3C	; 60
     71c:	8f e0       	ldi	r24, 0x0F	; 15
     71e:	91 e0       	ldi	r25, 0x01	; 1
     720:	77 df       	rcall	.-274    	; 0x610 <_Z8erhoehenPhhhPKc>
				break;
     722:	bb cf       	rjmp	.-138    	; 0x69a <_Z5einsth+0x30>
			case 2:
				//nur jetzt WochenTag
				erhoehen(&WochenTag,7,3,NAME(WochenTag));
     724:	2b ea       	ldi	r18, 0xAB	; 171
     726:	30 e0       	ldi	r19, 0x00	; 0
     728:	43 e0       	ldi	r20, 0x03	; 3
     72a:	67 e0       	ldi	r22, 0x07	; 7
     72c:	8d e0       	ldi	r24, 0x0D	; 13
     72e:	91 e0       	ldi	r25, 0x01	; 1
     730:	6f df       	rcall	.-290    	; 0x610 <_Z8erhoehenPhhhPKc>
				break;
     732:	b3 cf       	rjmp	.-154    	; 0x69a <_Z5einsth+0x30>
	case 0:
		//Einstellen Zeit
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,3);
		while(temp<3)
     734:	c3 30       	cpi	r28, 0x03	; 3
     736:	08 f4       	brcc	.+2      	; 0x73a <_Z5einsth+0xd0>
     738:	b0 cf       	rjmp	.-160    	; 0x69a <_Z5einsth+0x30>
				break;
			default:
				break;
			}
		}
		Sekunden=0;
     73a:	10 92 10 01 	sts	0x0110, r1
		return 0;
     73e:	80 e0       	ldi	r24, 0x00	; 0
     740:	e6 c0       	rjmp	.+460    	; 0x90e <_Z5einsth+0x2a4>
		break;
	case 1:
		//Einstellen der Tage
		temp = 0;
		aus(1,0);
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	ed de       	rcall	.-550    	; 0x522 <_Z3aushh>
		Sekunden=0;
		return 0;
		break;
	case 1:
		//Einstellen der Tage
		temp = 0;
     748:	c0 e0       	ldi	r28, 0x00	; 0
     74a:	83 99       	sbic	0x10, 3	; 16
     74c:	15 c0       	rjmp	.+42     	; 0x778 <_Z5einsth+0x10e>
     74e:	8f ef       	ldi	r24, 0xFF	; 255
     750:	93 eb       	ldi	r25, 0xB3	; 179
     752:	01 97       	sbiw	r24, 0x01	; 1
     754:	f1 f7       	brne	.-4      	; 0x752 <_Z5einsth+0xe8>
     756:	00 c0       	rjmp	.+0      	; 0x758 <_Z5einsth+0xee>
     758:	00 00       	nop
     75a:	8f ef       	ldi	r24, 0xFF	; 255
     75c:	93 e2       	ldi	r25, 0x23	; 35
     75e:	01 97       	sbiw	r24, 0x01	; 1
     760:	f1 f7       	brne	.-4      	; 0x75e <_Z5einsth+0xf4>
     762:	00 c0       	rjmp	.+0      	; 0x764 <_Z5einsth+0xfa>
     764:	00 00       	nop
		aus(1,0);
		while(temp< 3)
		{
			if(debounce(&PIND,3))
     766:	83 99       	sbic	0x10, 3	; 16
     768:	07 c0       	rjmp	.+14     	; 0x778 <_Z5einsth+0x10e>
			{
				temp++;
     76a:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,0);
     76c:	60 e0       	ldi	r22, 0x00	; 0
     76e:	81 e0       	ldi	r24, 0x01	; 1
     770:	d8 de       	rcall	.-592    	; 0x522 <_Z3aushh>
				aus(2,0);
     772:	60 e0       	ldi	r22, 0x00	; 0
     774:	82 e0       	ldi	r24, 0x02	; 2
     776:	d5 de       	rcall	.-598    	; 0x522 <_Z3aushh>
			}
			if(Sekunden!=sektemp){
     778:	90 91 10 01 	lds	r25, 0x0110
     77c:	80 91 09 01 	lds	r24, 0x0109
     780:	98 13       	cpse	r25, r24
				zeit();
     782:	9b dd       	rcall	.-1226   	; 0x2ba <_Z4zeitv>
			}
			switch (temp){
     784:	c1 30       	cpi	r28, 0x01	; 1
     786:	61 f0       	breq	.+24     	; 0x7a0 <_Z5einsth+0x136>
     788:	18 f0       	brcs	.+6      	; 0x790 <_Z5einsth+0x126>
     78a:	c2 30       	cpi	r28, 0x02	; 2
     78c:	c9 f4       	brne	.+50     	; 0x7c0 <_Z5einsth+0x156>
     78e:	10 c0       	rjmp	.+32     	; 0x7b0 <_Z5einsth+0x146>
			case 0:
				erhoehen(&Tag,30,0,NAME(Tag));
     790:	2a e8       	ldi	r18, 0x8A	; 138
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	40 e0       	ldi	r20, 0x00	; 0
     796:	6e e1       	ldi	r22, 0x1E	; 30
     798:	82 e6       	ldi	r24, 0x62	; 98
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	39 df       	rcall	.-398    	; 0x610 <_Z8erhoehenPhhhPKc>
				break;
     79e:	d5 cf       	rjmp	.-86     	; 0x74a <_Z5einsth+0xe0>
			case 1:
				erhoehen(&Monat,12,0,NAME(Monat));
     7a0:	25 eb       	ldi	r18, 0xB5	; 181
     7a2:	30 e0       	ldi	r19, 0x00	; 0
     7a4:	40 e0       	ldi	r20, 0x00	; 0
     7a6:	6c e0       	ldi	r22, 0x0C	; 12
     7a8:	81 e6       	ldi	r24, 0x61	; 97
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	31 df       	rcall	.-414    	; 0x610 <_Z8erhoehenPhhhPKc>
				break;
     7ae:	cd cf       	rjmp	.-102    	; 0x74a <_Z5einsth+0xe0>
			case 2:
				erhoehen(&Jahr,30,0,NAME(Jahr));
     7b0:	2b eb       	ldi	r18, 0xBB	; 187
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	40 e0       	ldi	r20, 0x00	; 0
     7b6:	6e e1       	ldi	r22, 0x1E	; 30
     7b8:	80 e6       	ldi	r24, 0x60	; 96
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	29 df       	rcall	.-430    	; 0x610 <_Z8erhoehenPhhhPKc>
				break;
     7be:	c5 cf       	rjmp	.-118    	; 0x74a <_Z5einsth+0xe0>
		break;
	case 1:
		//Einstellen der Tage
		temp = 0;
		aus(1,0);
		while(temp< 3)
     7c0:	c3 30       	cpi	r28, 0x03	; 3
     7c2:	18 f2       	brcs	.-122    	; 0x74a <_Z5einsth+0xe0>
				break;
			default:
				break;
			}
		}
		return 0;
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	a3 c0       	rjmp	.+326    	; 0x90e <_Z5einsth+0x2a4>
     7c8:	83 99       	sbic	0x10, 3	; 16
     7ca:	0e c0       	rjmp	.+28     	; 0x7e8 <_Z5einsth+0x17e>
     7cc:	8f ef       	ldi	r24, 0xFF	; 255
     7ce:	93 eb       	ldi	r25, 0xB3	; 179
     7d0:	01 97       	sbiw	r24, 0x01	; 1
     7d2:	f1 f7       	brne	.-4      	; 0x7d0 <_Z5einsth+0x166>
     7d4:	00 c0       	rjmp	.+0      	; 0x7d6 <_Z5einsth+0x16c>
     7d6:	00 00       	nop
     7d8:	8f ef       	ldi	r24, 0xFF	; 255
     7da:	93 e2       	ldi	r25, 0x23	; 35
     7dc:	01 97       	sbiw	r24, 0x01	; 1
     7de:	f1 f7       	brne	.-4      	; 0x7dc <_Z5einsth+0x172>
     7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <_Z5einsth+0x178>
     7e2:	00 00       	nop
		break;
	case 2:
		//Einstellen Sekundenoffset
		//default =0
		while(debounce(&PIND,3));
     7e4:	83 9b       	sbis	0x10, 3	; 16
     7e6:	f0 cf       	rjmp	.-32     	; 0x7c8 <_Z5einsth+0x15e>
		{
			if(Sekunden!=sektemp){
     7e8:	90 91 10 01 	lds	r25, 0x0110
     7ec:	80 91 09 01 	lds	r24, 0x0109
     7f0:	98 13       	cpse	r25, r24
				zeit();
     7f2:	63 dd       	rcall	.-1338   	; 0x2ba <_Z4zeitv>
     7f4:	82 99       	sbic	0x10, 2	; 16
     7f6:	88 c0       	rjmp	.+272    	; 0x908 <_Z5einsth+0x29e>
     7f8:	8f ef       	ldi	r24, 0xFF	; 255
     7fa:	93 eb       	ldi	r25, 0xB3	; 179
     7fc:	01 97       	sbiw	r24, 0x01	; 1
     7fe:	f1 f7       	brne	.-4      	; 0x7fc <_Z5einsth+0x192>
     800:	00 c0       	rjmp	.+0      	; 0x802 <_Z5einsth+0x198>
     802:	00 00       	nop
     804:	8f ef       	ldi	r24, 0xFF	; 255
     806:	93 e2       	ldi	r25, 0x23	; 35
     808:	01 97       	sbiw	r24, 0x01	; 1
     80a:	f1 f7       	brne	.-4      	; 0x808 <_Z5einsth+0x19e>
     80c:	00 c0       	rjmp	.+0      	; 0x80e <_Z5einsth+0x1a4>
     80e:	00 00       	nop
			}
			if(debounce(&PIND,2)){
     810:	82 99       	sbic	0x10, 2	; 16
     812:	7c c0       	rjmp	.+248    	; 0x90c <_Z5einsth+0x2a2>
				sekoffset++;
     814:	80 91 04 01 	lds	r24, 0x0104
     818:	8f 5f       	subi	r24, 0xFF	; 255
				if (sekoffset==10)
     81a:	8a 30       	cpi	r24, 0x0A	; 10
     81c:	21 f0       	breq	.+8      	; 0x826 <_Z5einsth+0x1bc>
		{
			if(Sekunden!=sektemp){
				zeit();
			}
			if(debounce(&PIND,2)){
				sekoffset++;
     81e:	80 93 04 01 	sts	0x0104, r24
					sekoffset=0;
				}
					
			}
		}
		return 0;
     822:	80 e0       	ldi	r24, 0x00	; 0
     824:	74 c0       	rjmp	.+232    	; 0x90e <_Z5einsth+0x2a4>
			}
			if(debounce(&PIND,2)){
				sekoffset++;
				if (sekoffset==10)
				{
					sekoffset=0;
     826:	10 92 04 01 	sts	0x0104, r1
				}
					
			}
		}
		return 0;
     82a:	80 e0       	ldi	r24, 0x00	; 0
     82c:	70 c0       	rjmp	.+224    	; 0x90e <_Z5einsth+0x2a4>
     82e:	83 99       	sbic	0x10, 3	; 16
     830:	0e c0       	rjmp	.+28     	; 0x84e <_Z5einsth+0x1e4>
     832:	8f ef       	ldi	r24, 0xFF	; 255
     834:	93 eb       	ldi	r25, 0xB3	; 179
     836:	01 97       	sbiw	r24, 0x01	; 1
     838:	f1 f7       	brne	.-4      	; 0x836 <_Z5einsth+0x1cc>
     83a:	00 c0       	rjmp	.+0      	; 0x83c <_Z5einsth+0x1d2>
     83c:	00 00       	nop
     83e:	8f ef       	ldi	r24, 0xFF	; 255
     840:	93 e2       	ldi	r25, 0x23	; 35
     842:	01 97       	sbiw	r24, 0x01	; 1
     844:	f1 f7       	brne	.-4      	; 0x842 <_Z5einsth+0x1d8>
     846:	00 c0       	rjmp	.+0      	; 0x848 <_Z5einsth+0x1de>
     848:	00 00       	nop
		break;
	case 3:
		//Einstellen Temperaturoffset
		//default = 0;
		while(debounce(&PIND,3));
     84a:	83 9b       	sbis	0x10, 3	; 16
     84c:	f0 cf       	rjmp	.-32     	; 0x82e <_Z5einsth+0x1c4>
		{
			if(Sekunden!=sektemp){
     84e:	90 91 10 01 	lds	r25, 0x0110
     852:	80 91 09 01 	lds	r24, 0x0109
     856:	98 13       	cpse	r25, r24
				zeit();
     858:	30 dd       	rcall	.-1440   	; 0x2ba <_Z4zeitv>
			}
			erhoehen(&tempoffset,10,3,NAME(tempoffset));
     85a:	20 ec       	ldi	r18, 0xC0	; 192
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	43 e0       	ldi	r20, 0x03	; 3
     860:	6a e0       	ldi	r22, 0x0A	; 10
     862:	83 e6       	ldi	r24, 0x63	; 99
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	d4 de       	rcall	.-600    	; 0x610 <_Z8erhoehenPhhhPKc>
		}
		return 0;
     868:	80 e0       	ldi	r24, 0x00	; 0
     86a:	51 c0       	rjmp	.+162    	; 0x90e <_Z5einsth+0x2a4>
		break;
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
     86c:	65 e0       	ldi	r22, 0x05	; 5
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	58 de       	rcall	.-848    	; 0x522 <_Z3aushh>
			erhoehen(&tempoffset,10,3,NAME(tempoffset));
		}
		return 0;
		break;
	case 4: //Wecker einstellen
		temp = 0;
     872:	c0 e0       	ldi	r28, 0x00	; 0
				case 0:
					erhoehen(&WStunden,24,5,NAME(WStunden));
					break;
				case 1:
					erhoehen(&WMinuten,60,5,NAME(WMinuten));
					break;
     874:	11 e0       	ldi	r17, 0x01	; 1
			}
			switch (temp)
			{
				case 0:
					erhoehen(&WStunden,24,5,NAME(WStunden));
					break;
     876:	d0 e0       	ldi	r29, 0x00	; 0
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
		while (temp<2)
		{
			if (Sekunden!=sektemp)
     878:	20 91 10 01 	lds	r18, 0x0110
     87c:	90 91 09 01 	lds	r25, 0x0109
     880:	29 13       	cpse	r18, r25
			{
				zeit();
     882:	1b dd       	rcall	.-1482   	; 0x2ba <_Z4zeitv>
     884:	83 99       	sbic	0x10, 3	; 16
     886:	22 c0       	rjmp	.+68     	; 0x8cc <_Z5einsth+0x262>
     888:	8f ef       	ldi	r24, 0xFF	; 255
     88a:	93 eb       	ldi	r25, 0xB3	; 179
     88c:	01 97       	sbiw	r24, 0x01	; 1
     88e:	f1 f7       	brne	.-4      	; 0x88c <_Z5einsth+0x222>
     890:	00 c0       	rjmp	.+0      	; 0x892 <_Z5einsth+0x228>
     892:	00 00       	nop
     894:	8f ef       	ldi	r24, 0xFF	; 255
     896:	93 e2       	ldi	r25, 0x23	; 35
     898:	01 97       	sbiw	r24, 0x01	; 1
     89a:	f1 f7       	brne	.-4      	; 0x898 <_Z5einsth+0x22e>
     89c:	00 c0       	rjmp	.+0      	; 0x89e <_Z5einsth+0x234>
     89e:	00 00       	nop
			}
			if(debounce(&PIND,3))
     8a0:	83 99       	sbic	0x10, 3	; 16
     8a2:	14 c0       	rjmp	.+40     	; 0x8cc <_Z5einsth+0x262>
			{
				temp++;
     8a4:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,5);
     8a6:	65 e0       	ldi	r22, 0x05	; 5
     8a8:	81 2f       	mov	r24, r17
     8aa:	3b de       	rcall	.-906    	; 0x522 <_Z3aushh>
				aus(2,0);
     8ac:	6d 2f       	mov	r22, r29
     8ae:	82 e0       	ldi	r24, 0x02	; 2
     8b0:	38 de       	rcall	.-912    	; 0x522 <_Z3aushh>
				switch (temp)
     8b2:	cc 23       	and	r28, r28
     8b4:	19 f0       	breq	.+6      	; 0x8bc <_Z5einsth+0x252>
     8b6:	c1 30       	cpi	r28, 0x01	; 1
     8b8:	49 f4       	brne	.+18     	; 0x8cc <_Z5einsth+0x262>
     8ba:	04 c0       	rjmp	.+8      	; 0x8c4 <_Z5einsth+0x25a>
				{
					case 0:
						lcd_string(NAME(WStunden));
     8bc:	8b ec       	ldi	r24, 0xCB	; 203
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	ca dc       	rcall	.-1644   	; 0x256 <_Z10lcd_stringPKc>
     8c2:	09 c0       	rjmp	.+18     	; 0x8d6 <_Z5einsth+0x26c>
						break;
					case 1:
						lcd_string(NAME(WMinuten));
     8c4:	84 ed       	ldi	r24, 0xD4	; 212
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	c6 dc       	rcall	.-1652   	; 0x256 <_Z10lcd_stringPKc>
     8ca:	0e c0       	rjmp	.+28     	; 0x8e8 <_Z5einsth+0x27e>
						break;
					default:
						break;
				}
			}
			switch (temp)
     8cc:	cc 23       	and	r28, r28
     8ce:	19 f0       	breq	.+6      	; 0x8d6 <_Z5einsth+0x26c>
     8d0:	c1 30       	cpi	r28, 0x01	; 1
     8d2:	99 f4       	brne	.+38     	; 0x8fa <_Z5einsth+0x290>
     8d4:	09 c0       	rjmp	.+18     	; 0x8e8 <_Z5einsth+0x27e>
			{
				case 0:
					erhoehen(&WStunden,24,5,NAME(WStunden));
     8d6:	2b ec       	ldi	r18, 0xCB	; 203
     8d8:	30 e0       	ldi	r19, 0x00	; 0
     8da:	45 e0       	ldi	r20, 0x05	; 5
     8dc:	68 e1       	ldi	r22, 0x18	; 24
     8de:	8c e0       	ldi	r24, 0x0C	; 12
     8e0:	91 e0       	ldi	r25, 0x01	; 1
     8e2:	96 de       	rcall	.-724    	; 0x610 <_Z8erhoehenPhhhPKc>
					break;
     8e4:	cd 2f       	mov	r28, r29
     8e6:	c8 cf       	rjmp	.-112    	; 0x878 <_Z5einsth+0x20e>
				case 1:
					erhoehen(&WMinuten,60,5,NAME(WMinuten));
     8e8:	24 ed       	ldi	r18, 0xD4	; 212
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	45 e0       	ldi	r20, 0x05	; 5
     8ee:	6c e3       	ldi	r22, 0x3C	; 60
     8f0:	8b e0       	ldi	r24, 0x0B	; 11
     8f2:	91 e0       	ldi	r25, 0x01	; 1
     8f4:	8d de       	rcall	.-742    	; 0x610 <_Z8erhoehenPhhhPKc>
					break;
     8f6:	c1 2f       	mov	r28, r17
     8f8:	bf cf       	rjmp	.-130    	; 0x878 <_Z5einsth+0x20e>
		return 0;
		break;
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
		while (temp<2)
     8fa:	c2 30       	cpi	r28, 0x02	; 2
     8fc:	08 f4       	brcc	.+2      	; 0x900 <_Z5einsth+0x296>
     8fe:	bc cf       	rjmp	.-136    	; 0x878 <_Z5einsth+0x20e>
					erhoehen(&WMinuten,60,5,NAME(WMinuten));
					break;
			}
			
		}
		return 0;
     900:	80 e0       	ldi	r24, 0x00	; 0
     902:	05 c0       	rjmp	.+10     	; 0x90e <_Z5einsth+0x2a4>
		break;
//	case //alle einstellungen der Wecker
//		return 0;
//		break;
	default:
		return 1;
     904:	81 e0       	ldi	r24, 0x01	; 1
     906:	03 c0       	rjmp	.+6      	; 0x90e <_Z5einsth+0x2a4>
					sekoffset=0;
				}
					
			}
		}
		return 0;
     908:	80 e0       	ldi	r24, 0x00	; 0
     90a:	01 c0       	rjmp	.+2      	; 0x90e <_Z5einsth+0x2a4>
     90c:	80 e0       	ldi	r24, 0x00	; 0
//		break;
	default:
		return 1;
		break;
	}
}
     90e:	df 91       	pop	r29
     910:	cf 91       	pop	r28
     912:	1f 91       	pop	r17
     914:	08 95       	ret

00000916 <_Z10zeitsetzenv>:

#ifndef EINSTELLUNGEN_H_
#define EINSTELLUNGEN_H_

void zeitsetzen(){
	Minuten = 34;
     916:	82 e2       	ldi	r24, 0x22	; 34
     918:	80 93 0f 01 	sts	0x010F, r24
	Stunden	= 5;
     91c:	85 e0       	ldi	r24, 0x05	; 5
     91e:	80 93 0e 01 	sts	0x010E, r24
	Sekunden = 0;
     922:	10 92 10 01 	sts	0x0110, r1
	WochenTag=6;
     926:	96 e0       	ldi	r25, 0x06	; 6
     928:	90 93 0d 01 	sts	0x010D, r25
	WStunden=5;
     92c:	80 93 0c 01 	sts	0x010C, r24
	WMinuten=35;
     930:	83 e2       	ldi	r24, 0x23	; 35
     932:	80 93 0b 01 	sts	0x010B, r24
//	einsweck();
//	einstzeit();
	einst(4);
     936:	84 e0       	ldi	r24, 0x04	; 4
     938:	98 de       	rcall	.-720    	; 0x66a <_Z5einsth>
//	einst(1); //Noch keinen Kalender, da er in den Einstellungen zu komplex ist
	einst(0);
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	96 de       	rcall	.-724    	; 0x66a <_Z5einsth>
	sekoffset=1;
     93e:	81 e0       	ldi	r24, 0x01	; 1
     940:	80 93 04 01 	sts	0x0104, r24
     944:	08 95       	ret

00000946 <_Z4menuv>:
#define MENUE_H_

uint8_t menu(){
	uint8_t pos = 0;
	bool stop = true;
	while (!debounce(&PIND,PD4))
     946:	3e c0       	rjmp	.+124    	; 0x9c4 <_Z4menuv+0x7e>
	{
		switch (pos)
		{
			case 0:
				//Weckzeit anzeigen und einstellen mit PD2
				aus(1,5);
     948:	65 e0       	ldi	r22, 0x05	; 5
     94a:	81 e0       	ldi	r24, 0x01	; 1
     94c:	ea dd       	rcall	.-1068   	; 0x522 <_Z3aushh>
				aus(2,0);
     94e:	60 e0       	ldi	r22, 0x00	; 0
     950:	82 e0       	ldi	r24, 0x02	; 2
     952:	e7 dd       	rcall	.-1074   	; 0x522 <_Z3aushh>
				lcd_string("Werktags");
     954:	8d ed       	ldi	r24, 0xDD	; 221
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	7e dc       	rcall	.-1796   	; 0x256 <_Z10lcd_stringPKc>
     95a:	82 99       	sbic	0x10, 2	; 16
     95c:	13 c0       	rjmp	.+38     	; 0x984 <_Z4menuv+0x3e>
     95e:	8f ef       	ldi	r24, 0xFF	; 255
     960:	93 eb       	ldi	r25, 0xB3	; 179
     962:	01 97       	sbiw	r24, 0x01	; 1
     964:	f1 f7       	brne	.-4      	; 0x962 <_Z4menuv+0x1c>
     966:	00 c0       	rjmp	.+0      	; 0x968 <_Z4menuv+0x22>
     968:	00 00       	nop
     96a:	8f ef       	ldi	r24, 0xFF	; 255
     96c:	93 e2       	ldi	r25, 0x23	; 35
     96e:	01 97       	sbiw	r24, 0x01	; 1
     970:	f1 f7       	brne	.-4      	; 0x96e <_Z4menuv+0x28>
     972:	00 c0       	rjmp	.+0      	; 0x974 <_Z4menuv+0x2e>
     974:	00 00       	nop
				while(stop)
				{
					if (debounce(&PIND,PD2))
     976:	82 99       	sbic	0x10, 2	; 16
     978:	05 c0       	rjmp	.+10     	; 0x984 <_Z4menuv+0x3e>
					{
						einst(4);
     97a:	84 e0       	ldi	r24, 0x04	; 4
     97c:	76 de       	rcall	.-788    	; 0x66a <_Z5einsth>
						lcd_string("Werktags");
     97e:	8d ed       	ldi	r24, 0xDD	; 221
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	69 dc       	rcall	.-1838   	; 0x256 <_Z10lcd_stringPKc>
     984:	84 99       	sbic	0x10, 4	; 16
     986:	0e c0       	rjmp	.+28     	; 0x9a4 <_Z4menuv+0x5e>
     988:	8f ef       	ldi	r24, 0xFF	; 255
     98a:	93 eb       	ldi	r25, 0xB3	; 179
     98c:	01 97       	sbiw	r24, 0x01	; 1
     98e:	f1 f7       	brne	.-4      	; 0x98c <_Z4menuv+0x46>
     990:	00 c0       	rjmp	.+0      	; 0x992 <_Z4menuv+0x4c>
     992:	00 00       	nop
     994:	8f ef       	ldi	r24, 0xFF	; 255
     996:	93 e2       	ldi	r25, 0x23	; 35
     998:	01 97       	sbiw	r24, 0x01	; 1
     99a:	f1 f7       	brne	.-4      	; 0x998 <_Z4menuv+0x52>
     99c:	00 c0       	rjmp	.+0      	; 0x99e <_Z4menuv+0x58>
     99e:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     9a0:	84 9b       	sbis	0x10, 4	; 16
     9a2:	22 c0       	rjmp	.+68     	; 0x9e8 <_Z4menuv+0xa2>
     9a4:	83 99       	sbic	0x10, 3	; 16
     9a6:	d9 cf       	rjmp	.-78     	; 0x95a <_Z4menuv+0x14>
     9a8:	8f ef       	ldi	r24, 0xFF	; 255
     9aa:	93 eb       	ldi	r25, 0xB3	; 179
     9ac:	01 97       	sbiw	r24, 0x01	; 1
     9ae:	f1 f7       	brne	.-4      	; 0x9ac <_Z4menuv+0x66>
     9b0:	00 c0       	rjmp	.+0      	; 0x9b2 <_Z4menuv+0x6c>
     9b2:	00 00       	nop
     9b4:	8f ef       	ldi	r24, 0xFF	; 255
     9b6:	93 e2       	ldi	r25, 0x23	; 35
     9b8:	01 97       	sbiw	r24, 0x01	; 1
     9ba:	f1 f7       	brne	.-4      	; 0x9b8 <_Z4menuv+0x72>
     9bc:	00 c0       	rjmp	.+0      	; 0x9be <_Z4menuv+0x78>
     9be:	00 00       	nop
					{
						return 1;
					}
					if (debounce(&PIND,PD3))
     9c0:	83 99       	sbic	0x10, 3	; 16
     9c2:	cb cf       	rjmp	.-106    	; 0x95a <_Z4menuv+0x14>
     9c4:	84 99       	sbic	0x10, 4	; 16
     9c6:	c0 cf       	rjmp	.-128    	; 0x948 <_Z4menuv+0x2>
     9c8:	8f ef       	ldi	r24, 0xFF	; 255
     9ca:	93 eb       	ldi	r25, 0xB3	; 179
     9cc:	01 97       	sbiw	r24, 0x01	; 1
     9ce:	f1 f7       	brne	.-4      	; 0x9cc <_Z4menuv+0x86>
     9d0:	00 c0       	rjmp	.+0      	; 0x9d2 <_Z4menuv+0x8c>
     9d2:	00 00       	nop
     9d4:	8f ef       	ldi	r24, 0xFF	; 255
     9d6:	93 e2       	ldi	r25, 0x23	; 35
     9d8:	01 97       	sbiw	r24, 0x01	; 1
     9da:	f1 f7       	brne	.-4      	; 0x9d8 <_Z4menuv+0x92>
     9dc:	00 c0       	rjmp	.+0      	; 0x9de <_Z4menuv+0x98>
     9de:	00 00       	nop
#define MENUE_H_

uint8_t menu(){
	uint8_t pos = 0;
	bool stop = true;
	while (!debounce(&PIND,PD4))
     9e0:	84 99       	sbic	0x10, 4	; 16
     9e2:	b2 cf       	rjmp	.-156    	; 0x948 <_Z4menuv+0x2>
			default:
				break;
		}
		pos=0;
	}
return 0;
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	08 95       	ret
						einst(4);
						lcd_string("Werktags");
					}
					if (debounce(&PIND,PD4))
					{
						return 1;
     9e8:	81 e0       	ldi	r24, 0x01	; 1
				break;
		}
		pos=0;
	}
return 0;
}
     9ea:	08 95       	ret

000009ec <_Z4initv>:
}

void init(){
	//LCD einstellen und erste Ausgabe
	lcd_init();
     9ec:	e9 db       	rcall	.-2094   	; 0x1c0 <_Z8lcd_initv>
	aus(1,4);
     9ee:	64 e0       	ldi	r22, 0x04	; 4
     9f0:	81 e0       	ldi	r24, 0x01	; 1
     9f2:	97 dd       	rcall	.-1234   	; 0x522 <_Z3aushh>
     9f4:	2f ef       	ldi	r18, 0xFF	; 255
     9f6:	8f ed       	ldi	r24, 0xDF	; 223
     9f8:	90 e1       	ldi	r25, 0x10	; 16
     9fa:	21 50       	subi	r18, 0x01	; 1
     9fc:	80 40       	sbci	r24, 0x00	; 0
     9fe:	90 40       	sbci	r25, 0x00	; 0
     a00:	e1 f7       	brne	.-8      	; 0x9fa <_Z4initv+0xe>
     a02:	00 c0       	rjmp	.+0      	; 0xa04 <_Z4initv+0x18>
     a04:	00 00       	nop
	//lcd_string("Wecker");
	//lcd_setcursor( 0, 2 );
	//lcd_string("Start!");
	_delay_ms(1500);
	lcd_clear();
     a06:	d5 db       	rcall	.-2134   	; 0x1b2 <_Z9lcd_clearv>
	//SPCR = (1<<SPE) | (1<<MSTR) | (1<<DORD);
	//SPSR = (1<<SPI2X);
	//SPDR = 0;
	
	//ADC
	ADMUX = (1<<REFS0);
     a08:	80 e4       	ldi	r24, 0x40	; 64
     a0a:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
     a0c:	83 e0       	ldi	r24, 0x03	; 3
     a0e:	86 b9       	out	0x06, r24	; 6
	ADCSRA |= (1<<ADEN);
     a10:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1<<ADSC);
     a12:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     a14:	36 99       	sbic	0x06, 6	; 6
     a16:	fe cf       	rjmp	.-4      	; 0xa14 <_Z4initv+0x28>
	}
	(void) ADCW;
     a18:	84 b1       	in	r24, 0x04	; 4
     a1a:	95 b1       	in	r25, 0x05	; 5
	
	//Eingänge
	PORTD |= (1<<PD2) | (1<<PD3) | (1<<PD4);
     a1c:	82 b3       	in	r24, 0x12	; 18
     a1e:	8c 61       	ori	r24, 0x1C	; 28
     a20:	82 bb       	out	0x12, r24	; 18
	
	//Ausgänge
	DDRC = (1<<PC5);
     a22:	80 e2       	ldi	r24, 0x20	; 32
     a24:	84 bb       	out	0x14, r24	; 20
	
	//erste zeiteinstellung
	zeitsetzen();
     a26:	77 df       	rcall	.-274    	; 0x916 <_Z10zeitsetzenv>
	
	//Timer 1 Einstelungen
	TCNT1H = 0b11110001;
     a28:	81 ef       	ldi	r24, 0xF1	; 241
     a2a:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     a2c:	80 ef       	ldi	r24, 0xF0	; 240
     a2e:	8c bd       	out	0x2c, r24	; 44
	TIMSK = (1<<TOIE1);
     a30:	84 e0       	ldi	r24, 0x04	; 4
     a32:	89 bf       	out	0x39, r24	; 57
	TCCR1B = (1<<CS10) | (1<<CS12);
     a34:	85 e0       	ldi	r24, 0x05	; 5
     a36:	8e bd       	out	0x2e, r24	; 46
	
	//Interupts aktivieren
	sei();
     a38:	78 94       	sei
	
	//Wecker einschalten
	Wan=0;
     a3a:	10 92 0a 01 	sts	0x010A, r1
     a3e:	08 95       	ret

00000a40 <__vector_8>:
#include "einstellungen.h"
#include "zeit.h"
#include "menue.h"
#include "ausgabe.h"

ISR(TIMER1_OVF_vect){
     a40:	1f 92       	push	r1
     a42:	0f 92       	push	r0
     a44:	0f b6       	in	r0, 0x3f	; 63
     a46:	0f 92       	push	r0
     a48:	11 24       	eor	r1, r1
     a4a:	8f 93       	push	r24
	TCNT1H = 0b11110001;
     a4c:	81 ef       	ldi	r24, 0xF1	; 241
     a4e:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     a50:	80 ef       	ldi	r24, 0xF0	; 240
     a52:	8c bd       	out	0x2c, r24	; 44
	Sekunden++;
     a54:	80 91 10 01 	lds	r24, 0x0110
     a58:	8f 5f       	subi	r24, 0xFF	; 255
     a5a:	80 93 10 01 	sts	0x0110, r24
}
     a5e:	8f 91       	pop	r24
     a60:	0f 90       	pop	r0
     a62:	0f be       	out	0x3f, r0	; 63
     a64:	0f 90       	pop	r0
     a66:	1f 90       	pop	r1
     a68:	18 95       	reti

00000a6a <main>:

int main(void)
{
	init();
     a6a:	c0 df       	rcall	.-128    	; 0x9ec <_Z4initv>
	
	while(1)
	{
		if (Sekunden!=sektemp)
     a6c:	90 91 10 01 	lds	r25, 0x0110
     a70:	80 91 09 01 	lds	r24, 0x0109
     a74:	98 17       	cp	r25, r24
     a76:	39 f0       	breq	.+14     	; 0xa86 <main+0x1c>
		{
			zeit();
     a78:	20 dc       	rcall	.-1984   	; 0x2ba <_Z4zeitv>
			aus(1,3);
     a7a:	63 e0       	ldi	r22, 0x03	; 3
     a7c:	81 e0       	ldi	r24, 0x01	; 1
     a7e:	51 dd       	rcall	.-1374   	; 0x522 <_Z3aushh>
			aus(2,1);
     a80:	61 e0       	ldi	r22, 0x01	; 1
     a82:	82 e0       	ldi	r24, 0x02	; 2
     a84:	4e dd       	rcall	.-1380   	; 0x522 <_Z3aushh>
     a86:	82 99       	sbic	0x10, 2	; 16
     a88:	11 c0       	rjmp	.+34     	; 0xaac <main+0x42>
     a8a:	8f ef       	ldi	r24, 0xFF	; 255
     a8c:	93 eb       	ldi	r25, 0xB3	; 179
     a8e:	01 97       	sbiw	r24, 0x01	; 1
     a90:	f1 f7       	brne	.-4      	; 0xa8e <main+0x24>
     a92:	00 c0       	rjmp	.+0      	; 0xa94 <main+0x2a>
     a94:	00 00       	nop
     a96:	8f ef       	ldi	r24, 0xFF	; 255
     a98:	93 e2       	ldi	r25, 0x23	; 35
     a9a:	01 97       	sbiw	r24, 0x01	; 1
     a9c:	f1 f7       	brne	.-4      	; 0xa9a <main+0x30>
     a9e:	00 c0       	rjmp	.+0      	; 0xaa0 <main+0x36>
     aa0:	00 00       	nop
			//ausgabe(1);
		}
		if(debounce(&PIND,2))
     aa2:	82 99       	sbic	0x10, 2	; 16
     aa4:	03 c0       	rjmp	.+6      	; 0xaac <main+0x42>
		{
			Wan=0;
     aa6:	10 92 0a 01 	sts	0x010A, r1
			PORTC &= ~(1<<PC5);
     aaa:	ad 98       	cbi	0x15, 5	; 21
     aac:	84 99       	sbic	0x10, 4	; 16
     aae:	de cf       	rjmp	.-68     	; 0xa6c <main+0x2>
     ab0:	8f ef       	ldi	r24, 0xFF	; 255
     ab2:	93 eb       	ldi	r25, 0xB3	; 179
     ab4:	01 97       	sbiw	r24, 0x01	; 1
     ab6:	f1 f7       	brne	.-4      	; 0xab4 <main+0x4a>
     ab8:	00 c0       	rjmp	.+0      	; 0xaba <main+0x50>
     aba:	00 00       	nop
     abc:	8f ef       	ldi	r24, 0xFF	; 255
     abe:	93 e2       	ldi	r25, 0x23	; 35
     ac0:	01 97       	sbiw	r24, 0x01	; 1
     ac2:	f1 f7       	brne	.-4      	; 0xac0 <main+0x56>
     ac4:	00 c0       	rjmp	.+0      	; 0xac6 <main+0x5c>
     ac6:	00 00       	nop
		}
		if (debounce(&PIND,PD4))
     ac8:	84 99       	sbic	0x10, 4	; 16
     aca:	d0 cf       	rjmp	.-96     	; 0xa6c <main+0x2>
		{
			menu();
     acc:	3c df       	rcall	.-392    	; 0x946 <_Z4menuv>
     ace:	ce cf       	rjmp	.-100    	; 0xa6c <main+0x2>

00000ad0 <__subsf3>:
     ad0:	50 58       	subi	r21, 0x80	; 128

00000ad2 <__addsf3>:
     ad2:	bb 27       	eor	r27, r27
     ad4:	aa 27       	eor	r26, r26
     ad6:	0e d0       	rcall	.+28     	; 0xaf4 <__addsf3x>
     ad8:	1c c1       	rjmp	.+568    	; 0xd12 <__fp_round>
     ada:	0d d1       	rcall	.+538    	; 0xcf6 <__fp_pscA>
     adc:	30 f0       	brcs	.+12     	; 0xaea <__addsf3+0x18>
     ade:	12 d1       	rcall	.+548    	; 0xd04 <__fp_pscB>
     ae0:	20 f0       	brcs	.+8      	; 0xaea <__addsf3+0x18>
     ae2:	31 f4       	brne	.+12     	; 0xaf0 <__addsf3+0x1e>
     ae4:	9f 3f       	cpi	r25, 0xFF	; 255
     ae6:	11 f4       	brne	.+4      	; 0xaec <__addsf3+0x1a>
     ae8:	1e f4       	brtc	.+6      	; 0xaf0 <__addsf3+0x1e>
     aea:	02 c1       	rjmp	.+516    	; 0xcf0 <__fp_nan>
     aec:	0e f4       	brtc	.+2      	; 0xaf0 <__addsf3+0x1e>
     aee:	e0 95       	com	r30
     af0:	e7 fb       	bst	r30, 7
     af2:	f8 c0       	rjmp	.+496    	; 0xce4 <__fp_inf>

00000af4 <__addsf3x>:
     af4:	e9 2f       	mov	r30, r25
     af6:	1e d1       	rcall	.+572    	; 0xd34 <__fp_split3>
     af8:	80 f3       	brcs	.-32     	; 0xada <__addsf3+0x8>
     afa:	ba 17       	cp	r27, r26
     afc:	62 07       	cpc	r22, r18
     afe:	73 07       	cpc	r23, r19
     b00:	84 07       	cpc	r24, r20
     b02:	95 07       	cpc	r25, r21
     b04:	18 f0       	brcs	.+6      	; 0xb0c <__addsf3x+0x18>
     b06:	71 f4       	brne	.+28     	; 0xb24 <__addsf3x+0x30>
     b08:	9e f5       	brtc	.+102    	; 0xb70 <__addsf3x+0x7c>
     b0a:	36 c1       	rjmp	.+620    	; 0xd78 <__fp_zero>
     b0c:	0e f4       	brtc	.+2      	; 0xb10 <__addsf3x+0x1c>
     b0e:	e0 95       	com	r30
     b10:	0b 2e       	mov	r0, r27
     b12:	ba 2f       	mov	r27, r26
     b14:	a0 2d       	mov	r26, r0
     b16:	0b 01       	movw	r0, r22
     b18:	b9 01       	movw	r22, r18
     b1a:	90 01       	movw	r18, r0
     b1c:	0c 01       	movw	r0, r24
     b1e:	ca 01       	movw	r24, r20
     b20:	a0 01       	movw	r20, r0
     b22:	11 24       	eor	r1, r1
     b24:	ff 27       	eor	r31, r31
     b26:	59 1b       	sub	r21, r25
     b28:	99 f0       	breq	.+38     	; 0xb50 <__addsf3x+0x5c>
     b2a:	59 3f       	cpi	r21, 0xF9	; 249
     b2c:	50 f4       	brcc	.+20     	; 0xb42 <__addsf3x+0x4e>
     b2e:	50 3e       	cpi	r21, 0xE0	; 224
     b30:	68 f1       	brcs	.+90     	; 0xb8c <__addsf3x+0x98>
     b32:	1a 16       	cp	r1, r26
     b34:	f0 40       	sbci	r31, 0x00	; 0
     b36:	a2 2f       	mov	r26, r18
     b38:	23 2f       	mov	r18, r19
     b3a:	34 2f       	mov	r19, r20
     b3c:	44 27       	eor	r20, r20
     b3e:	58 5f       	subi	r21, 0xF8	; 248
     b40:	f3 cf       	rjmp	.-26     	; 0xb28 <__addsf3x+0x34>
     b42:	46 95       	lsr	r20
     b44:	37 95       	ror	r19
     b46:	27 95       	ror	r18
     b48:	a7 95       	ror	r26
     b4a:	f0 40       	sbci	r31, 0x00	; 0
     b4c:	53 95       	inc	r21
     b4e:	c9 f7       	brne	.-14     	; 0xb42 <__addsf3x+0x4e>
     b50:	7e f4       	brtc	.+30     	; 0xb70 <__addsf3x+0x7c>
     b52:	1f 16       	cp	r1, r31
     b54:	ba 0b       	sbc	r27, r26
     b56:	62 0b       	sbc	r22, r18
     b58:	73 0b       	sbc	r23, r19
     b5a:	84 0b       	sbc	r24, r20
     b5c:	ba f0       	brmi	.+46     	; 0xb8c <__addsf3x+0x98>
     b5e:	91 50       	subi	r25, 0x01	; 1
     b60:	a1 f0       	breq	.+40     	; 0xb8a <__addsf3x+0x96>
     b62:	ff 0f       	add	r31, r31
     b64:	bb 1f       	adc	r27, r27
     b66:	66 1f       	adc	r22, r22
     b68:	77 1f       	adc	r23, r23
     b6a:	88 1f       	adc	r24, r24
     b6c:	c2 f7       	brpl	.-16     	; 0xb5e <__addsf3x+0x6a>
     b6e:	0e c0       	rjmp	.+28     	; 0xb8c <__addsf3x+0x98>
     b70:	ba 0f       	add	r27, r26
     b72:	62 1f       	adc	r22, r18
     b74:	73 1f       	adc	r23, r19
     b76:	84 1f       	adc	r24, r20
     b78:	48 f4       	brcc	.+18     	; 0xb8c <__addsf3x+0x98>
     b7a:	87 95       	ror	r24
     b7c:	77 95       	ror	r23
     b7e:	67 95       	ror	r22
     b80:	b7 95       	ror	r27
     b82:	f7 95       	ror	r31
     b84:	9e 3f       	cpi	r25, 0xFE	; 254
     b86:	08 f0       	brcs	.+2      	; 0xb8a <__addsf3x+0x96>
     b88:	b3 cf       	rjmp	.-154    	; 0xaf0 <__addsf3+0x1e>
     b8a:	93 95       	inc	r25
     b8c:	88 0f       	add	r24, r24
     b8e:	08 f0       	brcs	.+2      	; 0xb92 <__addsf3x+0x9e>
     b90:	99 27       	eor	r25, r25
     b92:	ee 0f       	add	r30, r30
     b94:	97 95       	ror	r25
     b96:	87 95       	ror	r24
     b98:	08 95       	ret

00000b9a <__divsf3>:
     b9a:	0c d0       	rcall	.+24     	; 0xbb4 <__divsf3x>
     b9c:	ba c0       	rjmp	.+372    	; 0xd12 <__fp_round>
     b9e:	b2 d0       	rcall	.+356    	; 0xd04 <__fp_pscB>
     ba0:	40 f0       	brcs	.+16     	; 0xbb2 <__divsf3+0x18>
     ba2:	a9 d0       	rcall	.+338    	; 0xcf6 <__fp_pscA>
     ba4:	30 f0       	brcs	.+12     	; 0xbb2 <__divsf3+0x18>
     ba6:	21 f4       	brne	.+8      	; 0xbb0 <__divsf3+0x16>
     ba8:	5f 3f       	cpi	r21, 0xFF	; 255
     baa:	19 f0       	breq	.+6      	; 0xbb2 <__divsf3+0x18>
     bac:	9b c0       	rjmp	.+310    	; 0xce4 <__fp_inf>
     bae:	51 11       	cpse	r21, r1
     bb0:	e4 c0       	rjmp	.+456    	; 0xd7a <__fp_szero>
     bb2:	9e c0       	rjmp	.+316    	; 0xcf0 <__fp_nan>

00000bb4 <__divsf3x>:
     bb4:	bf d0       	rcall	.+382    	; 0xd34 <__fp_split3>
     bb6:	98 f3       	brcs	.-26     	; 0xb9e <__divsf3+0x4>

00000bb8 <__divsf3_pse>:
     bb8:	99 23       	and	r25, r25
     bba:	c9 f3       	breq	.-14     	; 0xbae <__divsf3+0x14>
     bbc:	55 23       	and	r21, r21
     bbe:	b1 f3       	breq	.-20     	; 0xbac <__divsf3+0x12>
     bc0:	95 1b       	sub	r25, r21
     bc2:	55 0b       	sbc	r21, r21
     bc4:	bb 27       	eor	r27, r27
     bc6:	aa 27       	eor	r26, r26
     bc8:	62 17       	cp	r22, r18
     bca:	73 07       	cpc	r23, r19
     bcc:	84 07       	cpc	r24, r20
     bce:	38 f0       	brcs	.+14     	; 0xbde <__divsf3_pse+0x26>
     bd0:	9f 5f       	subi	r25, 0xFF	; 255
     bd2:	5f 4f       	sbci	r21, 0xFF	; 255
     bd4:	22 0f       	add	r18, r18
     bd6:	33 1f       	adc	r19, r19
     bd8:	44 1f       	adc	r20, r20
     bda:	aa 1f       	adc	r26, r26
     bdc:	a9 f3       	breq	.-22     	; 0xbc8 <__divsf3_pse+0x10>
     bde:	33 d0       	rcall	.+102    	; 0xc46 <__divsf3_pse+0x8e>
     be0:	0e 2e       	mov	r0, r30
     be2:	3a f0       	brmi	.+14     	; 0xbf2 <__divsf3_pse+0x3a>
     be4:	e0 e8       	ldi	r30, 0x80	; 128
     be6:	30 d0       	rcall	.+96     	; 0xc48 <__divsf3_pse+0x90>
     be8:	91 50       	subi	r25, 0x01	; 1
     bea:	50 40       	sbci	r21, 0x00	; 0
     bec:	e6 95       	lsr	r30
     bee:	00 1c       	adc	r0, r0
     bf0:	ca f7       	brpl	.-14     	; 0xbe4 <__divsf3_pse+0x2c>
     bf2:	29 d0       	rcall	.+82     	; 0xc46 <__divsf3_pse+0x8e>
     bf4:	fe 2f       	mov	r31, r30
     bf6:	27 d0       	rcall	.+78     	; 0xc46 <__divsf3_pse+0x8e>
     bf8:	66 0f       	add	r22, r22
     bfa:	77 1f       	adc	r23, r23
     bfc:	88 1f       	adc	r24, r24
     bfe:	bb 1f       	adc	r27, r27
     c00:	26 17       	cp	r18, r22
     c02:	37 07       	cpc	r19, r23
     c04:	48 07       	cpc	r20, r24
     c06:	ab 07       	cpc	r26, r27
     c08:	b0 e8       	ldi	r27, 0x80	; 128
     c0a:	09 f0       	breq	.+2      	; 0xc0e <__divsf3_pse+0x56>
     c0c:	bb 0b       	sbc	r27, r27
     c0e:	80 2d       	mov	r24, r0
     c10:	bf 01       	movw	r22, r30
     c12:	ff 27       	eor	r31, r31
     c14:	93 58       	subi	r25, 0x83	; 131
     c16:	5f 4f       	sbci	r21, 0xFF	; 255
     c18:	2a f0       	brmi	.+10     	; 0xc24 <__divsf3_pse+0x6c>
     c1a:	9e 3f       	cpi	r25, 0xFE	; 254
     c1c:	51 05       	cpc	r21, r1
     c1e:	68 f0       	brcs	.+26     	; 0xc3a <__divsf3_pse+0x82>
     c20:	61 c0       	rjmp	.+194    	; 0xce4 <__fp_inf>
     c22:	ab c0       	rjmp	.+342    	; 0xd7a <__fp_szero>
     c24:	5f 3f       	cpi	r21, 0xFF	; 255
     c26:	ec f3       	brlt	.-6      	; 0xc22 <__divsf3_pse+0x6a>
     c28:	98 3e       	cpi	r25, 0xE8	; 232
     c2a:	dc f3       	brlt	.-10     	; 0xc22 <__divsf3_pse+0x6a>
     c2c:	86 95       	lsr	r24
     c2e:	77 95       	ror	r23
     c30:	67 95       	ror	r22
     c32:	b7 95       	ror	r27
     c34:	f7 95       	ror	r31
     c36:	9f 5f       	subi	r25, 0xFF	; 255
     c38:	c9 f7       	brne	.-14     	; 0xc2c <__divsf3_pse+0x74>
     c3a:	88 0f       	add	r24, r24
     c3c:	91 1d       	adc	r25, r1
     c3e:	96 95       	lsr	r25
     c40:	87 95       	ror	r24
     c42:	97 f9       	bld	r25, 7
     c44:	08 95       	ret
     c46:	e1 e0       	ldi	r30, 0x01	; 1
     c48:	66 0f       	add	r22, r22
     c4a:	77 1f       	adc	r23, r23
     c4c:	88 1f       	adc	r24, r24
     c4e:	bb 1f       	adc	r27, r27
     c50:	62 17       	cp	r22, r18
     c52:	73 07       	cpc	r23, r19
     c54:	84 07       	cpc	r24, r20
     c56:	ba 07       	cpc	r27, r26
     c58:	20 f0       	brcs	.+8      	; 0xc62 <__divsf3_pse+0xaa>
     c5a:	62 1b       	sub	r22, r18
     c5c:	73 0b       	sbc	r23, r19
     c5e:	84 0b       	sbc	r24, r20
     c60:	ba 0b       	sbc	r27, r26
     c62:	ee 1f       	adc	r30, r30
     c64:	88 f7       	brcc	.-30     	; 0xc48 <__divsf3_pse+0x90>
     c66:	e0 95       	com	r30
     c68:	08 95       	ret

00000c6a <__floatunsisf>:
     c6a:	e8 94       	clt
     c6c:	09 c0       	rjmp	.+18     	; 0xc80 <__floatsisf+0x12>

00000c6e <__floatsisf>:
     c6e:	97 fb       	bst	r25, 7
     c70:	3e f4       	brtc	.+14     	; 0xc80 <__floatsisf+0x12>
     c72:	90 95       	com	r25
     c74:	80 95       	com	r24
     c76:	70 95       	com	r23
     c78:	61 95       	neg	r22
     c7a:	7f 4f       	sbci	r23, 0xFF	; 255
     c7c:	8f 4f       	sbci	r24, 0xFF	; 255
     c7e:	9f 4f       	sbci	r25, 0xFF	; 255
     c80:	99 23       	and	r25, r25
     c82:	a9 f0       	breq	.+42     	; 0xcae <__floatsisf+0x40>
     c84:	f9 2f       	mov	r31, r25
     c86:	96 e9       	ldi	r25, 0x96	; 150
     c88:	bb 27       	eor	r27, r27
     c8a:	93 95       	inc	r25
     c8c:	f6 95       	lsr	r31
     c8e:	87 95       	ror	r24
     c90:	77 95       	ror	r23
     c92:	67 95       	ror	r22
     c94:	b7 95       	ror	r27
     c96:	f1 11       	cpse	r31, r1
     c98:	f8 cf       	rjmp	.-16     	; 0xc8a <__floatsisf+0x1c>
     c9a:	fa f4       	brpl	.+62     	; 0xcda <__floatsisf+0x6c>
     c9c:	bb 0f       	add	r27, r27
     c9e:	11 f4       	brne	.+4      	; 0xca4 <__floatsisf+0x36>
     ca0:	60 ff       	sbrs	r22, 0
     ca2:	1b c0       	rjmp	.+54     	; 0xcda <__floatsisf+0x6c>
     ca4:	6f 5f       	subi	r22, 0xFF	; 255
     ca6:	7f 4f       	sbci	r23, 0xFF	; 255
     ca8:	8f 4f       	sbci	r24, 0xFF	; 255
     caa:	9f 4f       	sbci	r25, 0xFF	; 255
     cac:	16 c0       	rjmp	.+44     	; 0xcda <__floatsisf+0x6c>
     cae:	88 23       	and	r24, r24
     cb0:	11 f0       	breq	.+4      	; 0xcb6 <__floatsisf+0x48>
     cb2:	96 e9       	ldi	r25, 0x96	; 150
     cb4:	11 c0       	rjmp	.+34     	; 0xcd8 <__floatsisf+0x6a>
     cb6:	77 23       	and	r23, r23
     cb8:	21 f0       	breq	.+8      	; 0xcc2 <__floatsisf+0x54>
     cba:	9e e8       	ldi	r25, 0x8E	; 142
     cbc:	87 2f       	mov	r24, r23
     cbe:	76 2f       	mov	r23, r22
     cc0:	05 c0       	rjmp	.+10     	; 0xccc <__floatsisf+0x5e>
     cc2:	66 23       	and	r22, r22
     cc4:	71 f0       	breq	.+28     	; 0xce2 <__floatsisf+0x74>
     cc6:	96 e8       	ldi	r25, 0x86	; 134
     cc8:	86 2f       	mov	r24, r22
     cca:	70 e0       	ldi	r23, 0x00	; 0
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	2a f0       	brmi	.+10     	; 0xcda <__floatsisf+0x6c>
     cd0:	9a 95       	dec	r25
     cd2:	66 0f       	add	r22, r22
     cd4:	77 1f       	adc	r23, r23
     cd6:	88 1f       	adc	r24, r24
     cd8:	da f7       	brpl	.-10     	; 0xcd0 <__floatsisf+0x62>
     cda:	88 0f       	add	r24, r24
     cdc:	96 95       	lsr	r25
     cde:	87 95       	ror	r24
     ce0:	97 f9       	bld	r25, 7
     ce2:	08 95       	ret

00000ce4 <__fp_inf>:
     ce4:	97 f9       	bld	r25, 7
     ce6:	9f 67       	ori	r25, 0x7F	; 127
     ce8:	80 e8       	ldi	r24, 0x80	; 128
     cea:	70 e0       	ldi	r23, 0x00	; 0
     cec:	60 e0       	ldi	r22, 0x00	; 0
     cee:	08 95       	ret

00000cf0 <__fp_nan>:
     cf0:	9f ef       	ldi	r25, 0xFF	; 255
     cf2:	80 ec       	ldi	r24, 0xC0	; 192
     cf4:	08 95       	ret

00000cf6 <__fp_pscA>:
     cf6:	00 24       	eor	r0, r0
     cf8:	0a 94       	dec	r0
     cfa:	16 16       	cp	r1, r22
     cfc:	17 06       	cpc	r1, r23
     cfe:	18 06       	cpc	r1, r24
     d00:	09 06       	cpc	r0, r25
     d02:	08 95       	ret

00000d04 <__fp_pscB>:
     d04:	00 24       	eor	r0, r0
     d06:	0a 94       	dec	r0
     d08:	12 16       	cp	r1, r18
     d0a:	13 06       	cpc	r1, r19
     d0c:	14 06       	cpc	r1, r20
     d0e:	05 06       	cpc	r0, r21
     d10:	08 95       	ret

00000d12 <__fp_round>:
     d12:	09 2e       	mov	r0, r25
     d14:	03 94       	inc	r0
     d16:	00 0c       	add	r0, r0
     d18:	11 f4       	brne	.+4      	; 0xd1e <__fp_round+0xc>
     d1a:	88 23       	and	r24, r24
     d1c:	52 f0       	brmi	.+20     	; 0xd32 <__fp_round+0x20>
     d1e:	bb 0f       	add	r27, r27
     d20:	40 f4       	brcc	.+16     	; 0xd32 <__fp_round+0x20>
     d22:	bf 2b       	or	r27, r31
     d24:	11 f4       	brne	.+4      	; 0xd2a <__fp_round+0x18>
     d26:	60 ff       	sbrs	r22, 0
     d28:	04 c0       	rjmp	.+8      	; 0xd32 <__fp_round+0x20>
     d2a:	6f 5f       	subi	r22, 0xFF	; 255
     d2c:	7f 4f       	sbci	r23, 0xFF	; 255
     d2e:	8f 4f       	sbci	r24, 0xFF	; 255
     d30:	9f 4f       	sbci	r25, 0xFF	; 255
     d32:	08 95       	ret

00000d34 <__fp_split3>:
     d34:	57 fd       	sbrc	r21, 7
     d36:	90 58       	subi	r25, 0x80	; 128
     d38:	44 0f       	add	r20, r20
     d3a:	55 1f       	adc	r21, r21
     d3c:	59 f0       	breq	.+22     	; 0xd54 <__fp_splitA+0x10>
     d3e:	5f 3f       	cpi	r21, 0xFF	; 255
     d40:	71 f0       	breq	.+28     	; 0xd5e <__fp_splitA+0x1a>
     d42:	47 95       	ror	r20

00000d44 <__fp_splitA>:
     d44:	88 0f       	add	r24, r24
     d46:	97 fb       	bst	r25, 7
     d48:	99 1f       	adc	r25, r25
     d4a:	61 f0       	breq	.+24     	; 0xd64 <__fp_splitA+0x20>
     d4c:	9f 3f       	cpi	r25, 0xFF	; 255
     d4e:	79 f0       	breq	.+30     	; 0xd6e <__fp_splitA+0x2a>
     d50:	87 95       	ror	r24
     d52:	08 95       	ret
     d54:	12 16       	cp	r1, r18
     d56:	13 06       	cpc	r1, r19
     d58:	14 06       	cpc	r1, r20
     d5a:	55 1f       	adc	r21, r21
     d5c:	f2 cf       	rjmp	.-28     	; 0xd42 <__fp_split3+0xe>
     d5e:	46 95       	lsr	r20
     d60:	f1 df       	rcall	.-30     	; 0xd44 <__fp_splitA>
     d62:	08 c0       	rjmp	.+16     	; 0xd74 <__fp_splitA+0x30>
     d64:	16 16       	cp	r1, r22
     d66:	17 06       	cpc	r1, r23
     d68:	18 06       	cpc	r1, r24
     d6a:	99 1f       	adc	r25, r25
     d6c:	f1 cf       	rjmp	.-30     	; 0xd50 <__fp_splitA+0xc>
     d6e:	86 95       	lsr	r24
     d70:	71 05       	cpc	r23, r1
     d72:	61 05       	cpc	r22, r1
     d74:	08 94       	sec
     d76:	08 95       	ret

00000d78 <__fp_zero>:
     d78:	e8 94       	clt

00000d7a <__fp_szero>:
     d7a:	bb 27       	eor	r27, r27
     d7c:	66 27       	eor	r22, r22
     d7e:	77 27       	eor	r23, r23
     d80:	cb 01       	movw	r24, r22
     d82:	97 f9       	bld	r25, 7
     d84:	08 95       	ret

00000d86 <__mulsf3>:
     d86:	0b d0       	rcall	.+22     	; 0xd9e <__mulsf3x>
     d88:	c4 cf       	rjmp	.-120    	; 0xd12 <__fp_round>
     d8a:	b5 df       	rcall	.-150    	; 0xcf6 <__fp_pscA>
     d8c:	28 f0       	brcs	.+10     	; 0xd98 <__mulsf3+0x12>
     d8e:	ba df       	rcall	.-140    	; 0xd04 <__fp_pscB>
     d90:	18 f0       	brcs	.+6      	; 0xd98 <__mulsf3+0x12>
     d92:	95 23       	and	r25, r21
     d94:	09 f0       	breq	.+2      	; 0xd98 <__mulsf3+0x12>
     d96:	a6 cf       	rjmp	.-180    	; 0xce4 <__fp_inf>
     d98:	ab cf       	rjmp	.-170    	; 0xcf0 <__fp_nan>
     d9a:	11 24       	eor	r1, r1
     d9c:	ee cf       	rjmp	.-36     	; 0xd7a <__fp_szero>

00000d9e <__mulsf3x>:
     d9e:	ca df       	rcall	.-108    	; 0xd34 <__fp_split3>
     da0:	a0 f3       	brcs	.-24     	; 0xd8a <__mulsf3+0x4>

00000da2 <__mulsf3_pse>:
     da2:	95 9f       	mul	r25, r21
     da4:	d1 f3       	breq	.-12     	; 0xd9a <__mulsf3+0x14>
     da6:	95 0f       	add	r25, r21
     da8:	50 e0       	ldi	r21, 0x00	; 0
     daa:	55 1f       	adc	r21, r21
     dac:	62 9f       	mul	r22, r18
     dae:	f0 01       	movw	r30, r0
     db0:	72 9f       	mul	r23, r18
     db2:	bb 27       	eor	r27, r27
     db4:	f0 0d       	add	r31, r0
     db6:	b1 1d       	adc	r27, r1
     db8:	63 9f       	mul	r22, r19
     dba:	aa 27       	eor	r26, r26
     dbc:	f0 0d       	add	r31, r0
     dbe:	b1 1d       	adc	r27, r1
     dc0:	aa 1f       	adc	r26, r26
     dc2:	64 9f       	mul	r22, r20
     dc4:	66 27       	eor	r22, r22
     dc6:	b0 0d       	add	r27, r0
     dc8:	a1 1d       	adc	r26, r1
     dca:	66 1f       	adc	r22, r22
     dcc:	82 9f       	mul	r24, r18
     dce:	22 27       	eor	r18, r18
     dd0:	b0 0d       	add	r27, r0
     dd2:	a1 1d       	adc	r26, r1
     dd4:	62 1f       	adc	r22, r18
     dd6:	73 9f       	mul	r23, r19
     dd8:	b0 0d       	add	r27, r0
     dda:	a1 1d       	adc	r26, r1
     ddc:	62 1f       	adc	r22, r18
     dde:	83 9f       	mul	r24, r19
     de0:	a0 0d       	add	r26, r0
     de2:	61 1d       	adc	r22, r1
     de4:	22 1f       	adc	r18, r18
     de6:	74 9f       	mul	r23, r20
     de8:	33 27       	eor	r19, r19
     dea:	a0 0d       	add	r26, r0
     dec:	61 1d       	adc	r22, r1
     dee:	23 1f       	adc	r18, r19
     df0:	84 9f       	mul	r24, r20
     df2:	60 0d       	add	r22, r0
     df4:	21 1d       	adc	r18, r1
     df6:	82 2f       	mov	r24, r18
     df8:	76 2f       	mov	r23, r22
     dfa:	6a 2f       	mov	r22, r26
     dfc:	11 24       	eor	r1, r1
     dfe:	9f 57       	subi	r25, 0x7F	; 127
     e00:	50 40       	sbci	r21, 0x00	; 0
     e02:	8a f0       	brmi	.+34     	; 0xe26 <__mulsf3_pse+0x84>
     e04:	e1 f0       	breq	.+56     	; 0xe3e <__mulsf3_pse+0x9c>
     e06:	88 23       	and	r24, r24
     e08:	4a f0       	brmi	.+18     	; 0xe1c <__mulsf3_pse+0x7a>
     e0a:	ee 0f       	add	r30, r30
     e0c:	ff 1f       	adc	r31, r31
     e0e:	bb 1f       	adc	r27, r27
     e10:	66 1f       	adc	r22, r22
     e12:	77 1f       	adc	r23, r23
     e14:	88 1f       	adc	r24, r24
     e16:	91 50       	subi	r25, 0x01	; 1
     e18:	50 40       	sbci	r21, 0x00	; 0
     e1a:	a9 f7       	brne	.-22     	; 0xe06 <__mulsf3_pse+0x64>
     e1c:	9e 3f       	cpi	r25, 0xFE	; 254
     e1e:	51 05       	cpc	r21, r1
     e20:	70 f0       	brcs	.+28     	; 0xe3e <__mulsf3_pse+0x9c>
     e22:	60 cf       	rjmp	.-320    	; 0xce4 <__fp_inf>
     e24:	aa cf       	rjmp	.-172    	; 0xd7a <__fp_szero>
     e26:	5f 3f       	cpi	r21, 0xFF	; 255
     e28:	ec f3       	brlt	.-6      	; 0xe24 <__mulsf3_pse+0x82>
     e2a:	98 3e       	cpi	r25, 0xE8	; 232
     e2c:	dc f3       	brlt	.-10     	; 0xe24 <__mulsf3_pse+0x82>
     e2e:	86 95       	lsr	r24
     e30:	77 95       	ror	r23
     e32:	67 95       	ror	r22
     e34:	b7 95       	ror	r27
     e36:	f7 95       	ror	r31
     e38:	e7 95       	ror	r30
     e3a:	9f 5f       	subi	r25, 0xFF	; 255
     e3c:	c1 f7       	brne	.-16     	; 0xe2e <__mulsf3_pse+0x8c>
     e3e:	fe 2b       	or	r31, r30
     e40:	88 0f       	add	r24, r24
     e42:	91 1d       	adc	r25, r1
     e44:	96 95       	lsr	r25
     e46:	87 95       	ror	r24
     e48:	97 f9       	bld	r25, 7
     e4a:	08 95       	ret

00000e4c <dtostrf>:
     e4c:	ef 92       	push	r14
     e4e:	0f 93       	push	r16
     e50:	1f 93       	push	r17
     e52:	cf 93       	push	r28
     e54:	c0 2f       	mov	r28, r16
     e56:	47 ff       	sbrs	r20, 7
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <dtostrf+0x12>
     e5a:	34 e1       	ldi	r19, 0x14	; 20
     e5c:	01 c0       	rjmp	.+2      	; 0xe60 <dtostrf+0x14>
     e5e:	34 e0       	ldi	r19, 0x04	; 4
     e60:	e4 2f       	mov	r30, r20
     e62:	ff 27       	eor	r31, r31
     e64:	e7 fd       	sbrc	r30, 7
     e66:	f0 95       	com	r31
     e68:	f7 ff       	sbrs	r31, 7
     e6a:	03 c0       	rjmp	.+6      	; 0xe72 <dtostrf+0x26>
     e6c:	f1 95       	neg	r31
     e6e:	e1 95       	neg	r30
     e70:	f1 09       	sbc	r31, r1
     e72:	e3 2e       	mov	r14, r19
     e74:	02 2f       	mov	r16, r18
     e76:	2e 2f       	mov	r18, r30
     e78:	4c 2f       	mov	r20, r28
     e7a:	51 2f       	mov	r21, r17
     e7c:	26 d0       	rcall	.+76     	; 0xeca <dtoa_prf>
     e7e:	8c 2f       	mov	r24, r28
     e80:	91 2f       	mov	r25, r17
     e82:	cf 91       	pop	r28
     e84:	1f 91       	pop	r17
     e86:	0f 91       	pop	r16
     e88:	ef 90       	pop	r14
     e8a:	08 95       	ret

00000e8c <itoa>:
     e8c:	fb 01       	movw	r30, r22
     e8e:	9f 01       	movw	r18, r30
     e90:	e8 94       	clt
     e92:	42 30       	cpi	r20, 0x02	; 2
     e94:	bc f0       	brlt	.+46     	; 0xec4 <itoa+0x38>
     e96:	45 32       	cpi	r20, 0x25	; 37
     e98:	ac f4       	brge	.+42     	; 0xec4 <itoa+0x38>
     e9a:	4a 30       	cpi	r20, 0x0A	; 10
     e9c:	29 f4       	brne	.+10     	; 0xea8 <itoa+0x1c>
     e9e:	97 fb       	bst	r25, 7
     ea0:	1e f4       	brtc	.+6      	; 0xea8 <itoa+0x1c>
     ea2:	90 95       	com	r25
     ea4:	81 95       	neg	r24
     ea6:	9f 4f       	sbci	r25, 0xFF	; 255
     ea8:	64 2f       	mov	r22, r20
     eaa:	77 27       	eor	r23, r23
     eac:	72 d2       	rcall	.+1252   	; 0x1392 <__udivmodhi4>
     eae:	80 5d       	subi	r24, 0xD0	; 208
     eb0:	8a 33       	cpi	r24, 0x3A	; 58
     eb2:	0c f0       	brlt	.+2      	; 0xeb6 <itoa+0x2a>
     eb4:	89 5d       	subi	r24, 0xD9	; 217
     eb6:	81 93       	st	Z+, r24
     eb8:	cb 01       	movw	r24, r22
     eba:	00 97       	sbiw	r24, 0x00	; 0
     ebc:	a9 f7       	brne	.-22     	; 0xea8 <itoa+0x1c>
     ebe:	16 f4       	brtc	.+4      	; 0xec4 <itoa+0x38>
     ec0:	5d e2       	ldi	r21, 0x2D	; 45
     ec2:	51 93       	st	Z+, r21
     ec4:	10 82       	st	Z, r1
     ec6:	c9 01       	movw	r24, r18
     ec8:	54 c2       	rjmp	.+1192   	; 0x1372 <strrev>

00000eca <dtoa_prf>:
     eca:	6f 92       	push	r6
     ecc:	7f 92       	push	r7
     ece:	9f 92       	push	r9
     ed0:	af 92       	push	r10
     ed2:	bf 92       	push	r11
     ed4:	cf 92       	push	r12
     ed6:	df 92       	push	r13
     ed8:	ef 92       	push	r14
     eda:	ff 92       	push	r15
     edc:	0f 93       	push	r16
     ede:	1f 93       	push	r17
     ee0:	cf 93       	push	r28
     ee2:	df 93       	push	r29
     ee4:	cd b7       	in	r28, 0x3d	; 61
     ee6:	de b7       	in	r29, 0x3e	; 62
     ee8:	29 97       	sbiw	r28, 0x09	; 9
     eea:	0f b6       	in	r0, 0x3f	; 63
     eec:	f8 94       	cli
     eee:	de bf       	out	0x3e, r29	; 62
     ef0:	0f be       	out	0x3f, r0	; 63
     ef2:	cd bf       	out	0x3d, r28	; 61
     ef4:	6a 01       	movw	r12, r20
     ef6:	b2 2e       	mov	r11, r18
     ef8:	10 2f       	mov	r17, r16
     efa:	0c 33       	cpi	r16, 0x3C	; 60
     efc:	18 f4       	brcc	.+6      	; 0xf04 <dtoa_prf+0x3a>
     efe:	f0 2e       	mov	r15, r16
     f00:	f3 94       	inc	r15
     f02:	02 c0       	rjmp	.+4      	; 0xf08 <dtoa_prf+0x3e>
     f04:	5c e3       	ldi	r21, 0x3C	; 60
     f06:	f5 2e       	mov	r15, r21
     f08:	0f 2d       	mov	r16, r15
     f0a:	27 e0       	ldi	r18, 0x07	; 7
     f0c:	ae 01       	movw	r20, r28
     f0e:	4f 5f       	subi	r20, 0xFF	; 255
     f10:	5f 4f       	sbci	r21, 0xFF	; 255
     f12:	57 d1       	rcall	.+686    	; 0x11c2 <__ftoa_engine>
     f14:	79 81       	ldd	r23, Y+1	; 0x01
     f16:	27 2f       	mov	r18, r23
     f18:	29 70       	andi	r18, 0x09	; 9
     f1a:	21 30       	cpi	r18, 0x01	; 1
     f1c:	31 f0       	breq	.+12     	; 0xf2a <dtoa_prf+0x60>
     f1e:	e1 fc       	sbrc	r14, 1
     f20:	06 c0       	rjmp	.+12     	; 0xf2e <dtoa_prf+0x64>
     f22:	e0 fe       	sbrs	r14, 0
     f24:	06 c0       	rjmp	.+12     	; 0xf32 <dtoa_prf+0x68>
     f26:	60 e2       	ldi	r22, 0x20	; 32
     f28:	05 c0       	rjmp	.+10     	; 0xf34 <dtoa_prf+0x6a>
     f2a:	6d e2       	ldi	r22, 0x2D	; 45
     f2c:	03 c0       	rjmp	.+6      	; 0xf34 <dtoa_prf+0x6a>
     f2e:	6b e2       	ldi	r22, 0x2B	; 43
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <dtoa_prf+0x6a>
     f32:	60 e0       	ldi	r22, 0x00	; 0
     f34:	73 ff       	sbrs	r23, 3
     f36:	3d c0       	rjmp	.+122    	; 0xfb2 <dtoa_prf+0xe8>
     f38:	66 23       	and	r22, r22
     f3a:	11 f0       	breq	.+4      	; 0xf40 <dtoa_prf+0x76>
     f3c:	84 e0       	ldi	r24, 0x04	; 4
     f3e:	01 c0       	rjmp	.+2      	; 0xf42 <dtoa_prf+0x78>
     f40:	83 e0       	ldi	r24, 0x03	; 3
     f42:	8b 15       	cp	r24, r11
     f44:	10 f4       	brcc	.+4      	; 0xf4a <dtoa_prf+0x80>
     f46:	b8 1a       	sub	r11, r24
     f48:	01 c0       	rjmp	.+2      	; 0xf4c <dtoa_prf+0x82>
     f4a:	b1 2c       	mov	r11, r1
     f4c:	e4 fc       	sbrc	r14, 4
     f4e:	0b c0       	rjmp	.+22     	; 0xf66 <dtoa_prf+0x9c>
     f50:	8b 2d       	mov	r24, r11
     f52:	f6 01       	movw	r30, r12
     f54:	90 e2       	ldi	r25, 0x20	; 32
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <dtoa_prf+0x92>
     f58:	91 93       	st	Z+, r25
     f5a:	81 50       	subi	r24, 0x01	; 1
     f5c:	81 11       	cpse	r24, r1
     f5e:	fc cf       	rjmp	.-8      	; 0xf58 <dtoa_prf+0x8e>
     f60:	cb 0c       	add	r12, r11
     f62:	d1 1c       	adc	r13, r1
     f64:	b1 2c       	mov	r11, r1
     f66:	66 23       	and	r22, r22
     f68:	19 f0       	breq	.+6      	; 0xf70 <dtoa_prf+0xa6>
     f6a:	d6 01       	movw	r26, r12
     f6c:	6d 93       	st	X+, r22
     f6e:	6d 01       	movw	r12, r26
     f70:	e2 fe       	sbrs	r14, 2
     f72:	0a c0       	rjmp	.+20     	; 0xf88 <dtoa_prf+0xbe>
     f74:	8e e4       	ldi	r24, 0x4E	; 78
     f76:	f6 01       	movw	r30, r12
     f78:	80 83       	st	Z, r24
     f7a:	91 e4       	ldi	r25, 0x41	; 65
     f7c:	91 83       	std	Z+1, r25	; 0x01
     f7e:	82 83       	std	Z+2, r24	; 0x02
     f80:	f3 e0       	ldi	r31, 0x03	; 3
     f82:	cf 0e       	add	r12, r31
     f84:	d1 1c       	adc	r13, r1
     f86:	0c c0       	rjmp	.+24     	; 0xfa0 <dtoa_prf+0xd6>
     f88:	8e e6       	ldi	r24, 0x6E	; 110
     f8a:	d6 01       	movw	r26, r12
     f8c:	8c 93       	st	X, r24
     f8e:	91 e6       	ldi	r25, 0x61	; 97
     f90:	11 96       	adiw	r26, 0x01	; 1
     f92:	9c 93       	st	X, r25
     f94:	11 97       	sbiw	r26, 0x01	; 1
     f96:	12 96       	adiw	r26, 0x02	; 2
     f98:	8c 93       	st	X, r24
     f9a:	b3 e0       	ldi	r27, 0x03	; 3
     f9c:	cb 0e       	add	r12, r27
     f9e:	d1 1c       	adc	r13, r1
     fa0:	8b 2d       	mov	r24, r11
     fa2:	f6 01       	movw	r30, r12
     fa4:	90 e2       	ldi	r25, 0x20	; 32
     fa6:	02 c0       	rjmp	.+4      	; 0xfac <dtoa_prf+0xe2>
     fa8:	91 93       	st	Z+, r25
     faa:	81 50       	subi	r24, 0x01	; 1
     fac:	81 11       	cpse	r24, r1
     fae:	fc cf       	rjmp	.-8      	; 0xfa8 <dtoa_prf+0xde>
     fb0:	40 c0       	rjmp	.+128    	; 0x1032 <dtoa_prf+0x168>
     fb2:	72 ff       	sbrs	r23, 2
     fb4:	45 c0       	rjmp	.+138    	; 0x1040 <dtoa_prf+0x176>
     fb6:	66 23       	and	r22, r22
     fb8:	11 f0       	breq	.+4      	; 0xfbe <dtoa_prf+0xf4>
     fba:	84 e0       	ldi	r24, 0x04	; 4
     fbc:	01 c0       	rjmp	.+2      	; 0xfc0 <dtoa_prf+0xf6>
     fbe:	83 e0       	ldi	r24, 0x03	; 3
     fc0:	8b 15       	cp	r24, r11
     fc2:	10 f4       	brcc	.+4      	; 0xfc8 <dtoa_prf+0xfe>
     fc4:	b8 1a       	sub	r11, r24
     fc6:	01 c0       	rjmp	.+2      	; 0xfca <dtoa_prf+0x100>
     fc8:	b1 2c       	mov	r11, r1
     fca:	e4 fc       	sbrc	r14, 4
     fcc:	0b c0       	rjmp	.+22     	; 0xfe4 <dtoa_prf+0x11a>
     fce:	8b 2d       	mov	r24, r11
     fd0:	f6 01       	movw	r30, r12
     fd2:	90 e2       	ldi	r25, 0x20	; 32
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <dtoa_prf+0x110>
     fd6:	91 93       	st	Z+, r25
     fd8:	81 50       	subi	r24, 0x01	; 1
     fda:	81 11       	cpse	r24, r1
     fdc:	fc cf       	rjmp	.-8      	; 0xfd6 <dtoa_prf+0x10c>
     fde:	cb 0c       	add	r12, r11
     fe0:	d1 1c       	adc	r13, r1
     fe2:	b1 2c       	mov	r11, r1
     fe4:	66 23       	and	r22, r22
     fe6:	19 f0       	breq	.+6      	; 0xfee <dtoa_prf+0x124>
     fe8:	f6 01       	movw	r30, r12
     fea:	61 93       	st	Z+, r22
     fec:	6f 01       	movw	r12, r30
     fee:	e2 fe       	sbrs	r14, 2
     ff0:	0e c0       	rjmp	.+28     	; 0x100e <dtoa_prf+0x144>
     ff2:	89 e4       	ldi	r24, 0x49	; 73
     ff4:	d6 01       	movw	r26, r12
     ff6:	8c 93       	st	X, r24
     ff8:	8e e4       	ldi	r24, 0x4E	; 78
     ffa:	11 96       	adiw	r26, 0x01	; 1
     ffc:	8c 93       	st	X, r24
     ffe:	11 97       	sbiw	r26, 0x01	; 1
    1000:	86 e4       	ldi	r24, 0x46	; 70
    1002:	12 96       	adiw	r26, 0x02	; 2
    1004:	8c 93       	st	X, r24
    1006:	b3 e0       	ldi	r27, 0x03	; 3
    1008:	cb 0e       	add	r12, r27
    100a:	d1 1c       	adc	r13, r1
    100c:	0a c0       	rjmp	.+20     	; 0x1022 <dtoa_prf+0x158>
    100e:	89 e6       	ldi	r24, 0x69	; 105
    1010:	f6 01       	movw	r30, r12
    1012:	80 83       	st	Z, r24
    1014:	8e e6       	ldi	r24, 0x6E	; 110
    1016:	81 83       	std	Z+1, r24	; 0x01
    1018:	86 e6       	ldi	r24, 0x66	; 102
    101a:	82 83       	std	Z+2, r24	; 0x02
    101c:	f3 e0       	ldi	r31, 0x03	; 3
    101e:	cf 0e       	add	r12, r31
    1020:	d1 1c       	adc	r13, r1
    1022:	8b 2d       	mov	r24, r11
    1024:	f6 01       	movw	r30, r12
    1026:	90 e2       	ldi	r25, 0x20	; 32
    1028:	02 c0       	rjmp	.+4      	; 0x102e <dtoa_prf+0x164>
    102a:	91 93       	st	Z+, r25
    102c:	81 50       	subi	r24, 0x01	; 1
    102e:	81 11       	cpse	r24, r1
    1030:	fc cf       	rjmp	.-8      	; 0x102a <dtoa_prf+0x160>
    1032:	f6 01       	movw	r30, r12
    1034:	eb 0d       	add	r30, r11
    1036:	f1 1d       	adc	r31, r1
    1038:	10 82       	st	Z, r1
    103a:	2e ef       	ldi	r18, 0xFE	; 254
    103c:	3f ef       	ldi	r19, 0xFF	; 255
    103e:	ac c0       	rjmp	.+344    	; 0x1198 <dtoa_prf+0x2ce>
    1040:	a1 e0       	ldi	r26, 0x01	; 1
    1042:	61 11       	cpse	r22, r1
    1044:	01 c0       	rjmp	.+2      	; 0x1048 <dtoa_prf+0x17e>
    1046:	a0 e0       	ldi	r26, 0x00	; 0
    1048:	4a 2f       	mov	r20, r26
    104a:	50 e0       	ldi	r21, 0x00	; 0
    104c:	18 16       	cp	r1, r24
    104e:	19 06       	cpc	r1, r25
    1050:	24 f4       	brge	.+8      	; 0x105a <dtoa_prf+0x190>
    1052:	9c 01       	movw	r18, r24
    1054:	2f 5f       	subi	r18, 0xFF	; 255
    1056:	3f 4f       	sbci	r19, 0xFF	; 255
    1058:	02 c0       	rjmp	.+4      	; 0x105e <dtoa_prf+0x194>
    105a:	21 e0       	ldi	r18, 0x01	; 1
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	24 0f       	add	r18, r20
    1060:	35 1f       	adc	r19, r21
    1062:	11 23       	and	r17, r17
    1064:	29 f0       	breq	.+10     	; 0x1070 <dtoa_prf+0x1a6>
    1066:	41 2f       	mov	r20, r17
    1068:	50 e0       	ldi	r21, 0x00	; 0
    106a:	4f 5f       	subi	r20, 0xFF	; 255
    106c:	5f 4f       	sbci	r21, 0xFF	; 255
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <dtoa_prf+0x1aa>
    1070:	40 e0       	ldi	r20, 0x00	; 0
    1072:	50 e0       	ldi	r21, 0x00	; 0
    1074:	42 0f       	add	r20, r18
    1076:	53 1f       	adc	r21, r19
    1078:	2b 2d       	mov	r18, r11
    107a:	30 e0       	ldi	r19, 0x00	; 0
    107c:	42 17       	cp	r20, r18
    107e:	53 07       	cpc	r21, r19
    1080:	14 f4       	brge	.+4      	; 0x1086 <dtoa_prf+0x1bc>
    1082:	b4 1a       	sub	r11, r20
    1084:	01 c0       	rjmp	.+2      	; 0x1088 <dtoa_prf+0x1be>
    1086:	b1 2c       	mov	r11, r1
    1088:	3e 2d       	mov	r19, r14
    108a:	30 71       	andi	r19, 0x10	; 16
    108c:	e4 fc       	sbrc	r14, 4
    108e:	0d c0       	rjmp	.+26     	; 0x10aa <dtoa_prf+0x1e0>
    1090:	e3 fc       	sbrc	r14, 3
    1092:	0b c0       	rjmp	.+22     	; 0x10aa <dtoa_prf+0x1e0>
    1094:	2b 2d       	mov	r18, r11
    1096:	f6 01       	movw	r30, r12
    1098:	40 e2       	ldi	r20, 0x20	; 32
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <dtoa_prf+0x1d6>
    109c:	41 93       	st	Z+, r20
    109e:	21 50       	subi	r18, 0x01	; 1
    10a0:	21 11       	cpse	r18, r1
    10a2:	fc cf       	rjmp	.-8      	; 0x109c <dtoa_prf+0x1d2>
    10a4:	cb 0c       	add	r12, r11
    10a6:	d1 1c       	adc	r13, r1
    10a8:	b1 2c       	mov	r11, r1
    10aa:	aa 23       	and	r26, r26
    10ac:	19 f0       	breq	.+6      	; 0x10b4 <dtoa_prf+0x1ea>
    10ae:	d6 01       	movw	r26, r12
    10b0:	6d 93       	st	X+, r22
    10b2:	6d 01       	movw	r12, r26
    10b4:	31 11       	cpse	r19, r1
    10b6:	0b c0       	rjmp	.+22     	; 0x10ce <dtoa_prf+0x204>
    10b8:	2b 2d       	mov	r18, r11
    10ba:	f6 01       	movw	r30, r12
    10bc:	30 e3       	ldi	r19, 0x30	; 48
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <dtoa_prf+0x1fa>
    10c0:	31 93       	st	Z+, r19
    10c2:	21 50       	subi	r18, 0x01	; 1
    10c4:	21 11       	cpse	r18, r1
    10c6:	fc cf       	rjmp	.-8      	; 0x10c0 <dtoa_prf+0x1f6>
    10c8:	cb 0c       	add	r12, r11
    10ca:	d1 1c       	adc	r13, r1
    10cc:	b1 2c       	mov	r11, r1
    10ce:	f8 0e       	add	r15, r24
    10d0:	0a 81       	ldd	r16, Y+2	; 0x02
    10d2:	40 e1       	ldi	r20, 0x10	; 16
    10d4:	a4 2e       	mov	r10, r20
    10d6:	a7 22       	and	r10, r23
    10d8:	74 ff       	sbrs	r23, 4
    10da:	03 c0       	rjmp	.+6      	; 0x10e2 <dtoa_prf+0x218>
    10dc:	01 33       	cpi	r16, 0x31	; 49
    10de:	09 f4       	brne	.+2      	; 0x10e2 <dtoa_prf+0x218>
    10e0:	fa 94       	dec	r15
    10e2:	1f 14       	cp	r1, r15
    10e4:	2c f4       	brge	.+10     	; 0x10f0 <dtoa_prf+0x226>
    10e6:	2f 2d       	mov	r18, r15
    10e8:	29 30       	cpi	r18, 0x09	; 9
    10ea:	18 f0       	brcs	.+6      	; 0x10f2 <dtoa_prf+0x228>
    10ec:	28 e0       	ldi	r18, 0x08	; 8
    10ee:	01 c0       	rjmp	.+2      	; 0x10f2 <dtoa_prf+0x228>
    10f0:	21 e0       	ldi	r18, 0x01	; 1
    10f2:	ac 01       	movw	r20, r24
    10f4:	97 ff       	sbrs	r25, 7
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <dtoa_prf+0x232>
    10f8:	40 e0       	ldi	r20, 0x00	; 0
    10fa:	50 e0       	ldi	r21, 0x00	; 0
    10fc:	60 e0       	ldi	r22, 0x00	; 0
    10fe:	70 e0       	ldi	r23, 0x00	; 0
    1100:	3e e2       	ldi	r19, 0x2E	; 46
    1102:	93 2e       	mov	r9, r19
    1104:	fc 01       	movw	r30, r24
    1106:	e2 1b       	sub	r30, r18
    1108:	f1 09       	sbc	r31, r1
    110a:	9f 01       	movw	r18, r30
    110c:	dc 01       	movw	r26, r24
    110e:	a4 1b       	sub	r26, r20
    1110:	b5 0b       	sbc	r27, r21
    1112:	fe 01       	movw	r30, r28
    1114:	31 96       	adiw	r30, 0x01	; 1
    1116:	ea 0f       	add	r30, r26
    1118:	fb 1f       	adc	r31, r27
    111a:	a1 2f       	mov	r26, r17
    111c:	b0 e0       	ldi	r27, 0x00	; 0
    111e:	66 24       	eor	r6, r6
    1120:	77 24       	eor	r7, r7
    1122:	6a 1a       	sub	r6, r26
    1124:	7b 0a       	sbc	r7, r27
    1126:	4f 3f       	cpi	r20, 0xFF	; 255
    1128:	1f ef       	ldi	r17, 0xFF	; 255
    112a:	51 07       	cpc	r21, r17
    112c:	19 f4       	brne	.+6      	; 0x1134 <dtoa_prf+0x26a>
    112e:	d6 01       	movw	r26, r12
    1130:	9d 92       	st	X+, r9
    1132:	6d 01       	movw	r12, r26
    1134:	84 17       	cp	r24, r20
    1136:	95 07       	cpc	r25, r21
    1138:	54 f0       	brlt	.+20     	; 0x114e <dtoa_prf+0x284>
    113a:	24 17       	cp	r18, r20
    113c:	35 07       	cpc	r19, r21
    113e:	3c f4       	brge	.+14     	; 0x114e <dtoa_prf+0x284>
    1140:	7f 01       	movw	r14, r30
    1142:	e6 0e       	add	r14, r22
    1144:	f7 1e       	adc	r15, r23
    1146:	d7 01       	movw	r26, r14
    1148:	11 96       	adiw	r26, 0x01	; 1
    114a:	1c 91       	ld	r17, X
    114c:	01 c0       	rjmp	.+2      	; 0x1150 <dtoa_prf+0x286>
    114e:	10 e3       	ldi	r17, 0x30	; 48
    1150:	41 50       	subi	r20, 0x01	; 1
    1152:	51 09       	sbc	r21, r1
    1154:	6f 5f       	subi	r22, 0xFF	; 255
    1156:	7f 4f       	sbci	r23, 0xFF	; 255
    1158:	46 15       	cp	r20, r6
    115a:	57 05       	cpc	r21, r7
    115c:	24 f0       	brlt	.+8      	; 0x1166 <dtoa_prf+0x29c>
    115e:	d6 01       	movw	r26, r12
    1160:	1d 93       	st	X+, r17
    1162:	6d 01       	movw	r12, r26
    1164:	e0 cf       	rjmp	.-64     	; 0x1126 <dtoa_prf+0x25c>
    1166:	48 17       	cp	r20, r24
    1168:	59 07       	cpc	r21, r25
    116a:	39 f4       	brne	.+14     	; 0x117a <dtoa_prf+0x2b0>
    116c:	06 33       	cpi	r16, 0x36	; 54
    116e:	20 f4       	brcc	.+8      	; 0x1178 <dtoa_prf+0x2ae>
    1170:	05 33       	cpi	r16, 0x35	; 53
    1172:	19 f4       	brne	.+6      	; 0x117a <dtoa_prf+0x2b0>
    1174:	a1 10       	cpse	r10, r1
    1176:	01 c0       	rjmp	.+2      	; 0x117a <dtoa_prf+0x2b0>
    1178:	11 e3       	ldi	r17, 0x31	; 49
    117a:	f6 01       	movw	r30, r12
    117c:	11 93       	st	Z+, r17
    117e:	8b 2d       	mov	r24, r11
    1180:	df 01       	movw	r26, r30
    1182:	90 e2       	ldi	r25, 0x20	; 32
    1184:	02 c0       	rjmp	.+4      	; 0x118a <dtoa_prf+0x2c0>
    1186:	9d 93       	st	X+, r25
    1188:	81 50       	subi	r24, 0x01	; 1
    118a:	81 11       	cpse	r24, r1
    118c:	fc cf       	rjmp	.-8      	; 0x1186 <dtoa_prf+0x2bc>
    118e:	eb 0d       	add	r30, r11
    1190:	f1 1d       	adc	r31, r1
    1192:	10 82       	st	Z, r1
    1194:	20 e0       	ldi	r18, 0x00	; 0
    1196:	30 e0       	ldi	r19, 0x00	; 0
    1198:	c9 01       	movw	r24, r18
    119a:	29 96       	adiw	r28, 0x09	; 9
    119c:	0f b6       	in	r0, 0x3f	; 63
    119e:	f8 94       	cli
    11a0:	de bf       	out	0x3e, r29	; 62
    11a2:	0f be       	out	0x3f, r0	; 63
    11a4:	cd bf       	out	0x3d, r28	; 61
    11a6:	df 91       	pop	r29
    11a8:	cf 91       	pop	r28
    11aa:	1f 91       	pop	r17
    11ac:	0f 91       	pop	r16
    11ae:	ff 90       	pop	r15
    11b0:	ef 90       	pop	r14
    11b2:	df 90       	pop	r13
    11b4:	cf 90       	pop	r12
    11b6:	bf 90       	pop	r11
    11b8:	af 90       	pop	r10
    11ba:	9f 90       	pop	r9
    11bc:	7f 90       	pop	r7
    11be:	6f 90       	pop	r6
    11c0:	08 95       	ret

000011c2 <__ftoa_engine>:
    11c2:	28 30       	cpi	r18, 0x08	; 8
    11c4:	08 f0       	brcs	.+2      	; 0x11c8 <__ftoa_engine+0x6>
    11c6:	27 e0       	ldi	r18, 0x07	; 7
    11c8:	33 27       	eor	r19, r19
    11ca:	da 01       	movw	r26, r20
    11cc:	99 0f       	add	r25, r25
    11ce:	31 1d       	adc	r19, r1
    11d0:	87 fd       	sbrc	r24, 7
    11d2:	91 60       	ori	r25, 0x01	; 1
    11d4:	00 96       	adiw	r24, 0x00	; 0
    11d6:	61 05       	cpc	r22, r1
    11d8:	71 05       	cpc	r23, r1
    11da:	39 f4       	brne	.+14     	; 0x11ea <__ftoa_engine+0x28>
    11dc:	32 60       	ori	r19, 0x02	; 2
    11de:	2e 5f       	subi	r18, 0xFE	; 254
    11e0:	3d 93       	st	X+, r19
    11e2:	30 e3       	ldi	r19, 0x30	; 48
    11e4:	2a 95       	dec	r18
    11e6:	e1 f7       	brne	.-8      	; 0x11e0 <__ftoa_engine+0x1e>
    11e8:	08 95       	ret
    11ea:	9f 3f       	cpi	r25, 0xFF	; 255
    11ec:	30 f0       	brcs	.+12     	; 0x11fa <__ftoa_engine+0x38>
    11ee:	80 38       	cpi	r24, 0x80	; 128
    11f0:	71 05       	cpc	r23, r1
    11f2:	61 05       	cpc	r22, r1
    11f4:	09 f0       	breq	.+2      	; 0x11f8 <__ftoa_engine+0x36>
    11f6:	3c 5f       	subi	r19, 0xFC	; 252
    11f8:	3c 5f       	subi	r19, 0xFC	; 252
    11fa:	3d 93       	st	X+, r19
    11fc:	91 30       	cpi	r25, 0x01	; 1
    11fe:	08 f0       	brcs	.+2      	; 0x1202 <__ftoa_engine+0x40>
    1200:	80 68       	ori	r24, 0x80	; 128
    1202:	91 1d       	adc	r25, r1
    1204:	df 93       	push	r29
    1206:	cf 93       	push	r28
    1208:	1f 93       	push	r17
    120a:	0f 93       	push	r16
    120c:	ff 92       	push	r15
    120e:	ef 92       	push	r14
    1210:	19 2f       	mov	r17, r25
    1212:	98 7f       	andi	r25, 0xF8	; 248
    1214:	96 95       	lsr	r25
    1216:	e9 2f       	mov	r30, r25
    1218:	96 95       	lsr	r25
    121a:	96 95       	lsr	r25
    121c:	e9 0f       	add	r30, r25
    121e:	ff 27       	eor	r31, r31
    1220:	e0 58       	subi	r30, 0x80	; 128
    1222:	ff 4f       	sbci	r31, 0xFF	; 255
    1224:	99 27       	eor	r25, r25
    1226:	33 27       	eor	r19, r19
    1228:	ee 24       	eor	r14, r14
    122a:	ff 24       	eor	r15, r15
    122c:	a7 01       	movw	r20, r14
    122e:	e7 01       	movw	r28, r14
    1230:	05 90       	lpm	r0, Z+
    1232:	08 94       	sec
    1234:	07 94       	ror	r0
    1236:	28 f4       	brcc	.+10     	; 0x1242 <__ftoa_engine+0x80>
    1238:	36 0f       	add	r19, r22
    123a:	e7 1e       	adc	r14, r23
    123c:	f8 1e       	adc	r15, r24
    123e:	49 1f       	adc	r20, r25
    1240:	51 1d       	adc	r21, r1
    1242:	66 0f       	add	r22, r22
    1244:	77 1f       	adc	r23, r23
    1246:	88 1f       	adc	r24, r24
    1248:	99 1f       	adc	r25, r25
    124a:	06 94       	lsr	r0
    124c:	a1 f7       	brne	.-24     	; 0x1236 <__ftoa_engine+0x74>
    124e:	05 90       	lpm	r0, Z+
    1250:	07 94       	ror	r0
    1252:	28 f4       	brcc	.+10     	; 0x125e <__ftoa_engine+0x9c>
    1254:	e7 0e       	add	r14, r23
    1256:	f8 1e       	adc	r15, r24
    1258:	49 1f       	adc	r20, r25
    125a:	56 1f       	adc	r21, r22
    125c:	c1 1d       	adc	r28, r1
    125e:	77 0f       	add	r23, r23
    1260:	88 1f       	adc	r24, r24
    1262:	99 1f       	adc	r25, r25
    1264:	66 1f       	adc	r22, r22
    1266:	06 94       	lsr	r0
    1268:	a1 f7       	brne	.-24     	; 0x1252 <__ftoa_engine+0x90>
    126a:	05 90       	lpm	r0, Z+
    126c:	07 94       	ror	r0
    126e:	28 f4       	brcc	.+10     	; 0x127a <__ftoa_engine+0xb8>
    1270:	f8 0e       	add	r15, r24
    1272:	49 1f       	adc	r20, r25
    1274:	56 1f       	adc	r21, r22
    1276:	c7 1f       	adc	r28, r23
    1278:	d1 1d       	adc	r29, r1
    127a:	88 0f       	add	r24, r24
    127c:	99 1f       	adc	r25, r25
    127e:	66 1f       	adc	r22, r22
    1280:	77 1f       	adc	r23, r23
    1282:	06 94       	lsr	r0
    1284:	a1 f7       	brne	.-24     	; 0x126e <__ftoa_engine+0xac>
    1286:	05 90       	lpm	r0, Z+
    1288:	07 94       	ror	r0
    128a:	20 f4       	brcc	.+8      	; 0x1294 <__ftoa_engine+0xd2>
    128c:	49 0f       	add	r20, r25
    128e:	56 1f       	adc	r21, r22
    1290:	c7 1f       	adc	r28, r23
    1292:	d8 1f       	adc	r29, r24
    1294:	99 0f       	add	r25, r25
    1296:	66 1f       	adc	r22, r22
    1298:	77 1f       	adc	r23, r23
    129a:	88 1f       	adc	r24, r24
    129c:	06 94       	lsr	r0
    129e:	a9 f7       	brne	.-22     	; 0x128a <__ftoa_engine+0xc8>
    12a0:	84 91       	lpm	r24, Z
    12a2:	10 95       	com	r17
    12a4:	17 70       	andi	r17, 0x07	; 7
    12a6:	41 f0       	breq	.+16     	; 0x12b8 <__ftoa_engine+0xf6>
    12a8:	d6 95       	lsr	r29
    12aa:	c7 95       	ror	r28
    12ac:	57 95       	ror	r21
    12ae:	47 95       	ror	r20
    12b0:	f7 94       	ror	r15
    12b2:	e7 94       	ror	r14
    12b4:	1a 95       	dec	r17
    12b6:	c1 f7       	brne	.-16     	; 0x12a8 <__ftoa_engine+0xe6>
    12b8:	e6 e2       	ldi	r30, 0x26	; 38
    12ba:	f0 e0       	ldi	r31, 0x00	; 0
    12bc:	68 94       	set
    12be:	15 90       	lpm	r1, Z+
    12c0:	15 91       	lpm	r17, Z+
    12c2:	35 91       	lpm	r19, Z+
    12c4:	65 91       	lpm	r22, Z+
    12c6:	95 91       	lpm	r25, Z+
    12c8:	05 90       	lpm	r0, Z+
    12ca:	7f e2       	ldi	r23, 0x2F	; 47
    12cc:	73 95       	inc	r23
    12ce:	e1 18       	sub	r14, r1
    12d0:	f1 0a       	sbc	r15, r17
    12d2:	43 0b       	sbc	r20, r19
    12d4:	56 0b       	sbc	r21, r22
    12d6:	c9 0b       	sbc	r28, r25
    12d8:	d0 09       	sbc	r29, r0
    12da:	c0 f7       	brcc	.-16     	; 0x12cc <__ftoa_engine+0x10a>
    12dc:	e1 0c       	add	r14, r1
    12de:	f1 1e       	adc	r15, r17
    12e0:	43 1f       	adc	r20, r19
    12e2:	56 1f       	adc	r21, r22
    12e4:	c9 1f       	adc	r28, r25
    12e6:	d0 1d       	adc	r29, r0
    12e8:	7e f4       	brtc	.+30     	; 0x1308 <__ftoa_engine+0x146>
    12ea:	70 33       	cpi	r23, 0x30	; 48
    12ec:	11 f4       	brne	.+4      	; 0x12f2 <__ftoa_engine+0x130>
    12ee:	8a 95       	dec	r24
    12f0:	e6 cf       	rjmp	.-52     	; 0x12be <__ftoa_engine+0xfc>
    12f2:	e8 94       	clt
    12f4:	01 50       	subi	r16, 0x01	; 1
    12f6:	30 f0       	brcs	.+12     	; 0x1304 <__ftoa_engine+0x142>
    12f8:	08 0f       	add	r16, r24
    12fa:	0a f4       	brpl	.+2      	; 0x12fe <__ftoa_engine+0x13c>
    12fc:	00 27       	eor	r16, r16
    12fe:	02 17       	cp	r16, r18
    1300:	08 f4       	brcc	.+2      	; 0x1304 <__ftoa_engine+0x142>
    1302:	20 2f       	mov	r18, r16
    1304:	23 95       	inc	r18
    1306:	02 2f       	mov	r16, r18
    1308:	7a 33       	cpi	r23, 0x3A	; 58
    130a:	28 f0       	brcs	.+10     	; 0x1316 <__ftoa_engine+0x154>
    130c:	79 e3       	ldi	r23, 0x39	; 57
    130e:	7d 93       	st	X+, r23
    1310:	2a 95       	dec	r18
    1312:	e9 f7       	brne	.-6      	; 0x130e <__ftoa_engine+0x14c>
    1314:	10 c0       	rjmp	.+32     	; 0x1336 <__ftoa_engine+0x174>
    1316:	7d 93       	st	X+, r23
    1318:	2a 95       	dec	r18
    131a:	89 f6       	brne	.-94     	; 0x12be <__ftoa_engine+0xfc>
    131c:	06 94       	lsr	r0
    131e:	97 95       	ror	r25
    1320:	67 95       	ror	r22
    1322:	37 95       	ror	r19
    1324:	17 95       	ror	r17
    1326:	17 94       	ror	r1
    1328:	e1 18       	sub	r14, r1
    132a:	f1 0a       	sbc	r15, r17
    132c:	43 0b       	sbc	r20, r19
    132e:	56 0b       	sbc	r21, r22
    1330:	c9 0b       	sbc	r28, r25
    1332:	d0 09       	sbc	r29, r0
    1334:	98 f0       	brcs	.+38     	; 0x135c <__ftoa_engine+0x19a>
    1336:	23 95       	inc	r18
    1338:	7e 91       	ld	r23, -X
    133a:	73 95       	inc	r23
    133c:	7a 33       	cpi	r23, 0x3A	; 58
    133e:	08 f0       	brcs	.+2      	; 0x1342 <__ftoa_engine+0x180>
    1340:	70 e3       	ldi	r23, 0x30	; 48
    1342:	7c 93       	st	X, r23
    1344:	20 13       	cpse	r18, r16
    1346:	b8 f7       	brcc	.-18     	; 0x1336 <__ftoa_engine+0x174>
    1348:	7e 91       	ld	r23, -X
    134a:	70 61       	ori	r23, 0x10	; 16
    134c:	7d 93       	st	X+, r23
    134e:	30 f0       	brcs	.+12     	; 0x135c <__ftoa_engine+0x19a>
    1350:	83 95       	inc	r24
    1352:	71 e3       	ldi	r23, 0x31	; 49
    1354:	7d 93       	st	X+, r23
    1356:	70 e3       	ldi	r23, 0x30	; 48
    1358:	2a 95       	dec	r18
    135a:	e1 f7       	brne	.-8      	; 0x1354 <__ftoa_engine+0x192>
    135c:	11 24       	eor	r1, r1
    135e:	ef 90       	pop	r14
    1360:	ff 90       	pop	r15
    1362:	0f 91       	pop	r16
    1364:	1f 91       	pop	r17
    1366:	cf 91       	pop	r28
    1368:	df 91       	pop	r29
    136a:	99 27       	eor	r25, r25
    136c:	87 fd       	sbrc	r24, 7
    136e:	90 95       	com	r25
    1370:	08 95       	ret

00001372 <strrev>:
    1372:	dc 01       	movw	r26, r24
    1374:	fc 01       	movw	r30, r24
    1376:	67 2f       	mov	r22, r23
    1378:	71 91       	ld	r23, Z+
    137a:	77 23       	and	r23, r23
    137c:	e1 f7       	brne	.-8      	; 0x1376 <strrev+0x4>
    137e:	32 97       	sbiw	r30, 0x02	; 2
    1380:	04 c0       	rjmp	.+8      	; 0x138a <strrev+0x18>
    1382:	7c 91       	ld	r23, X
    1384:	6d 93       	st	X+, r22
    1386:	70 83       	st	Z, r23
    1388:	62 91       	ld	r22, -Z
    138a:	ae 17       	cp	r26, r30
    138c:	bf 07       	cpc	r27, r31
    138e:	c8 f3       	brcs	.-14     	; 0x1382 <strrev+0x10>
    1390:	08 95       	ret

00001392 <__udivmodhi4>:
    1392:	aa 1b       	sub	r26, r26
    1394:	bb 1b       	sub	r27, r27
    1396:	51 e1       	ldi	r21, 0x11	; 17
    1398:	07 c0       	rjmp	.+14     	; 0x13a8 <__udivmodhi4_ep>

0000139a <__udivmodhi4_loop>:
    139a:	aa 1f       	adc	r26, r26
    139c:	bb 1f       	adc	r27, r27
    139e:	a6 17       	cp	r26, r22
    13a0:	b7 07       	cpc	r27, r23
    13a2:	10 f0       	brcs	.+4      	; 0x13a8 <__udivmodhi4_ep>
    13a4:	a6 1b       	sub	r26, r22
    13a6:	b7 0b       	sbc	r27, r23

000013a8 <__udivmodhi4_ep>:
    13a8:	88 1f       	adc	r24, r24
    13aa:	99 1f       	adc	r25, r25
    13ac:	5a 95       	dec	r21
    13ae:	a9 f7       	brne	.-22     	; 0x139a <__udivmodhi4_loop>
    13b0:	80 95       	com	r24
    13b2:	90 95       	com	r25
    13b4:	bc 01       	movw	r22, r24
    13b6:	cd 01       	movw	r24, r26
    13b8:	08 95       	ret

000013ba <_exit>:
    13ba:	f8 94       	cli

000013bc <__stop_program>:
    13bc:	ff cf       	rjmp	.-2      	; 0x13bc <__stop_program>
