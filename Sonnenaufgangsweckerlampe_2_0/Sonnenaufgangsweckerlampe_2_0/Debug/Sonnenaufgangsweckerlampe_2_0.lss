
Sonnenaufgangsweckerlampe_2_0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001998  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000f8  00800060  00001998  00001a2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000024  00800158  00800158  00001b24  2**0
                  ALLOC
  3 .stab         00002b80  00000000  00000000  00001b24  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000854  00000000  00000000  000046a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004ef8  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000128  00000000  00000000  00004f27  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000033ae  00000000  00000000  0000504f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000522  00000000  00000000  000083fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000b67  00000000  00000000  0000891f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000031c  00000000  00000000  00009488  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000571  00000000  00000000  000097a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000023e3  00000000  00000000  00009d15  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000140  00000000  00000000  0000c0f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	a9 c0       	rjmp	.+338    	; 0x156 <__bad_interrupt>
       4:	a8 c0       	rjmp	.+336    	; 0x156 <__bad_interrupt>
       6:	a7 c0       	rjmp	.+334    	; 0x156 <__bad_interrupt>
       8:	a6 c0       	rjmp	.+332    	; 0x156 <__bad_interrupt>
       a:	a5 c0       	rjmp	.+330    	; 0x156 <__bad_interrupt>
       c:	a4 c0       	rjmp	.+328    	; 0x156 <__bad_interrupt>
       e:	a3 c0       	rjmp	.+326    	; 0x156 <__bad_interrupt>
      10:	b8 c7       	rjmp	.+3952   	; 0xf82 <__vector_8>
      12:	a1 c0       	rjmp	.+322    	; 0x156 <__bad_interrupt>
      14:	a0 c0       	rjmp	.+320    	; 0x156 <__bad_interrupt>
      16:	9f c0       	rjmp	.+318    	; 0x156 <__bad_interrupt>
      18:	9e c0       	rjmp	.+316    	; 0x156 <__bad_interrupt>
      1a:	9d c0       	rjmp	.+314    	; 0x156 <__bad_interrupt>
      1c:	9c c0       	rjmp	.+312    	; 0x156 <__bad_interrupt>
      1e:	9b c0       	rjmp	.+310    	; 0x156 <__bad_interrupt>
      20:	9a c0       	rjmp	.+308    	; 0x156 <__bad_interrupt>
      22:	99 c0       	rjmp	.+306    	; 0x156 <__bad_interrupt>
      24:	98 c0       	rjmp	.+304    	; 0x156 <__bad_interrupt>
      26:	00 40       	sbci	r16, 0x00	; 0
      28:	7a 10       	cpse	r7, r10
      2a:	f3 5a       	subi	r31, 0xA3	; 163
      2c:	00 a0       	ldd	r0, Z+32	; 0x20
      2e:	72 4e       	sbci	r23, 0xE2	; 226
      30:	18 09       	sbc	r17, r8
      32:	00 10       	cpse	r0, r0
      34:	a5 d4       	rcall	.+2378   	; 0x980 <_Z5einsth+0x30a>
      36:	e8 00       	.word	0x00e8	; ????
      38:	00 e8       	ldi	r16, 0x80	; 128
      3a:	76 48       	sbci	r23, 0x86	; 134
      3c:	17 00       	.word	0x0017	; ????
      3e:	00 e4       	ldi	r16, 0x40	; 64
      40:	0b 54       	subi	r16, 0x4B	; 75
      42:	02 00       	.word	0x0002	; ????
      44:	00 ca       	rjmp	.-3072   	; 0xfffff446 <__eeprom_end+0xff7ef446>
      46:	9a 3b       	cpi	r25, 0xBA	; 186
      48:	00 00       	nop
      4a:	00 e1       	ldi	r16, 0x10	; 16
      4c:	f5 05       	cpc	r31, r5
      4e:	00 00       	nop
      50:	80 96       	adiw	r24, 0x20	; 32
      52:	98 00       	.word	0x0098	; ????
      54:	00 00       	nop
      56:	40 42       	sbci	r20, 0x20	; 32
      58:	0f 00       	.word	0x000f	; ????
      5a:	00 00       	nop
      5c:	a0 86       	std	Z+8, r10	; 0x08
      5e:	01 00       	.word	0x0001	; ????
      60:	00 00       	nop
      62:	10 27       	eor	r17, r16
      64:	00 00       	nop
      66:	00 00       	nop
      68:	e8 03       	fmulsu	r22, r16
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	64 00       	.word	0x0064	; ????
      70:	00 00       	nop
      72:	00 00       	nop
      74:	0a 00       	.word	0x000a	; ????
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	01 00       	.word	0x0001	; ????
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	2c 76       	andi	r18, 0x6C	; 108
      82:	d8 88       	ldd	r13, Y+16	; 0x10
      84:	dc 67       	ori	r29, 0x7C	; 124
      86:	4f 08       	sbc	r4, r15
      88:	23 df       	rcall	.-442    	; 0xfffffed0 <__eeprom_end+0xff7efed0>
      8a:	c1 df       	rcall	.-126    	; 0xe <__zero_reg__+0xd>
      8c:	ae 59       	subi	r26, 0x9E	; 158
      8e:	e1 b1       	in	r30, 0x01	; 1
      90:	b7 96       	adiw	r30, 0x27	; 39
      92:	e5 e3       	ldi	r30, 0x35	; 53
      94:	e4 53       	subi	r30, 0x34	; 52
      96:	c6 3a       	cpi	r28, 0xA6	; 166
      98:	e6 51       	subi	r30, 0x16	; 22
      9a:	99 76       	andi	r25, 0x69	; 105
      9c:	96 e8       	ldi	r25, 0x86	; 134
      9e:	e6 c2       	rjmp	.+1484   	; 0x66c <_Z8erhoehenPhhhPKc+0x50>
      a0:	84 26       	eor	r8, r20
      a2:	eb 89       	ldd	r30, Y+19	; 0x13
      a4:	8c 9b       	sbis	0x11, 4	; 17
      a6:	62 ed       	ldi	r22, 0xD2	; 210
      a8:	40 7c       	andi	r20, 0xC0	; 192
      aa:	6f fc       	.word	0xfc6f	; ????
      ac:	ef bc       	out	0x2f, r14	; 47
      ae:	9c 9f       	mul	r25, r28
      b0:	40 f2       	brcs	.-112    	; 0x42 <__SREG__+0x3>
      b2:	ba a5       	ldd	r27, Y+42	; 0x2a
      b4:	6f a5       	ldd	r22, Y+47	; 0x2f
      b6:	f4 90       	lpm	r15, Z
      b8:	05 5a       	subi	r16, 0xA5	; 165
      ba:	2a f7       	brpl	.-54     	; 0x86 <__SREG__+0x47>
      bc:	5c 93       	st	X, r21
      be:	6b 6c       	ori	r22, 0xCB	; 203
      c0:	f9 67       	ori	r31, 0x79	; 121
      c2:	6d c1       	rjmp	.+730    	; 0x39e <_Z10temperaturv+0x7e>
      c4:	1b fc       	.word	0xfc1b	; ????
      c6:	e0 e4       	ldi	r30, 0x40	; 64
      c8:	0d 47       	sbci	r16, 0x7D	; 125
      ca:	fe f5       	brtc	.+126    	; 0x14a <.do_clear_bss_loop>
      cc:	20 e6       	ldi	r18, 0x60	; 96
      ce:	b5 00       	.word	0x00b5	; ????
      d0:	d0 ed       	ldi	r29, 0xD0	; 208
      d2:	90 2e       	mov	r9, r16
      d4:	03 00       	.word	0x0003	; ????
      d6:	94 35       	cpi	r25, 0x54	; 84
      d8:	77 05       	cpc	r23, r7
      da:	00 80       	ld	r0, Z
      dc:	84 1e       	adc	r8, r20
      de:	08 00       	.word	0x0008	; ????
      e0:	00 20       	and	r0, r0
      e2:	4e 0a       	sbc	r4, r30
      e4:	00 00       	nop
      e6:	00 c8       	rjmp	.-4096   	; 0xfffff0e8 <__eeprom_end+0xff7ef0e8>
      e8:	0c 33       	cpi	r16, 0x3C	; 60
      ea:	33 33       	cpi	r19, 0x33	; 51
      ec:	33 0f       	add	r19, r19
      ee:	98 6e       	ori	r25, 0xE8	; 232
      f0:	12 83       	std	Z+2, r17	; 0x02
      f2:	11 41       	sbci	r17, 0x11	; 17
      f4:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f6:	21 14       	cp	r2, r1
      f8:	89 3b       	cpi	r24, 0xB9	; 185
      fa:	e6 55       	subi	r30, 0x56	; 86
      fc:	16 cf       	rjmp	.-468    	; 0xffffff2a <__eeprom_end+0xff7eff2a>
      fe:	fe e6       	ldi	r31, 0x6E	; 110
     100:	db 18       	sub	r13, r11
     102:	d1 84       	ldd	r13, Z+9	; 0x09
     104:	4b 38       	cpi	r20, 0x8B	; 139
     106:	1b f7       	brvc	.-58     	; 0xce <__SREG__+0x8f>
     108:	7c 1d       	adc	r23, r12
     10a:	90 1d       	adc	r25, r0
     10c:	a4 bb       	out	0x14, r26	; 20
     10e:	e4 24       	eor	r14, r4
     110:	20 32       	cpi	r18, 0x20	; 32
     112:	84 72       	andi	r24, 0x24	; 36
     114:	5e 22       	and	r5, r30
     116:	81 00       	.word	0x0081	; ????
     118:	c9 f1       	breq	.+114    	; 0x18c <_Z8lcd_datah+0x12>
     11a:	24 ec       	ldi	r18, 0xC4	; 196
     11c:	a1 e5       	ldi	r26, 0x51	; 81
     11e:	3d 27       	eor	r19, r29

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf e5       	ldi	r28, 0x5F	; 95
     126:	d4 e0       	ldi	r29, 0x04	; 4
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	11 e0       	ldi	r17, 0x01	; 1
     12e:	a0 e6       	ldi	r26, 0x60	; 96
     130:	b0 e0       	ldi	r27, 0x00	; 0
     132:	e8 e9       	ldi	r30, 0x98	; 152
     134:	f9 e1       	ldi	r31, 0x19	; 25
     136:	02 c0       	rjmp	.+4      	; 0x13c <__do_copy_data+0x10>
     138:	05 90       	lpm	r0, Z+
     13a:	0d 92       	st	X+, r0
     13c:	a8 35       	cpi	r26, 0x58	; 88
     13e:	b1 07       	cpc	r27, r17
     140:	d9 f7       	brne	.-10     	; 0x138 <__do_copy_data+0xc>

00000142 <__do_clear_bss>:
     142:	21 e0       	ldi	r18, 0x01	; 1
     144:	a8 e5       	ldi	r26, 0x58	; 88
     146:	b1 e0       	ldi	r27, 0x01	; 1
     148:	01 c0       	rjmp	.+2      	; 0x14c <.do_clear_bss_start>

0000014a <.do_clear_bss_loop>:
     14a:	1d 92       	st	X+, r1

0000014c <.do_clear_bss_start>:
     14c:	ac 37       	cpi	r26, 0x7C	; 124
     14e:	b2 07       	cpc	r27, r18
     150:	e1 f7       	brne	.-8      	; 0x14a <.do_clear_bss_loop>
     152:	2c d7       	rcall	.+3672   	; 0xfac <main>
     154:	1f cc       	rjmp	.-1986   	; 0xfffff994 <__eeprom_end+0xff7ef994>

00000156 <__bad_interrupt>:
     156:	54 cf       	rjmp	.-344    	; 0x0 <__vectors>

00000158 <_ZL10lcd_enablev>:

////////////////////////////////////////////////////////////////////////////////
// Erzeugt einen Enable-Puls
static void lcd_enable( void )
{
	LCD_PORT |= (1<<LCD_EN);     // Enable auf 1 setzen
     158:	c5 9a       	sbi	0x18, 5	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15a:	88 e1       	ldi	r24, 0x18	; 24
     15c:	8a 95       	dec	r24
     15e:	f1 f7       	brne	.-4      	; 0x15c <_ZL10lcd_enablev+0x4>
     160:	00 c0       	rjmp	.+0      	; 0x162 <_ZL10lcd_enablev+0xa>
	_delay_us( LCD_ENABLE_US );  // kurze Pause
	LCD_PORT &= ~(1<<LCD_EN);    // Enable auf 0 setzen
     162:	c5 98       	cbi	0x18, 5	; 24
     164:	08 95       	ret

00000166 <_ZL7lcd_outh>:
// Sendet eine 4-bit Ausgabeoperation an das LCD
static void lcd_out( uint8_t data )
{
	data &= 0xF0;                       // obere 4 Bit maskieren
	
	LCD_PORT &= ~(0xF0>>(4-LCD_DB));    // Maske löschen
     166:	98 b3       	in	r25, 0x18	; 24
     168:	90 7f       	andi	r25, 0xF0	; 240
     16a:	98 bb       	out	0x18, r25	; 24
	LCD_PORT |= (data>>(4-LCD_DB));     // Bits setzen
     16c:	98 b3       	in	r25, 0x18	; 24
     16e:	82 95       	swap	r24
     170:	8f 70       	andi	r24, 0x0F	; 15
     172:	98 2b       	or	r25, r24
     174:	98 bb       	out	0x18, r25	; 24
	lcd_enable();
     176:	f0 df       	rcall	.-32     	; 0x158 <_ZL10lcd_enablev>
     178:	08 95       	ret

0000017a <_Z8lcd_datah>:
}

////////////////////////////////////////////////////////////////////////////////
// Sendet ein Datenbyte an das LCD
void lcd_data( uint8_t data )
{
     17a:	cf 93       	push	r28
     17c:	c8 2f       	mov	r28, r24
	LCD_PORT |= (1<<LCD_RS);    // RS auf 1 setzen
     17e:	c4 9a       	sbi	0x18, 4	; 24
	
	lcd_out( data );            // zuerst die oberen,
     180:	f2 df       	rcall	.-28     	; 0x166 <_ZL7lcd_outh>
	lcd_out( data<<4 );         // dann die unteren 4 Bit senden
     182:	8c 2f       	mov	r24, r28
     184:	82 95       	swap	r24
     186:	80 7f       	andi	r24, 0xF0	; 240
     188:	ee df       	rcall	.-36     	; 0x166 <_ZL7lcd_outh>
     18a:	88 e3       	ldi	r24, 0x38	; 56
     18c:	8a 95       	dec	r24
     18e:	f1 f7       	brne	.-4      	; 0x18c <_Z8lcd_datah+0x12>
     190:	00 c0       	rjmp	.+0      	; 0x192 <_Z8lcd_datah+0x18>
	
	_delay_us( LCD_WRITEDATA_US );
}
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <_Z11lcd_commandh>:

////////////////////////////////////////////////////////////////////////////////
// Sendet einen Befehl an das LCD
void lcd_command( uint8_t data )
{
     196:	cf 93       	push	r28
     198:	c8 2f       	mov	r28, r24
	LCD_PORT &= ~(1<<LCD_RS);    // RS auf 0 setzen
     19a:	c4 98       	cbi	0x18, 4	; 24
	
	lcd_out( data );             // zuerst die oberen,
     19c:	e4 df       	rcall	.-56     	; 0x166 <_ZL7lcd_outh>
	lcd_out( data<<4 );           // dann die unteren 4 Bit senden
     19e:	8c 2f       	mov	r24, r28
     1a0:	82 95       	swap	r24
     1a2:	80 7f       	andi	r24, 0xF0	; 240
     1a4:	e0 df       	rcall	.-64     	; 0x166 <_ZL7lcd_outh>
     1a6:	83 e3       	ldi	r24, 0x33	; 51
     1a8:	8a 95       	dec	r24
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <_Z11lcd_commandh+0x12>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <_Z11lcd_commandh+0x18>
	
	_delay_us( LCD_COMMAND_US );
}
     1ae:	cf 91       	pop	r28
     1b0:	08 95       	ret

000001b2 <_Z9lcd_clearv>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl zur Löschung des Displays
void lcd_clear( void )
{
	lcd_command( LCD_CLEAR_DISPLAY );
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	f0 df       	rcall	.-32     	; 0x196 <_Z11lcd_commandh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1b6:	83 e3       	ldi	r24, 0x33	; 51
     1b8:	97 e0       	ldi	r25, 0x07	; 7
     1ba:	01 97       	sbiw	r24, 0x01	; 1
     1bc:	f1 f7       	brne	.-4      	; 0x1ba <_Z9lcd_clearv+0x8>
     1be:	08 95       	ret

000001c0 <_Z8lcd_initv>:
{
	// verwendete Pins auf Ausgang schalten
	uint8_t pins = (0x0F << LCD_DB) |           // 4 Datenleitungen
	(1<<LCD_RS) |                // R/S Leitung
	(1<<LCD_EN);                 // Enable Leitung
	LCD_DDR |= pins;
     1c0:	87 b3       	in	r24, 0x17	; 23
     1c2:	8f 63       	ori	r24, 0x3F	; 63
     1c4:	87 bb       	out	0x17, r24	; 23
	
	// initial alle Ausgänge auf Null
	LCD_PORT &= ~pins;
     1c6:	88 b3       	in	r24, 0x18	; 24
     1c8:	80 7c       	andi	r24, 0xC0	; 192
     1ca:	88 bb       	out	0x18, r24	; 24
     1cc:	8f ef       	ldi	r24, 0xFF	; 255
     1ce:	95 e3       	ldi	r25, 0x35	; 53
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <_Z8lcd_initv+0x10>
     1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <_Z8lcd_initv+0x16>
     1d6:	00 00       	nop
	
	// warten auf die Bereitschaft des LCD
	_delay_ms( LCD_BOOTUP_MS );
	
	// Soft-Reset muss 3mal hintereinander gesendet werden zur Initialisierung
	lcd_out( LCD_SOFT_RESET );
     1d8:	80 e3       	ldi	r24, 0x30	; 48
     1da:	c5 df       	rcall	.-118    	; 0x166 <_ZL7lcd_outh>
     1dc:	8f ef       	ldi	r24, 0xFF	; 255
     1de:	91 e1       	ldi	r25, 0x11	; 17
     1e0:	01 97       	sbiw	r24, 0x01	; 1
     1e2:	f1 f7       	brne	.-4      	; 0x1e0 <_Z8lcd_initv+0x20>
     1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <_Z8lcd_initv+0x26>
     1e6:	00 00       	nop
	_delay_ms( LCD_SOFT_RESET_MS1 );
	
	lcd_enable();
     1e8:	b7 df       	rcall	.-146    	; 0x158 <_ZL10lcd_enablev>
     1ea:	89 e9       	ldi	r24, 0x99	; 153
     1ec:	93 e0       	ldi	r25, 0x03	; 3
     1ee:	01 97       	sbiw	r24, 0x01	; 1
     1f0:	f1 f7       	brne	.-4      	; 0x1ee <_Z8lcd_initv+0x2e>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <_Z8lcd_initv+0x34>
	_delay_ms( LCD_SOFT_RESET_MS2 );
	
	lcd_enable();
     1f4:	b1 df       	rcall	.-158    	; 0x158 <_ZL10lcd_enablev>
     1f6:	89 e9       	ldi	r24, 0x99	; 153
     1f8:	93 e0       	ldi	r25, 0x03	; 3
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <_Z8lcd_initv+0x3a>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <_Z8lcd_initv+0x40>
	_delay_ms( LCD_SOFT_RESET_MS3 );
	
	// 4-bit Modus aktivieren
	lcd_out( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT );
     200:	80 e2       	ldi	r24, 0x20	; 32
     202:	b1 df       	rcall	.-158    	; 0x166 <_ZL7lcd_outh>
     204:	8f ef       	ldi	r24, 0xFF	; 255
     206:	91 e1       	ldi	r25, 0x11	; 17
     208:	01 97       	sbiw	r24, 0x01	; 1
     20a:	f1 f7       	brne	.-4      	; 0x208 <_Z8lcd_initv+0x48>
     20c:	00 c0       	rjmp	.+0      	; 0x20e <_Z8lcd_initv+0x4e>
     20e:	00 00       	nop
	
	// 4-bit Modus / 2 Zeilen / 5x7
	lcd_command( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT |
	LCD_FUNCTION_2LINE |
	LCD_FUNCTION_5X7 );
     210:	88 e2       	ldi	r24, 0x28	; 40
     212:	c1 df       	rcall	.-126    	; 0x196 <_Z11lcd_commandh>
	
	// Display ein / Cursor aus / Blinken aus
	lcd_command( LCD_SET_DISPLAY |
	LCD_DISPLAY_ON |
	LCD_CURSOR_OFF |
	LCD_BLINKING_OFF);
     214:	8c e0       	ldi	r24, 0x0C	; 12
     216:	bf df       	rcall	.-130    	; 0x196 <_Z11lcd_commandh>
	
	// Cursor inkrement / kein Scrollen
	lcd_command( LCD_SET_ENTRY |
	LCD_ENTRY_INCREASE |
	LCD_ENTRY_NOSHIFT );
     218:	86 e0       	ldi	r24, 0x06	; 6
     21a:	bd df       	rcall	.-134    	; 0x196 <_Z11lcd_commandh>
	
	lcd_clear();
     21c:	ca df       	rcall	.-108    	; 0x1b2 <_Z9lcd_clearv>
     21e:	08 95       	ret

00000220 <_Z8lcd_homev>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl: Cursor Home
void lcd_home( void )
{
	lcd_command( LCD_CURSOR_HOME );
     220:	82 e0       	ldi	r24, 0x02	; 2
     222:	b9 df       	rcall	.-142    	; 0x196 <_Z11lcd_commandh>
     224:	83 e3       	ldi	r24, 0x33	; 51
     226:	97 e0       	ldi	r25, 0x07	; 7
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <_Z8lcd_homev+0x8>
     22c:	08 95       	ret

0000022e <_Z13lcd_setcursorhh>:

void lcd_setcursor( uint8_t x, uint8_t y )
{
	uint8_t data;
	
	switch (y)
     22e:	62 30       	cpi	r22, 0x02	; 2
     230:	59 f0       	breq	.+22     	; 0x248 <_Z13lcd_setcursorhh+0x1a>
     232:	18 f4       	brcc	.+6      	; 0x23a <_Z13lcd_setcursorhh+0xc>
     234:	61 30       	cpi	r22, 0x01	; 1
     236:	71 f4       	brne	.+28     	; 0x254 <_Z13lcd_setcursorhh+0x26>
     238:	05 c0       	rjmp	.+10     	; 0x244 <_Z13lcd_setcursorhh+0x16>
     23a:	63 30       	cpi	r22, 0x03	; 3
     23c:	39 f0       	breq	.+14     	; 0x24c <_Z13lcd_setcursorhh+0x1e>
     23e:	64 30       	cpi	r22, 0x04	; 4
     240:	49 f4       	brne	.+18     	; 0x254 <_Z13lcd_setcursorhh+0x26>
     242:	06 c0       	rjmp	.+12     	; 0x250 <_Z13lcd_setcursorhh+0x22>
	{
		case 1:    // 1. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE1 + x;
     244:	80 58       	subi	r24, 0x80	; 128
		break;
     246:	05 c0       	rjmp	.+10     	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 2:    // 2. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE2 + x;
     248:	80 54       	subi	r24, 0x40	; 64
		break;
     24a:	03 c0       	rjmp	.+6      	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 3:    // 3. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE3 + x;
     24c:	80 57       	subi	r24, 0x70	; 112
		break;
     24e:	01 c0       	rjmp	.+2      	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 4:    // 4. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE4 + x;
     250:	80 53       	subi	r24, 0x30	; 48
		
		default:
		return;                                   // für den Fall einer falschen Zeile
	}
	
	lcd_command( data );
     252:	a1 df       	rcall	.-190    	; 0x196 <_Z11lcd_commandh>
     254:	08 95       	ret

00000256 <_Z10lcd_stringPKc>:

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	ec 01       	movw	r28, r24
	while( *data != '\0' )
     25c:	88 81       	ld	r24, Y
     25e:	88 23       	and	r24, r24
     260:	29 f0       	breq	.+10     	; 0x26c <_Z10lcd_stringPKc+0x16>
}

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
     262:	21 96       	adiw	r28, 0x01	; 1
{
	while( *data != '\0' )
	lcd_data( *data++ );
     264:	8a df       	rcall	.-236    	; 0x17a <_Z8lcd_datah>
////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
	while( *data != '\0' )
     266:	89 91       	ld	r24, Y+
     268:	81 11       	cpse	r24, r1
     26a:	fc cf       	rjmp	.-8      	; 0x264 <_Z10lcd_stringPKc+0xe>
	lcd_data( *data++ );
}
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <_Z8ADC_Readh>:
#ifndef ADC_H_
#define ADC_H_

uint16_t ADC_Read( uint8_t channel )
{
	ADMUX = (ADMUX & ~(0x1F)) | (channel & 0x1F);
     272:	97 b1       	in	r25, 0x07	; 7
     274:	8f 71       	andi	r24, 0x1F	; 31
     276:	90 7e       	andi	r25, 0xE0	; 224
     278:	98 2b       	or	r25, r24
     27a:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1<<ADSC);
     27c:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     27e:	36 99       	sbic	0x06, 6	; 6
     280:	fe cf       	rjmp	.-4      	; 0x27e <_Z8ADC_Readh+0xc>
	}
	return ADCW;
     282:	24 b1       	in	r18, 0x04	; 4
     284:	35 b1       	in	r19, 0x05	; 5
}
     286:	82 2f       	mov	r24, r18
     288:	93 2f       	mov	r25, r19
     28a:	08 95       	ret

0000028c <_Z11lichteinaush>:
		}
	}
}

void lichteinaus(uint8_t pos){
	switch (pos)
     28c:	82 30       	cpi	r24, 0x02	; 2
     28e:	91 f0       	breq	.+36     	; 0x2b4 <_Z11lichteinaush+0x28>
     290:	28 f4       	brcc	.+10     	; 0x29c <_Z11lichteinaush+0x10>
     292:	88 23       	and	r24, r24
     294:	49 f0       	breq	.+18     	; 0x2a8 <_Z11lichteinaush+0x1c>
     296:	81 30       	cpi	r24, 0x01	; 1
     298:	c1 f4       	brne	.+48     	; 0x2ca <_Z11lichteinaush+0x3e>
     29a:	0a c0       	rjmp	.+20     	; 0x2b0 <_Z11lichteinaush+0x24>
     29c:	84 30       	cpi	r24, 0x04	; 4
     29e:	71 f0       	breq	.+28     	; 0x2bc <_Z11lichteinaush+0x30>
     2a0:	58 f0       	brcs	.+22     	; 0x2b8 <_Z11lichteinaush+0x2c>
     2a2:	85 30       	cpi	r24, 0x05	; 5
     2a4:	91 f4       	brne	.+36     	; 0x2ca <_Z11lichteinaush+0x3e>
     2a6:	0e c0       	rjmp	.+28     	; 0x2c4 <_Z11lichteinaush+0x38>
	{
		case 0:
			PORTC &= ~((1<<PC5) | (1<<PC4) | (1<<PC3));
     2a8:	85 b3       	in	r24, 0x15	; 21
     2aa:	87 7c       	andi	r24, 0xC7	; 199
     2ac:	85 bb       	out	0x15, r24	; 21
			break;
     2ae:	08 95       	ret
			
		case 1:
			PORTC |= (1<<PC5);
     2b0:	ad 9a       	sbi	0x15, 5	; 21
			break;
     2b2:	08 95       	ret
		
		case 2:
			PORTC |= (1<<PC4);
     2b4:	ac 9a       	sbi	0x15, 4	; 21
			break;
     2b6:	08 95       	ret
			
		case 3: 
			PORTC |= (1<<PC3);
     2b8:	ab 9a       	sbi	0x15, 3	; 21
			break;
     2ba:	08 95       	ret
		
		case 4:
			PORTC |= ((1<<PC5) | (1<<PC4) | (1<<PC3));
     2bc:	85 b3       	in	r24, 0x15	; 21
     2be:	88 63       	ori	r24, 0x38	; 56
     2c0:	85 bb       	out	0x15, r24	; 21
			break;
     2c2:	08 95       	ret
		
		case 5:
			PORTC |= ((1<<PC5) | (1<<PC4));
     2c4:	85 b3       	in	r24, 0x15	; 21
     2c6:	80 63       	ori	r24, 0x30	; 48
     2c8:	85 bb       	out	0x15, r24	; 21
     2ca:	08 95       	ret

000002cc <_Z6Weckerv>:

#ifndef ZEIT_H_
#define ZEIT_H_

void Wecker(){
	if (WochenTag!=0 && WochenTag!=6)
     2cc:	80 91 78 01 	lds	r24, 0x0178
     2d0:	88 23       	and	r24, r24
     2d2:	a1 f0       	breq	.+40     	; 0x2fc <_Z6Weckerv+0x30>
     2d4:	86 30       	cpi	r24, 0x06	; 6
     2d6:	91 f0       	breq	.+36     	; 0x2fc <_Z6Weckerv+0x30>
	{
		if(Stunden==WStunden[0]){
     2d8:	90 91 76 01 	lds	r25, 0x0176
     2dc:	80 91 79 01 	lds	r24, 0x0179
     2e0:	98 13       	cpse	r25, r24
     2e2:	1d c0       	rjmp	.+58     	; 0x31e <_Z6Weckerv+0x52>
			if(Minuten==WMinuten[0]){
     2e4:	90 91 74 01 	lds	r25, 0x0174
     2e8:	80 91 7a 01 	lds	r24, 0x017A
     2ec:	98 13       	cpse	r25, r24
     2ee:	17 c0       	rjmp	.+46     	; 0x31e <_Z6Weckerv+0x52>
				Wan = 1;
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	80 93 73 01 	sts	0x0173, r24
				lichteinaus(4);
     2f6:	84 e0       	ldi	r24, 0x04	; 4
     2f8:	c9 df       	rcall	.-110    	; 0x28c <_Z11lichteinaush>
     2fa:	08 95       	ret
			}
		}
	}
	else
	{
		if(Stunden==WStunden[1]){
     2fc:	90 91 77 01 	lds	r25, 0x0177
     300:	80 91 79 01 	lds	r24, 0x0179
     304:	98 13       	cpse	r25, r24
     306:	0b c0       	rjmp	.+22     	; 0x31e <_Z6Weckerv+0x52>
			if(Minuten==WMinuten[1]){
     308:	90 91 75 01 	lds	r25, 0x0175
     30c:	80 91 7a 01 	lds	r24, 0x017A
     310:	98 13       	cpse	r25, r24
     312:	05 c0       	rjmp	.+10     	; 0x31e <_Z6Weckerv+0x52>
				Wan = 1;
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	80 93 73 01 	sts	0x0173, r24
				lichteinaus(4);
     31a:	84 e0       	ldi	r24, 0x04	; 4
     31c:	b7 df       	rcall	.-146    	; 0x28c <_Z11lichteinaush>
     31e:	08 95       	ret

00000320 <_Z10temperaturv>:


}


void temperatur(){
     320:	cf 92       	push	r12
     322:	df 92       	push	r13
     324:	ef 92       	push	r14
     326:	ff 92       	push	r15
     328:	0f 93       	push	r16
     32a:	1f 93       	push	r17
     32c:	cf 93       	push	r28
     32e:	df 93       	push	r29
	ADC_Read(0);
     330:	80 e0       	ldi	r24, 0x00	; 0
     332:	9f df       	rcall	.-194    	; 0x272 <_Z8ADC_Readh>
	uint16_t adcval = ADC_Read(0);
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	9d df       	rcall	.-198    	; 0x272 <_Z8ADC_Readh>
	double span= (double)adcval*(5.0/1024.0);
     338:	bc 01       	movw	r22, r24
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	82 d7       	rcall	.+3844   	; 0x1244 <__floatunsisf>
     340:	20 e0       	ldi	r18, 0x00	; 0
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	40 ea       	ldi	r20, 0xA0	; 160
     346:	5b e3       	ldi	r21, 0x3B	; 59
     348:	0b d8       	rcall	.-4074   	; 0xfffff360 <__eeprom_end+0xff7ef360>
     34a:	06 2f       	mov	r16, r22
     34c:	17 2f       	mov	r17, r23
     34e:	d8 2f       	mov	r29, r24
     350:	c9 2f       	mov	r28, r25
	double widerst = ((double)span*2700.0)/((double)(5-(double)span));
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 ec       	ldi	r19, 0xC0	; 192
     356:	48 e2       	ldi	r20, 0x28	; 40
     358:	55 e4       	ldi	r21, 0x45	; 69
     35a:	02 d8       	rcall	.-4092   	; 0xfffff360 <__eeprom_end+0xff7ef360>
     35c:	6b 01       	movw	r12, r22
     35e:	7c 01       	movw	r14, r24
     360:	20 2f       	mov	r18, r16
     362:	31 2f       	mov	r19, r17
     364:	4d 2f       	mov	r20, r29
     366:	5c 2f       	mov	r21, r28
     368:	60 e0       	ldi	r22, 0x00	; 0
     36a:	70 e0       	ldi	r23, 0x00	; 0
     36c:	80 ea       	ldi	r24, 0xA0	; 160
     36e:	90 e4       	ldi	r25, 0x40	; 64
     370:	9c d6       	rcall	.+3384   	; 0x10aa <__subsf3>
     372:	9b 01       	movw	r18, r22
     374:	ac 01       	movw	r20, r24
     376:	c7 01       	movw	r24, r14
     378:	b6 01       	movw	r22, r12
     37a:	fc d6       	rcall	.+3576   	; 0x1174 <__divsf3>
	tempera = (100.0/1387.0)*widerst+(50+tempoffset-(100.0/1387.0)*2417.0);
     37c:	25 e2       	ldi	r18, 0x25	; 37
     37e:	38 ea       	ldi	r19, 0xA8	; 168
     380:	43 e9       	ldi	r20, 0x93	; 147
     382:	5d e3       	ldi	r21, 0x3D	; 61
     384:	ed d7       	rcall	.+4058   	; 0x1360 <__mulsf3>
     386:	6b 01       	movw	r12, r22
     388:	7c 01       	movw	r14, r24
     38a:	60 91 62 00 	lds	r22, 0x0062
     38e:	77 27       	eor	r23, r23
     390:	67 fd       	sbrc	r22, 7
     392:	70 95       	com	r23
     394:	6e 5c       	subi	r22, 0xCE	; 206
     396:	7f 4f       	sbci	r23, 0xFF	; 255
     398:	88 27       	eor	r24, r24
     39a:	77 fd       	sbrc	r23, 7
     39c:	80 95       	com	r24
     39e:	98 2f       	mov	r25, r24
     3a0:	53 d7       	rcall	.+3750   	; 0x1248 <__floatsisf>
     3a2:	21 ed       	ldi	r18, 0xD1	; 209
     3a4:	32 e4       	ldi	r19, 0x42	; 66
     3a6:	4e e2       	ldi	r20, 0x2E	; 46
     3a8:	53 e4       	ldi	r21, 0x43	; 67
     3aa:	7f d6       	rcall	.+3326   	; 0x10aa <__subsf3>
     3ac:	9b 01       	movw	r18, r22
     3ae:	ac 01       	movw	r20, r24
     3b0:	c7 01       	movw	r24, r14
     3b2:	b6 01       	movw	r22, r12
     3b4:	7b d6       	rcall	.+3318   	; 0x10ac <__addsf3>
     3b6:	60 93 6e 01 	sts	0x016E, r22
     3ba:	70 93 6f 01 	sts	0x016F, r23
     3be:	80 93 70 01 	sts	0x0170, r24
     3c2:	90 93 71 01 	sts	0x0171, r25
}
     3c6:	df 91       	pop	r29
     3c8:	cf 91       	pop	r28
     3ca:	1f 91       	pop	r17
     3cc:	0f 91       	pop	r16
     3ce:	ff 90       	pop	r15
     3d0:	ef 90       	pop	r14
     3d2:	df 90       	pop	r13
     3d4:	cf 90       	pop	r12
     3d6:	08 95       	ret

000003d8 <_Z4zeitv>:

void zeit(){
	sektemp=Sekunden;
     3d8:	80 91 7b 01 	lds	r24, 0x017B
     3dc:	80 93 72 01 	sts	0x0172, r24
	if (Sekunden >= 60){
     3e0:	8c 33       	cpi	r24, 0x3C	; 60
     3e2:	30 f1       	brcs	.+76     	; 0x430 <_Z4zeitv+0x58>
		//Temperatur bestimmen
		temperatur();
     3e4:	9d df       	rcall	.-198    	; 0x320 <_Z10temperaturv>
		
		Sekunden = 0;
     3e6:	10 92 7b 01 	sts	0x017B, r1
		Minuten++;
     3ea:	80 91 7a 01 	lds	r24, 0x017A
     3ee:	8f 5f       	subi	r24, 0xFF	; 255
		if(Minuten >= 60){
     3f0:	8c 33       	cpi	r24, 0x3C	; 60
     3f2:	18 f4       	brcc	.+6      	; 0x3fa <_Z4zeitv+0x22>
	if (Sekunden >= 60){
		//Temperatur bestimmen
		temperatur();
		
		Sekunden = 0;
		Minuten++;
     3f4:	80 93 7a 01 	sts	0x017A, r24
     3f8:	07 c0       	rjmp	.+14     	; 0x408 <_Z4zeitv+0x30>
		if(Minuten >= 60){
			Minuten = 0;
     3fa:	10 92 7a 01 	sts	0x017A, r1
			Stunden++;
     3fe:	80 91 79 01 	lds	r24, 0x0179
     402:	8f 5f       	subi	r24, 0xFF	; 255
     404:	80 93 79 01 	sts	0x0179, r24
		}
		if(Stunden >= 24){
     408:	80 91 79 01 	lds	r24, 0x0179
     40c:	88 31       	cpi	r24, 0x18	; 24
     40e:	80 f0       	brcs	.+32     	; 0x430 <_Z4zeitv+0x58>
			Stunden = 0;
     410:	10 92 79 01 	sts	0x0179, r1
			WochenTag++;
     414:	80 91 78 01 	lds	r24, 0x0178
     418:	8f 5f       	subi	r24, 0xFF	; 255
			if (WochenTag>=7)
     41a:	87 30       	cpi	r24, 0x07	; 7
     41c:	18 f4       	brcc	.+6      	; 0x424 <_Z4zeitv+0x4c>
			Minuten = 0;
			Stunden++;
		}
		if(Stunden >= 24){
			Stunden = 0;
			WochenTag++;
     41e:	80 93 78 01 	sts	0x0178, r24
     422:	02 c0       	rjmp	.+4      	; 0x428 <_Z4zeitv+0x50>
			if (WochenTag>=7)
			{
				WochenTag=0;
     424:	10 92 78 01 	sts	0x0178, r1
			}
			Sekunden += sekoffset; //Ausgleich der VerlustSekunden
     428:	80 91 6d 01 	lds	r24, 0x016D
     42c:	80 93 7b 01 	sts	0x017B, r24
		}
	}
	
	if(Wan==0)
     430:	80 91 73 01 	lds	r24, 0x0173
     434:	81 11       	cpse	r24, r1
     436:	01 c0       	rjmp	.+2      	; 0x43a <_Z4zeitv+0x62>
	{
		Wecker();
     438:	49 df       	rcall	.-366    	; 0x2cc <_Z6Weckerv>
     43a:	08 95       	ret

0000043c <_Z4wtagh>:

#ifndef AUSGABE_H_
#define AUSGABE_H_

void wtag(uint8_t numm){
	switch (numm)
     43c:	83 30       	cpi	r24, 0x03	; 3
     43e:	b9 f0       	breq	.+46     	; 0x46e <__stack+0xf>
     440:	20 f4       	brcc	.+8      	; 0x44a <_Z4wtagh+0xe>
     442:	81 30       	cpi	r24, 0x01	; 1
     444:	61 f0       	breq	.+24     	; 0x45e <_Z4wtagh+0x22>
     446:	78 f4       	brcc	.+30     	; 0x466 <__stack+0x7>
     448:	06 c0       	rjmp	.+12     	; 0x456 <_Z4wtagh+0x1a>
     44a:	85 30       	cpi	r24, 0x05	; 5
     44c:	c1 f0       	breq	.+48     	; 0x47e <__stack+0x1f>
     44e:	98 f0       	brcs	.+38     	; 0x476 <__stack+0x17>
     450:	86 30       	cpi	r24, 0x06	; 6
     452:	e1 f4       	brne	.+56     	; 0x48c <__stack+0x2d>
     454:	18 c0       	rjmp	.+48     	; 0x486 <__stack+0x27>
	{
		case 0:
		lcd_string("So ");
     456:	83 e6       	ldi	r24, 0x63	; 99
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	fd de       	rcall	.-518    	; 0x256 <_Z10lcd_stringPKc>
		break;
     45c:	08 95       	ret
		
		case 1:
		lcd_string("Mo ");
     45e:	87 e6       	ldi	r24, 0x67	; 103
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	f9 de       	rcall	.-526    	; 0x256 <_Z10lcd_stringPKc>
		break;
     464:	08 95       	ret
		
		case 2:
		lcd_string("Di ");
     466:	8b e6       	ldi	r24, 0x6B	; 107
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	f5 de       	rcall	.-534    	; 0x256 <_Z10lcd_stringPKc>
		break;
     46c:	08 95       	ret
		
		case 3:
		lcd_string("Mi ");
     46e:	8f e6       	ldi	r24, 0x6F	; 111
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	f1 de       	rcall	.-542    	; 0x256 <_Z10lcd_stringPKc>
		break;
     474:	08 95       	ret
		
		case 4:
		lcd_string("Do ");
     476:	83 e7       	ldi	r24, 0x73	; 115
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	ed de       	rcall	.-550    	; 0x256 <_Z10lcd_stringPKc>
		break;
     47c:	08 95       	ret
		
		case 5:
		lcd_string("Fr ");
     47e:	87 e7       	ldi	r24, 0x77	; 119
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	e9 de       	rcall	.-558    	; 0x256 <_Z10lcd_stringPKc>
		break;
     484:	08 95       	ret
		
		case 6:
		lcd_string("Sa ");
     486:	8b e7       	ldi	r24, 0x7B	; 123
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	e5 de       	rcall	.-566    	; 0x256 <_Z10lcd_stringPKc>
     48c:	08 95       	ret

0000048e <_Z7zeitaush>:
			break;
	}
}

void zeitaus(uint8_t pos){
	switch (pos)
     48e:	88 23       	and	r24, r24
     490:	21 f0       	breq	.+8      	; 0x49a <_Z7zeitaush+0xc>
     492:	81 30       	cpi	r24, 0x01	; 1
     494:	09 f0       	breq	.+2      	; 0x498 <_Z7zeitaush+0xa>
     496:	42 c0       	rjmp	.+132    	; 0x51c <_Z7zeitaush+0x8e>
     498:	1a c0       	rjmp	.+52     	; 0x4ce <_Z7zeitaush+0x40>
	{
		case 0:
			itoa( Stunden, Buffer, 10 );
     49a:	4a e0       	ldi	r20, 0x0A	; 10
     49c:	50 e0       	ldi	r21, 0x00	; 0
     49e:	69 e5       	ldi	r22, 0x59	; 89
     4a0:	71 e0       	ldi	r23, 0x01	; 1
     4a2:	80 91 79 01 	lds	r24, 0x0179
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	de d7       	rcall	.+4028   	; 0x1466 <itoa>
			lcd_string(Buffer);
     4aa:	89 e5       	ldi	r24, 0x59	; 89
     4ac:	91 e0       	ldi	r25, 0x01	; 1
     4ae:	d3 de       	rcall	.-602    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     4b0:	88 ec       	ldi	r24, 0xC8	; 200
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	d0 de       	rcall	.-608    	; 0x256 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     4b6:	4a e0       	ldi	r20, 0x0A	; 10
     4b8:	50 e0       	ldi	r21, 0x00	; 0
     4ba:	69 e5       	ldi	r22, 0x59	; 89
     4bc:	71 e0       	ldi	r23, 0x01	; 1
     4be:	80 91 7a 01 	lds	r24, 0x017A
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	d0 d7       	rcall	.+4000   	; 0x1466 <itoa>
			lcd_string(Buffer);
     4c6:	89 e5       	ldi	r24, 0x59	; 89
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	c5 de       	rcall	.-630    	; 0x256 <_Z10lcd_stringPKc>
			
			break;
     4cc:	08 95       	ret
		
		case 1:
			itoa( Stunden, Buffer, 10 );
     4ce:	4a e0       	ldi	r20, 0x0A	; 10
     4d0:	50 e0       	ldi	r21, 0x00	; 0
     4d2:	69 e5       	ldi	r22, 0x59	; 89
     4d4:	71 e0       	ldi	r23, 0x01	; 1
     4d6:	80 91 79 01 	lds	r24, 0x0179
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	c4 d7       	rcall	.+3976   	; 0x1466 <itoa>
			lcd_string(Buffer);
     4de:	89 e5       	ldi	r24, 0x59	; 89
     4e0:	91 e0       	ldi	r25, 0x01	; 1
     4e2:	b9 de       	rcall	.-654    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     4e4:	88 ec       	ldi	r24, 0xC8	; 200
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	b6 de       	rcall	.-660    	; 0x256 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     4ea:	4a e0       	ldi	r20, 0x0A	; 10
     4ec:	50 e0       	ldi	r21, 0x00	; 0
     4ee:	69 e5       	ldi	r22, 0x59	; 89
     4f0:	71 e0       	ldi	r23, 0x01	; 1
     4f2:	80 91 7a 01 	lds	r24, 0x017A
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	b6 d7       	rcall	.+3948   	; 0x1466 <itoa>
			lcd_string(Buffer);
     4fa:	89 e5       	ldi	r24, 0x59	; 89
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	ab de       	rcall	.-682    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     500:	88 ec       	ldi	r24, 0xC8	; 200
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	a8 de       	rcall	.-688    	; 0x256 <_Z10lcd_stringPKc>
			itoa(Sekunden, Buffer,10);
     506:	4a e0       	ldi	r20, 0x0A	; 10
     508:	50 e0       	ldi	r21, 0x00	; 0
     50a:	69 e5       	ldi	r22, 0x59	; 89
     50c:	71 e0       	ldi	r23, 0x01	; 1
     50e:	80 91 7b 01 	lds	r24, 0x017B
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	a8 d7       	rcall	.+3920   	; 0x1466 <itoa>
			lcd_string(Buffer);
     516:	89 e5       	ldi	r24, 0x59	; 89
     518:	91 e0       	ldi	r25, 0x01	; 1
     51a:	9d de       	rcall	.-710    	; 0x256 <_Z10lcd_stringPKc>
     51c:	08 95       	ret

0000051e <_Z3aushh>:
		default:
		break;
	}
}

void aus(uint8_t zeile, uint8_t pos){
     51e:	0f 93       	push	r16
     520:	1f 93       	push	r17
     522:	cf 93       	push	r28
     524:	c6 2f       	mov	r28, r22
	
	switch (zeile)
     526:	81 30       	cpi	r24, 0x01	; 1
     528:	21 f0       	breq	.+8      	; 0x532 <_Z3aushh+0x14>
     52a:	82 30       	cpi	r24, 0x02	; 2
     52c:	09 f0       	breq	.+2      	; 0x530 <_Z3aushh+0x12>
     52e:	72 c0       	rjmp	.+228    	; 0x614 <_Z3aushh+0xf6>
     530:	59 c0       	rjmp	.+178    	; 0x5e4 <_Z3aushh+0xc6>
	{
		case 1:
			lcd_clear();
     532:	3f de       	rcall	.-898    	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     534:	75 de       	rcall	.-790    	; 0x220 <_Z8lcd_homev>
			switch (pos)
     536:	c3 30       	cpi	r28, 0x03	; 3
     538:	11 f1       	breq	.+68     	; 0x57e <_Z3aushh+0x60>
     53a:	20 f4       	brcc	.+8      	; 0x544 <_Z3aushh+0x26>
     53c:	c1 30       	cpi	r28, 0x01	; 1
     53e:	91 f0       	breq	.+36     	; 0x564 <_Z3aushh+0x46>
     540:	d0 f4       	brcc	.+52     	; 0x576 <_Z3aushh+0x58>
     542:	07 c0       	rjmp	.+14     	; 0x552 <_Z3aushh+0x34>
     544:	c5 30       	cpi	r28, 0x05	; 5
     546:	59 f1       	breq	.+86     	; 0x59e <_Z3aushh+0x80>
     548:	00 f1       	brcs	.+64     	; 0x58a <_Z3aushh+0x6c>
     54a:	c6 30       	cpi	r28, 0x06	; 6
     54c:	09 f0       	breq	.+2      	; 0x550 <_Z3aushh+0x32>
     54e:	62 c0       	rjmp	.+196    	; 0x614 <_Z3aushh+0xf6>
     550:	43 c0       	rjmp	.+134    	; 0x5d8 <_Z3aushh+0xba>
			{
				case 0:
					//Alles ohne Sekunden
					wtag(WochenTag);
     552:	80 91 78 01 	lds	r24, 0x0178
     556:	72 df       	rcall	.-284    	; 0x43c <_Z4wtagh>
					lcd_string(" ");
     558:	8f e9       	ldi	r24, 0x9F	; 159
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	7c de       	rcall	.-776    	; 0x256 <_Z10lcd_stringPKc>
					zeitaus(0);
     55e:	80 e0       	ldi	r24, 0x00	; 0
     560:	96 df       	rcall	.-212    	; 0x48e <_Z7zeitaush>
					
					break;
     562:	58 c0       	rjmp	.+176    	; 0x614 <_Z3aushh+0xf6>
					
				case 1:
					//Alles
					wtag(WochenTag);
     564:	80 91 78 01 	lds	r24, 0x0178
     568:	69 df       	rcall	.-302    	; 0x43c <_Z4wtagh>
					lcd_string(" ");
     56a:	8f e9       	ldi	r24, 0x9F	; 159
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	73 de       	rcall	.-794    	; 0x256 <_Z10lcd_stringPKc>
					zeitaus(1);
     570:	81 e0       	ldi	r24, 0x01	; 1
     572:	8d df       	rcall	.-230    	; 0x48e <_Z7zeitaush>
					
					break;
     574:	4f c0       	rjmp	.+158    	; 0x614 <_Z3aushh+0xf6>
				case 2:
					//Nur Kalender
					wtag(WochenTag);
     576:	80 91 78 01 	lds	r24, 0x0178
     57a:	60 df       	rcall	.-320    	; 0x43c <_Z4wtagh>
					
					break;
     57c:	4b c0       	rjmp	.+150    	; 0x614 <_Z3aushh+0xf6>
				case 3:
					//Nur Zeit mit Sekunden mit WDAY
					wtag(WochenTag);
     57e:	80 91 78 01 	lds	r24, 0x0178
     582:	5c df       	rcall	.-328    	; 0x43c <_Z4wtagh>
					zeitaus(1);
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	83 df       	rcall	.-250    	; 0x48e <_Z7zeitaush>
					
					break;
     588:	45 c0       	rjmp	.+138    	; 0x614 <_Z3aushh+0xf6>
					
				case 4:
					lcd_string("Guten Tag");
     58a:	8f e7       	ldi	r24, 0x7F	; 127
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	63 de       	rcall	.-826    	; 0x256 <_Z10lcd_stringPKc>
					lcd_setcursor(0,2);
     590:	62 e0       	ldi	r22, 0x02	; 2
     592:	80 e0       	ldi	r24, 0x00	; 0
     594:	4c de       	rcall	.-872    	; 0x22e <_Z13lcd_setcursorhh>
					lcd_string("Wecker start");
     596:	89 e8       	ldi	r24, 0x89	; 137
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	5d de       	rcall	.-838    	; 0x256 <_Z10lcd_stringPKc>
					
					break;
     59c:	3b c0       	rjmp	.+118    	; 0x614 <_Z3aushh+0xf6>
				
				case 5:
					//Wecker
					lcd_string("Weckzeit: ");
     59e:	86 e9       	ldi	r24, 0x96	; 150
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	59 de       	rcall	.-846    	; 0x256 <_Z10lcd_stringPKc>
					itoa(WStunden[0],Buffer,10);
     5a4:	4a e0       	ldi	r20, 0x0A	; 10
     5a6:	50 e0       	ldi	r21, 0x00	; 0
     5a8:	69 e5       	ldi	r22, 0x59	; 89
     5aa:	71 e0       	ldi	r23, 0x01	; 1
     5ac:	80 91 76 01 	lds	r24, 0x0176
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	59 d7       	rcall	.+3762   	; 0x1466 <itoa>
					lcd_string(Buffer);
     5b4:	89 e5       	ldi	r24, 0x59	; 89
     5b6:	91 e0       	ldi	r25, 0x01	; 1
     5b8:	4e de       	rcall	.-868    	; 0x256 <_Z10lcd_stringPKc>
					lcd_string(":");
     5ba:	88 ec       	ldi	r24, 0xC8	; 200
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	4b de       	rcall	.-874    	; 0x256 <_Z10lcd_stringPKc>
					itoa(WMinuten[0],Buffer,10);
     5c0:	4a e0       	ldi	r20, 0x0A	; 10
     5c2:	50 e0       	ldi	r21, 0x00	; 0
     5c4:	69 e5       	ldi	r22, 0x59	; 89
     5c6:	71 e0       	ldi	r23, 0x01	; 1
     5c8:	80 91 74 01 	lds	r24, 0x0174
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	4b d7       	rcall	.+3734   	; 0x1466 <itoa>
					lcd_string(Buffer);
     5d0:	89 e5       	ldi	r24, 0x59	; 89
     5d2:	91 e0       	ldi	r25, 0x01	; 1
     5d4:	40 de       	rcall	.-896    	; 0x256 <_Z10lcd_stringPKc>
					
					break;
     5d6:	1e c0       	rjmp	.+60     	; 0x614 <_Z3aushh+0xf6>
					
				case 6:
					//Zeit ohne Sekunden mit WDAY
					wtag(WochenTag);
     5d8:	80 91 78 01 	lds	r24, 0x0178
     5dc:	2f df       	rcall	.-418    	; 0x43c <_Z4wtagh>
					zeitaus(0);
     5de:	80 e0       	ldi	r24, 0x00	; 0
     5e0:	56 df       	rcall	.-340    	; 0x48e <_Z7zeitaush>
					
					break;
     5e2:	18 c0       	rjmp	.+48     	; 0x614 <_Z3aushh+0xf6>
			}
			break;
			
		case 2:
			lcd_setcursor(0,2);
     5e4:	62 e0       	ldi	r22, 0x02	; 2
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	22 de       	rcall	.-956    	; 0x22e <_Z13lcd_setcursorhh>
				switch (pos)
     5ea:	c1 30       	cpi	r28, 0x01	; 1
     5ec:	99 f4       	brne	.+38     	; 0x614 <_Z3aushh+0xf6>
					
						break;
						
					case 1:
						//Temperatur
						dtostrf(tempera,2,2,Buffer);
     5ee:	60 91 6e 01 	lds	r22, 0x016E
     5f2:	70 91 6f 01 	lds	r23, 0x016F
     5f6:	80 91 70 01 	lds	r24, 0x0170
     5fa:	90 91 71 01 	lds	r25, 0x0171
     5fe:	09 e5       	ldi	r16, 0x59	; 89
     600:	11 e0       	ldi	r17, 0x01	; 1
     602:	22 e0       	ldi	r18, 0x02	; 2
     604:	42 e0       	ldi	r20, 0x02	; 2
     606:	0f d7       	rcall	.+3614   	; 0x1426 <dtostrf>
						lcd_string(Buffer);
     608:	c8 01       	movw	r24, r16
     60a:	25 de       	rcall	.-950    	; 0x256 <_Z10lcd_stringPKc>
						lcd_data(0b11011111); //°
     60c:	8f ed       	ldi	r24, 0xDF	; 223
     60e:	b5 dd       	rcall	.-1174   	; 0x17a <_Z8lcd_datah>
						lcd_data(0b01000011); //C
     610:	83 e4       	ldi	r24, 0x43	; 67
     612:	b3 dd       	rcall	.-1178   	; 0x17a <_Z8lcd_datah>
						
						break;
				}
			break;
	}
}
     614:	cf 91       	pop	r28
     616:	1f 91       	pop	r17
     618:	0f 91       	pop	r16
     61a:	08 95       	ret

0000061c <_Z8erhoehenPhhhPKc>:
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     61c:	cf 93       	push	r28
     61e:	df 93       	push	r29
     620:	e9 01       	movw	r28, r18

#endif /* DEFINITIONEN_H_ */

inline uint8_t debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( !(*port & (1 << pin)) )
     622:	82 99       	sbic	0x10, 2	; 16
     624:	25 c0       	rjmp	.+74     	; 0x670 <_Z8erhoehenPhhhPKc+0x54>
     626:	ef ef       	ldi	r30, 0xFF	; 255
     628:	f3 eb       	ldi	r31, 0xB3	; 179
     62a:	31 97       	sbiw	r30, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <_Z8erhoehenPhhhPKc+0xe>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <_Z8erhoehenPhhhPKc+0x14>
     630:	00 00       	nop
     632:	ef ef       	ldi	r30, 0xFF	; 255
     634:	f3 e2       	ldi	r31, 0x23	; 35
     636:	31 97       	sbiw	r30, 0x01	; 1
     638:	f1 f7       	brne	.-4      	; 0x636 <_Z8erhoehenPhhhPKc+0x1a>
     63a:	00 c0       	rjmp	.+0      	; 0x63c <_Z8erhoehenPhhhPKc+0x20>
     63c:	00 00       	nop
	if(debounce(&PIND,2))
     63e:	82 99       	sbic	0x10, 2	; 16
     640:	17 c0       	rjmp	.+46     	; 0x670 <_Z8erhoehenPhhhPKc+0x54>
	{
		*var +=1 ;
     642:	fc 01       	movw	r30, r24
     644:	20 81       	ld	r18, Z
     646:	2f 5f       	subi	r18, 0xFF	; 255
		if(*var>=obergrenze){
     648:	26 17       	cp	r18, r22
     64a:	10 f4       	brcc	.+4      	; 0x650 <_Z8erhoehenPhhhPKc+0x34>
//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
	if(debounce(&PIND,2))
	{
		*var +=1 ;
     64c:	20 83       	st	Z, r18
     64e:	02 c0       	rjmp	.+4      	; 0x654 <_Z8erhoehenPhhhPKc+0x38>
		if(*var>=obergrenze){
			*var=0;
     650:	fc 01       	movw	r30, r24
     652:	10 82       	st	Z, r1
		}
		aus(1,pos);
     654:	64 2f       	mov	r22, r20
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	62 df       	rcall	.-316    	; 0x51e <_Z3aushh>
		aus(2,0);
     65a:	60 e0       	ldi	r22, 0x00	; 0
     65c:	82 e0       	ldi	r24, 0x02	; 2
     65e:	5f df       	rcall	.-322    	; 0x51e <_Z3aushh>
		while( *data != '\0' )
     660:	88 81       	ld	r24, Y
     662:	88 23       	and	r24, r24
     664:	29 f0       	breq	.+10     	; 0x670 <_Z8erhoehenPhhhPKc+0x54>
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     666:	21 96       	adiw	r28, 0x01	; 1
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
		lcd_data( *data++ );
     668:	88 dd       	rcall	.-1264   	; 0x17a <_Z8lcd_datah>
		if(*var>=obergrenze){
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
     66a:	89 91       	ld	r24, Y+
     66c:	81 11       	cpse	r24, r1
     66e:	fc cf       	rjmp	.-8      	; 0x668 <_Z8erhoehenPhhhPKc+0x4c>
		lcd_data( *data++ );
		
	}
}
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	08 95       	ret

00000676 <_Z5einsth>:


//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
     676:	1f 93       	push	r17
     678:	cf 93       	push	r28
     67a:	df 93       	push	r29
	uint8_t temp=0;
	//abfrage wass eingestellt werden soll
	switch (posit)
     67c:	82 30       	cpi	r24, 0x02	; 2
     67e:	09 f4       	brne	.+2      	; 0x682 <_Z5einsth+0xc>
     680:	b7 c0       	rjmp	.+366    	; 0x7f0 <_Z5einsth+0x17a>
     682:	30 f4       	brcc	.+12     	; 0x690 <_Z5einsth+0x1a>
     684:	88 23       	and	r24, r24
     686:	69 f0       	breq	.+26     	; 0x6a2 <_Z5einsth+0x2c>
     688:	81 30       	cpi	r24, 0x01	; 1
     68a:	09 f0       	breq	.+2      	; 0x68e <_Z5einsth+0x18>
     68c:	f3 c1       	rjmp	.+998    	; 0xa74 <_Z5einsth+0x3fe>
     68e:	65 c0       	rjmp	.+202    	; 0x75a <_Z5einsth+0xe4>
     690:	84 30       	cpi	r24, 0x04	; 4
     692:	09 f4       	brne	.+2      	; 0x696 <_Z5einsth+0x20>
     694:	4b c1       	rjmp	.+662    	; 0x92c <_Z5einsth+0x2b6>
     696:	08 f4       	brcc	.+2      	; 0x69a <_Z5einsth+0x24>
     698:	fa c0       	rjmp	.+500    	; 0x88e <_Z5einsth+0x218>
     69a:	85 30       	cpi	r24, 0x05	; 5
     69c:	09 f0       	breq	.+2      	; 0x6a0 <_Z5einsth+0x2a>
     69e:	ea c1       	rjmp	.+980    	; 0xa74 <_Z5einsth+0x3fe>
     6a0:	97 c1       	rjmp	.+814    	; 0x9d0 <_Z5einsth+0x35a>
	{
	case 0:
		//Einstellen Zeit
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,6);
     6a2:	66 e0       	ldi	r22, 0x06	; 6
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	3b df       	rcall	.-394    	; 0x51e <_Z3aushh>
		aus(2,0);
     6a8:	60 e0       	ldi	r22, 0x00	; 0
     6aa:	82 e0       	ldi	r24, 0x02	; 2
     6ac:	38 df       	rcall	.-400    	; 0x51e <_Z3aushh>
		lcd_string(NAME(Stunden));
     6ae:	81 ea       	ldi	r24, 0xA1	; 161
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	d1 dd       	rcall	.-1118   	; 0x256 <_Z10lcd_stringPKc>

//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
	uint8_t temp=0;
     6b4:	c0 e0       	ldi	r28, 0x00	; 0
     6b6:	83 99       	sbic	0x10, 3	; 16
     6b8:	28 c0       	rjmp	.+80     	; 0x70a <_Z5einsth+0x94>
     6ba:	8f ef       	ldi	r24, 0xFF	; 255
     6bc:	93 eb       	ldi	r25, 0xB3	; 179
     6be:	01 97       	sbiw	r24, 0x01	; 1
     6c0:	f1 f7       	brne	.-4      	; 0x6be <_Z5einsth+0x48>
     6c2:	00 c0       	rjmp	.+0      	; 0x6c4 <_Z5einsth+0x4e>
     6c4:	00 00       	nop
     6c6:	8f ef       	ldi	r24, 0xFF	; 255
     6c8:	93 e2       	ldi	r25, 0x23	; 35
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	f1 f7       	brne	.-4      	; 0x6ca <_Z5einsth+0x54>
     6ce:	00 c0       	rjmp	.+0      	; 0x6d0 <_Z5einsth+0x5a>
     6d0:	00 00       	nop
		aus(1,6);
		aus(2,0);
		lcd_string(NAME(Stunden));
		while(temp<3)
		{
			if(debounce(&PIND,3))
     6d2:	83 99       	sbic	0x10, 3	; 16
     6d4:	1a c0       	rjmp	.+52     	; 0x70a <_Z5einsth+0x94>
			{
				temp++;
     6d6:	cf 5f       	subi	r28, 0xFF	; 255
				lcd_clear();
     6d8:	6c dd       	rcall	.-1320   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,6);
     6da:	66 e0       	ldi	r22, 0x06	; 6
     6dc:	81 e0       	ldi	r24, 0x01	; 1
     6de:	1f df       	rcall	.-450    	; 0x51e <_Z3aushh>
				aus(2,0);
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	82 e0       	ldi	r24, 0x02	; 2
     6e4:	1c df       	rcall	.-456    	; 0x51e <_Z3aushh>
				switch (temp)
     6e6:	c1 30       	cpi	r28, 0x01	; 1
     6e8:	41 f0       	breq	.+16     	; 0x6fa <_Z5einsth+0x84>
     6ea:	18 f0       	brcs	.+6      	; 0x6f2 <_Z5einsth+0x7c>
     6ec:	c2 30       	cpi	r28, 0x02	; 2
     6ee:	69 f4       	brne	.+26     	; 0x70a <_Z5einsth+0x94>
     6f0:	08 c0       	rjmp	.+16     	; 0x702 <_Z5einsth+0x8c>
				{
					case 0:
						lcd_string(NAME(Stunden));
     6f2:	81 ea       	ldi	r24, 0xA1	; 161
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	af dd       	rcall	.-1186   	; 0x256 <_Z10lcd_stringPKc>
     6f8:	0e c0       	rjmp	.+28     	; 0x716 <_Z5einsth+0xa0>
						break;
					case 1:
						lcd_string(NAME(Minuten));
     6fa:	89 ea       	ldi	r24, 0xA9	; 169
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	ab dd       	rcall	.-1194   	; 0x256 <_Z10lcd_stringPKc>
     700:	13 c0       	rjmp	.+38     	; 0x728 <_Z5einsth+0xb2>
						break;
					case 2:
						lcd_string(NAME(WochenTag));
     702:	81 eb       	ldi	r24, 0xB1	; 177
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	a7 dd       	rcall	.-1202   	; 0x256 <_Z10lcd_stringPKc>
     708:	18 c0       	rjmp	.+48     	; 0x73a <_Z5einsth+0xc4>
				zeit();
				//ausgabe(0);
				//Es muss eine richtge Ausgabe speziell fuer dieses Einstellung geschrieben werden
				//besonders wichtig ist, dass die alte Ausgaba ersetzt werden muss
			}*/
			switch (temp)
     70a:	c1 30       	cpi	r28, 0x01	; 1
     70c:	69 f0       	breq	.+26     	; 0x728 <_Z5einsth+0xb2>
     70e:	18 f0       	brcs	.+6      	; 0x716 <_Z5einsth+0xa0>
     710:	c2 30       	cpi	r28, 0x02	; 2
     712:	e1 f4       	brne	.+56     	; 0x74c <_Z5einsth+0xd6>
     714:	12 c0       	rjmp	.+36     	; 0x73a <_Z5einsth+0xc4>
			{
			case 0:
				erhoehen(&Stunden,60,6,NAME(Stunden));
     716:	21 ea       	ldi	r18, 0xA1	; 161
     718:	30 e0       	ldi	r19, 0x00	; 0
     71a:	46 e0       	ldi	r20, 0x06	; 6
     71c:	6c e3       	ldi	r22, 0x3C	; 60
     71e:	89 e7       	ldi	r24, 0x79	; 121
     720:	91 e0       	ldi	r25, 0x01	; 1
     722:	7c df       	rcall	.-264    	; 0x61c <_Z8erhoehenPhhhPKc>
				break;
     724:	c0 e0       	ldi	r28, 0x00	; 0
     726:	c7 cf       	rjmp	.-114    	; 0x6b6 <_Z5einsth+0x40>
			case 1:
				erhoehen(&Minuten,60,6,NAME(Minuten));
     728:	29 ea       	ldi	r18, 0xA9	; 169
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	46 e0       	ldi	r20, 0x06	; 6
     72e:	6c e3       	ldi	r22, 0x3C	; 60
     730:	8a e7       	ldi	r24, 0x7A	; 122
     732:	91 e0       	ldi	r25, 0x01	; 1
     734:	73 df       	rcall	.-282    	; 0x61c <_Z8erhoehenPhhhPKc>
				break;
     736:	c1 e0       	ldi	r28, 0x01	; 1
     738:	be cf       	rjmp	.-132    	; 0x6b6 <_Z5einsth+0x40>
			case 2:
				//nur jetzt WochenTag
				erhoehen(&WochenTag,7,6,NAME(WochenTag));
     73a:	21 eb       	ldi	r18, 0xB1	; 177
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	46 e0       	ldi	r20, 0x06	; 6
     740:	67 e0       	ldi	r22, 0x07	; 7
     742:	88 e7       	ldi	r24, 0x78	; 120
     744:	91 e0       	ldi	r25, 0x01	; 1
     746:	6a df       	rcall	.-300    	; 0x61c <_Z8erhoehenPhhhPKc>
				break;
     748:	c2 e0       	ldi	r28, 0x02	; 2
     74a:	b5 cf       	rjmp	.-150    	; 0x6b6 <_Z5einsth+0x40>
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,6);
		aus(2,0);
		lcd_string(NAME(Stunden));
		while(temp<3)
     74c:	c3 30       	cpi	r28, 0x03	; 3
     74e:	08 f4       	brcc	.+2      	; 0x752 <_Z5einsth+0xdc>
     750:	b2 cf       	rjmp	.-156    	; 0x6b6 <_Z5einsth+0x40>
				break;
			default:
				break;
			}
		}
		Sekunden=0;
     752:	10 92 7b 01 	sts	0x017B, r1
		return 0;
     756:	80 e0       	ldi	r24, 0x00	; 0
     758:	a0 c1       	rjmp	.+832    	; 0xa9a <_Z5einsth+0x424>
		break;
	case 1:
		//Einstellen der Lampenstärke
		//default=1
		temp = 0;
		lcd_clear();
     75a:	2b dd       	rcall	.-1450   	; 0x1b2 <_Z9lcd_clearv>
		lcd_home();
     75c:	61 dd       	rcall	.-1342   	; 0x220 <_Z8lcd_homev>
		lcd_string("Lampenstärke:");
     75e:	8b eb       	ldi	r24, 0xBB	; 187
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	79 dd       	rcall	.-1294   	; 0x256 <_Z10lcd_stringPKc>
		aus(2,0);
     764:	60 e0       	ldi	r22, 0x00	; 0
     766:	82 e0       	ldi	r24, 0x02	; 2
     768:	da de       	rcall	.-588    	; 0x51e <_Z3aushh>
		itoa(lampenstaerke,Buffer,10);
     76a:	4a e0       	ldi	r20, 0x0A	; 10
     76c:	50 e0       	ldi	r21, 0x00	; 0
     76e:	69 e5       	ldi	r22, 0x59	; 89
     770:	71 e0       	ldi	r23, 0x01	; 1
     772:	80 91 61 00 	lds	r24, 0x0061
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	76 d6       	rcall	.+3308   	; 0x1466 <itoa>
		lcd_string(Buffer);
     77a:	89 e5       	ldi	r24, 0x59	; 89
     77c:	91 e0       	ldi	r25, 0x01	; 1
     77e:	6b dd       	rcall	.-1322   	; 0x256 <_Z10lcd_stringPKc>
		if(Sekunden!=sektemp){
     780:	90 91 7b 01 	lds	r25, 0x017B
     784:	80 91 72 01 	lds	r24, 0x0172
     788:	98 13       	cpse	r25, r24
			zeit();
     78a:	26 de       	rcall	.-948    	; 0x3d8 <_Z4zeitv>
     78c:	82 99       	sbic	0x10, 2	; 16
     78e:	74 c1       	rjmp	.+744    	; 0xa78 <_Z5einsth+0x402>
     790:	8f ef       	ldi	r24, 0xFF	; 255
     792:	93 eb       	ldi	r25, 0xB3	; 179
     794:	01 97       	sbiw	r24, 0x01	; 1
     796:	f1 f7       	brne	.-4      	; 0x794 <_Z5einsth+0x11e>
     798:	00 c0       	rjmp	.+0      	; 0x79a <_Z5einsth+0x124>
     79a:	00 00       	nop
     79c:	8f ef       	ldi	r24, 0xFF	; 255
     79e:	93 e2       	ldi	r25, 0x23	; 35
     7a0:	01 97       	sbiw	r24, 0x01	; 1
     7a2:	f1 f7       	brne	.-4      	; 0x7a0 <_Z5einsth+0x12a>
     7a4:	00 c0       	rjmp	.+0      	; 0x7a6 <_Z5einsth+0x130>
     7a6:	00 00       	nop
		}
		if(debounce(&PIND,2))
     7a8:	82 99       	sbic	0x10, 2	; 16
     7aa:	68 c1       	rjmp	.+720    	; 0xa7c <_Z5einsth+0x406>
		{
			lampenstaerke++;
     7ac:	80 91 61 00 	lds	r24, 0x0061
     7b0:	8f 5f       	subi	r24, 0xFF	; 255
     7b2:	80 93 61 00 	sts	0x0061, r24
			lcd_clear();
     7b6:	fd dc       	rcall	.-1542   	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     7b8:	33 dd       	rcall	.-1434   	; 0x220 <_Z8lcd_homev>
			lcd_string("Lampenstärke:");
     7ba:	8b eb       	ldi	r24, 0xBB	; 187
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	4b dd       	rcall	.-1386   	; 0x256 <_Z10lcd_stringPKc>
			aus(2,0);
     7c0:	60 e0       	ldi	r22, 0x00	; 0
     7c2:	82 e0       	ldi	r24, 0x02	; 2
     7c4:	ac de       	rcall	.-680    	; 0x51e <_Z3aushh>
			itoa(lampenstaerke,Buffer,10);
     7c6:	4a e0       	ldi	r20, 0x0A	; 10
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	69 e5       	ldi	r22, 0x59	; 89
     7cc:	71 e0       	ldi	r23, 0x01	; 1
     7ce:	80 91 61 00 	lds	r24, 0x0061
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	48 d6       	rcall	.+3216   	; 0x1466 <itoa>
			lcd_string(Buffer);
     7d6:	89 e5       	ldi	r24, 0x59	; 89
     7d8:	91 e0       	ldi	r25, 0x01	; 1
     7da:	3d dd       	rcall	.-1414   	; 0x256 <_Z10lcd_stringPKc>
			
			if (lampenstaerke>=3)
     7dc:	80 91 61 00 	lds	r24, 0x0061
     7e0:	83 30       	cpi	r24, 0x03	; 3
     7e2:	08 f4       	brcc	.+2      	; 0x7e6 <_Z5einsth+0x170>
     7e4:	4d c1       	rjmp	.+666    	; 0xa80 <_Z5einsth+0x40a>
			{
				lampenstaerke=1;
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	80 93 61 00 	sts	0x0061, r24
			}
			
		}
		return 0;
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	55 c1       	rjmp	.+682    	; 0xa9a <_Z5einsth+0x424>
		break;
	case 2:
		//Einstellen Sekundenoffset
		//default =0
		lcd_clear();
     7f0:	e0 dc       	rcall	.-1600   	; 0x1b2 <_Z9lcd_clearv>
		lcd_home();
     7f2:	16 dd       	rcall	.-1492   	; 0x220 <_Z8lcd_homev>
		lcd_string("Sekundenoffset:");
     7f4:	8a ec       	ldi	r24, 0xCA	; 202
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	2e dd       	rcall	.-1444   	; 0x256 <_Z10lcd_stringPKc>
		aus(2,0);
     7fa:	60 e0       	ldi	r22, 0x00	; 0
     7fc:	82 e0       	ldi	r24, 0x02	; 2
     7fe:	8f de       	rcall	.-738    	; 0x51e <_Z3aushh>
		itoa(sekoffset,Buffer,10);
     800:	80 91 6d 01 	lds	r24, 0x016D
     804:	4a e0       	ldi	r20, 0x0A	; 10
     806:	50 e0       	ldi	r21, 0x00	; 0
     808:	69 e5       	ldi	r22, 0x59	; 89
     80a:	71 e0       	ldi	r23, 0x01	; 1
     80c:	99 27       	eor	r25, r25
     80e:	87 fd       	sbrc	r24, 7
     810:	90 95       	com	r25
     812:	29 d6       	rcall	.+3154   	; 0x1466 <itoa>
		lcd_string(Buffer);
     814:	89 e5       	ldi	r24, 0x59	; 89
     816:	91 e0       	ldi	r25, 0x01	; 1
     818:	1e dd       	rcall	.-1476   	; 0x256 <_Z10lcd_stringPKc>
		if(Sekunden!=sektemp){
     81a:	90 91 7b 01 	lds	r25, 0x017B
     81e:	80 91 72 01 	lds	r24, 0x0172
     822:	98 13       	cpse	r25, r24
			zeit();
     824:	d9 dd       	rcall	.-1102   	; 0x3d8 <_Z4zeitv>
     826:	82 99       	sbic	0x10, 2	; 16
     828:	2d c1       	rjmp	.+602    	; 0xa84 <_Z5einsth+0x40e>
     82a:	8f ef       	ldi	r24, 0xFF	; 255
     82c:	93 eb       	ldi	r25, 0xB3	; 179
     82e:	01 97       	sbiw	r24, 0x01	; 1
     830:	f1 f7       	brne	.-4      	; 0x82e <_Z5einsth+0x1b8>
     832:	00 c0       	rjmp	.+0      	; 0x834 <_Z5einsth+0x1be>
     834:	00 00       	nop
     836:	8f ef       	ldi	r24, 0xFF	; 255
     838:	93 e2       	ldi	r25, 0x23	; 35
     83a:	01 97       	sbiw	r24, 0x01	; 1
     83c:	f1 f7       	brne	.-4      	; 0x83a <_Z5einsth+0x1c4>
     83e:	00 c0       	rjmp	.+0      	; 0x840 <_Z5einsth+0x1ca>
     840:	00 00       	nop
		}
		if(debounce(&PIND,2))
     842:	82 99       	sbic	0x10, 2	; 16
     844:	21 c1       	rjmp	.+578    	; 0xa88 <_Z5einsth+0x412>
		{
			sekoffset++;
     846:	80 91 6d 01 	lds	r24, 0x016D
     84a:	8f 5f       	subi	r24, 0xFF	; 255
     84c:	80 93 6d 01 	sts	0x016D, r24
			lcd_clear();
     850:	b0 dc       	rcall	.-1696   	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     852:	e6 dc       	rcall	.-1588   	; 0x220 <_Z8lcd_homev>
			lcd_string("Sekundenoffset:");
     854:	8a ec       	ldi	r24, 0xCA	; 202
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	fe dc       	rcall	.-1540   	; 0x256 <_Z10lcd_stringPKc>
			aus(2,0);
     85a:	60 e0       	ldi	r22, 0x00	; 0
     85c:	82 e0       	ldi	r24, 0x02	; 2
     85e:	5f de       	rcall	.-834    	; 0x51e <_Z3aushh>
			itoa(sekoffset,Buffer,10);
     860:	80 91 6d 01 	lds	r24, 0x016D
     864:	4a e0       	ldi	r20, 0x0A	; 10
     866:	50 e0       	ldi	r21, 0x00	; 0
     868:	69 e5       	ldi	r22, 0x59	; 89
     86a:	71 e0       	ldi	r23, 0x01	; 1
     86c:	99 27       	eor	r25, r25
     86e:	87 fd       	sbrc	r24, 7
     870:	90 95       	com	r25
     872:	f9 d5       	rcall	.+3058   	; 0x1466 <itoa>
			lcd_string(Buffer);
     874:	89 e5       	ldi	r24, 0x59	; 89
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	ee dc       	rcall	.-1572   	; 0x256 <_Z10lcd_stringPKc>
			
			if (sekoffset>=5)
     87a:	80 91 6d 01 	lds	r24, 0x016D
     87e:	85 30       	cpi	r24, 0x05	; 5
     880:	0c f4       	brge	.+2      	; 0x884 <_Z5einsth+0x20e>
     882:	04 c1       	rjmp	.+520    	; 0xa8c <_Z5einsth+0x416>
			{
				sekoffset=-5;
     884:	8b ef       	ldi	r24, 0xFB	; 251
     886:	80 93 6d 01 	sts	0x016D, r24
			}
				
		}
		
		return 0;
     88a:	80 e0       	ldi	r24, 0x00	; 0
     88c:	06 c1       	rjmp	.+524    	; 0xa9a <_Z5einsth+0x424>
		break;
	case 3:
		//Einstellen Temperaturoffset
		//default = 0;
		lcd_clear();
     88e:	91 dc       	rcall	.-1758   	; 0x1b2 <_Z9lcd_clearv>
		lcd_home();
     890:	c7 dc       	rcall	.-1650   	; 0x220 <_Z8lcd_homev>
		lcd_string("Temperaturoffset:");
     892:	8a ed       	ldi	r24, 0xDA	; 218
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	df dc       	rcall	.-1602   	; 0x256 <_Z10lcd_stringPKc>
		aus(2,0);
     898:	60 e0       	ldi	r22, 0x00	; 0
     89a:	82 e0       	ldi	r24, 0x02	; 2
     89c:	40 de       	rcall	.-896    	; 0x51e <_Z3aushh>
		itoa(tempoffset,Buffer,10);
     89e:	80 91 62 00 	lds	r24, 0x0062
     8a2:	4a e0       	ldi	r20, 0x0A	; 10
     8a4:	50 e0       	ldi	r21, 0x00	; 0
     8a6:	69 e5       	ldi	r22, 0x59	; 89
     8a8:	71 e0       	ldi	r23, 0x01	; 1
     8aa:	99 27       	eor	r25, r25
     8ac:	87 fd       	sbrc	r24, 7
     8ae:	90 95       	com	r25
     8b0:	da d5       	rcall	.+2996   	; 0x1466 <itoa>
		lcd_string(Buffer);
     8b2:	89 e5       	ldi	r24, 0x59	; 89
     8b4:	91 e0       	ldi	r25, 0x01	; 1
     8b6:	cf dc       	rcall	.-1634   	; 0x256 <_Z10lcd_stringPKc>
		
		if(Sekunden!=sektemp){
     8b8:	90 91 7b 01 	lds	r25, 0x017B
     8bc:	80 91 72 01 	lds	r24, 0x0172
     8c0:	98 13       	cpse	r25, r24
			zeit();
     8c2:	8a dd       	rcall	.-1260   	; 0x3d8 <_Z4zeitv>
     8c4:	82 99       	sbic	0x10, 2	; 16
     8c6:	e4 c0       	rjmp	.+456    	; 0xa90 <_Z5einsth+0x41a>
     8c8:	8f ef       	ldi	r24, 0xFF	; 255
     8ca:	93 eb       	ldi	r25, 0xB3	; 179
     8cc:	01 97       	sbiw	r24, 0x01	; 1
     8ce:	f1 f7       	brne	.-4      	; 0x8cc <_Z5einsth+0x256>
     8d0:	00 c0       	rjmp	.+0      	; 0x8d2 <_Z5einsth+0x25c>
     8d2:	00 00       	nop
     8d4:	8f ef       	ldi	r24, 0xFF	; 255
     8d6:	93 e2       	ldi	r25, 0x23	; 35
     8d8:	01 97       	sbiw	r24, 0x01	; 1
     8da:	f1 f7       	brne	.-4      	; 0x8d8 <_Z5einsth+0x262>
     8dc:	00 c0       	rjmp	.+0      	; 0x8de <_Z5einsth+0x268>
     8de:	00 00       	nop
		}
		if(debounce(&PIND,2))
     8e0:	82 99       	sbic	0x10, 2	; 16
     8e2:	d8 c0       	rjmp	.+432    	; 0xa94 <_Z5einsth+0x41e>
		{
			tempoffset++;
     8e4:	80 91 62 00 	lds	r24, 0x0062
     8e8:	8f 5f       	subi	r24, 0xFF	; 255
     8ea:	80 93 62 00 	sts	0x0062, r24
			lcd_clear();
     8ee:	61 dc       	rcall	.-1854   	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     8f0:	97 dc       	rcall	.-1746   	; 0x220 <_Z8lcd_homev>
			lcd_string("Temperaturoffset:");
     8f2:	8a ed       	ldi	r24, 0xDA	; 218
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	af dc       	rcall	.-1698   	; 0x256 <_Z10lcd_stringPKc>
			aus(2,0);
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	82 e0       	ldi	r24, 0x02	; 2
     8fc:	10 de       	rcall	.-992    	; 0x51e <_Z3aushh>
			itoa(tempoffset,Buffer,10);
     8fe:	80 91 62 00 	lds	r24, 0x0062
     902:	4a e0       	ldi	r20, 0x0A	; 10
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	69 e5       	ldi	r22, 0x59	; 89
     908:	71 e0       	ldi	r23, 0x01	; 1
     90a:	99 27       	eor	r25, r25
     90c:	87 fd       	sbrc	r24, 7
     90e:	90 95       	com	r25
     910:	aa d5       	rcall	.+2900   	; 0x1466 <itoa>
			lcd_string(Buffer);
     912:	89 e5       	ldi	r24, 0x59	; 89
     914:	91 e0       	ldi	r25, 0x01	; 1
     916:	9f dc       	rcall	.-1730   	; 0x256 <_Z10lcd_stringPKc>
			
			if (tempoffset>=10)
     918:	80 91 62 00 	lds	r24, 0x0062
     91c:	8a 30       	cpi	r24, 0x0A	; 10
     91e:	0c f4       	brge	.+2      	; 0x922 <_Z5einsth+0x2ac>
     920:	bb c0       	rjmp	.+374    	; 0xa98 <_Z5einsth+0x422>
			{
				tempoffset=-10;
     922:	86 ef       	ldi	r24, 0xF6	; 246
     924:	80 93 62 00 	sts	0x0062, r24
			}
			
		}
		
		return 0;
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	b7 c0       	rjmp	.+366    	; 0xa9a <_Z5einsth+0x424>
		break;
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
     92c:	65 e0       	ldi	r22, 0x05	; 5
     92e:	81 e0       	ldi	r24, 0x01	; 1
     930:	f6 dd       	rcall	.-1044   	; 0x51e <_Z3aushh>
		aus(2,0);
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	82 e0       	ldi	r24, 0x02	; 2
     936:	f3 dd       	rcall	.-1050   	; 0x51e <_Z3aushh>
		lcd_string(NAME(WStunden[0]));
     938:	8c ee       	ldi	r24, 0xEC	; 236
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	8c dc       	rcall	.-1768   	; 0x256 <_Z10lcd_stringPKc>
		}
		
		return 0;
		break;
	case 4: //Wecker einstellen
		temp = 0;
     93e:	c0 e0       	ldi	r28, 0x00	; 0
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
					break;
				case 1:
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
					break;
     940:	11 e0       	ldi	r17, 0x01	; 1
			}
			switch (temp)
			{
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
					break;
     942:	d0 e0       	ldi	r29, 0x00	; 0
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[0]));
		while (temp<2)
		{
			if (Sekunden!=sektemp)
     944:	20 91 7b 01 	lds	r18, 0x017B
     948:	90 91 72 01 	lds	r25, 0x0172
     94c:	29 13       	cpse	r18, r25
			{
				zeit();
     94e:	44 dd       	rcall	.-1400   	; 0x3d8 <_Z4zeitv>
     950:	83 99       	sbic	0x10, 3	; 16
     952:	22 c0       	rjmp	.+68     	; 0x998 <_Z5einsth+0x322>
     954:	8f ef       	ldi	r24, 0xFF	; 255
     956:	93 eb       	ldi	r25, 0xB3	; 179
     958:	01 97       	sbiw	r24, 0x01	; 1
     95a:	f1 f7       	brne	.-4      	; 0x958 <_Z5einsth+0x2e2>
     95c:	00 c0       	rjmp	.+0      	; 0x95e <_Z5einsth+0x2e8>
     95e:	00 00       	nop
     960:	8f ef       	ldi	r24, 0xFF	; 255
     962:	93 e2       	ldi	r25, 0x23	; 35
     964:	01 97       	sbiw	r24, 0x01	; 1
     966:	f1 f7       	brne	.-4      	; 0x964 <_Z5einsth+0x2ee>
     968:	00 c0       	rjmp	.+0      	; 0x96a <_Z5einsth+0x2f4>
     96a:	00 00       	nop
			}
			if(debounce(&PIND,3))
     96c:	83 99       	sbic	0x10, 3	; 16
     96e:	14 c0       	rjmp	.+40     	; 0x998 <_Z5einsth+0x322>
			{
				temp++;
     970:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,5);
     972:	65 e0       	ldi	r22, 0x05	; 5
     974:	81 2f       	mov	r24, r17
     976:	d3 dd       	rcall	.-1114   	; 0x51e <_Z3aushh>
				aus(2,0);
     978:	6d 2f       	mov	r22, r29
     97a:	82 e0       	ldi	r24, 0x02	; 2
     97c:	d0 dd       	rcall	.-1120   	; 0x51e <_Z3aushh>
				switch (temp)
     97e:	cc 23       	and	r28, r28
     980:	19 f0       	breq	.+6      	; 0x988 <_Z5einsth+0x312>
     982:	c1 30       	cpi	r28, 0x01	; 1
     984:	49 f4       	brne	.+18     	; 0x998 <_Z5einsth+0x322>
     986:	04 c0       	rjmp	.+8      	; 0x990 <_Z5einsth+0x31a>
				{
					case 0:
						lcd_string(NAME(WStunden[0]));
     988:	8c ee       	ldi	r24, 0xEC	; 236
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	64 dc       	rcall	.-1848   	; 0x256 <_Z10lcd_stringPKc>
     98e:	09 c0       	rjmp	.+18     	; 0x9a2 <_Z5einsth+0x32c>
						break;
					case 1:
						lcd_string(NAME(WMinuten[0]));
     990:	88 ef       	ldi	r24, 0xF8	; 248
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	60 dc       	rcall	.-1856   	; 0x256 <_Z10lcd_stringPKc>
     996:	0e c0       	rjmp	.+28     	; 0x9b4 <_Z5einsth+0x33e>
						break;
					default:
						break;
				}
			}
			switch (temp)
     998:	cc 23       	and	r28, r28
     99a:	19 f0       	breq	.+6      	; 0x9a2 <_Z5einsth+0x32c>
     99c:	c1 30       	cpi	r28, 0x01	; 1
     99e:	99 f4       	brne	.+38     	; 0x9c6 <_Z5einsth+0x350>
     9a0:	09 c0       	rjmp	.+18     	; 0x9b4 <_Z5einsth+0x33e>
			{
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
     9a2:	2c ee       	ldi	r18, 0xEC	; 236
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	45 e0       	ldi	r20, 0x05	; 5
     9a8:	68 e1       	ldi	r22, 0x18	; 24
     9aa:	86 e7       	ldi	r24, 0x76	; 118
     9ac:	91 e0       	ldi	r25, 0x01	; 1
     9ae:	36 de       	rcall	.-916    	; 0x61c <_Z8erhoehenPhhhPKc>
					break;
     9b0:	cd 2f       	mov	r28, r29
     9b2:	c8 cf       	rjmp	.-112    	; 0x944 <_Z5einsth+0x2ce>
				case 1:
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
     9b4:	28 ef       	ldi	r18, 0xF8	; 248
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	45 e0       	ldi	r20, 0x05	; 5
     9ba:	6c e3       	ldi	r22, 0x3C	; 60
     9bc:	84 e7       	ldi	r24, 0x74	; 116
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	2d de       	rcall	.-934    	; 0x61c <_Z8erhoehenPhhhPKc>
					break;
     9c2:	c1 2f       	mov	r28, r17
     9c4:	bf cf       	rjmp	.-130    	; 0x944 <_Z5einsth+0x2ce>
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[0]));
		while (temp<2)
     9c6:	c2 30       	cpi	r28, 0x02	; 2
     9c8:	08 f4       	brcc	.+2      	; 0x9cc <_Z5einsth+0x356>
     9ca:	bc cf       	rjmp	.-136    	; 0x944 <_Z5einsth+0x2ce>
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
					break;
			}
			
		}
		return 0;
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	65 c0       	rjmp	.+202    	; 0xa9a <_Z5einsth+0x424>
		break;

	case 5:
		temp = 0;
		aus(1,5);
     9d0:	65 e0       	ldi	r22, 0x05	; 5
     9d2:	81 e0       	ldi	r24, 0x01	; 1
     9d4:	a4 dd       	rcall	.-1208   	; 0x51e <_Z3aushh>
		aus(2,0);
     9d6:	60 e0       	ldi	r22, 0x00	; 0
     9d8:	82 e0       	ldi	r24, 0x02	; 2
     9da:	a1 dd       	rcall	.-1214   	; 0x51e <_Z3aushh>
		lcd_string(NAME(WStunden[1]));
     9dc:	84 e0       	ldi	r24, 0x04	; 4
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	3a dc       	rcall	.-1932   	; 0x256 <_Z10lcd_stringPKc>
		}
		return 0;
		break;

	case 5:
		temp = 0;
     9e2:	c0 e0       	ldi	r28, 0x00	; 0
				case 0:
				erhoehen(&WStunden[1],24,5,NAME(WStunden[1]));
				break;
				case 1:
				erhoehen(&WMinuten[1],60,5,NAME(WMinuten[1]));
				break;
     9e4:	11 e0       	ldi	r17, 0x01	; 1
			}
			switch (temp)
			{
				case 0:
				erhoehen(&WStunden[1],24,5,NAME(WStunden[1]));
				break;
     9e6:	d0 e0       	ldi	r29, 0x00	; 0
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[1]));
		while (temp<2)
		{
			if (Sekunden!=sektemp)
     9e8:	20 91 7b 01 	lds	r18, 0x017B
     9ec:	90 91 72 01 	lds	r25, 0x0172
     9f0:	29 13       	cpse	r18, r25
			{
				zeit();
     9f2:	f2 dc       	rcall	.-1564   	; 0x3d8 <_Z4zeitv>
     9f4:	83 99       	sbic	0x10, 3	; 16
     9f6:	22 c0       	rjmp	.+68     	; 0xa3c <_Z5einsth+0x3c6>
     9f8:	8f ef       	ldi	r24, 0xFF	; 255
     9fa:	93 eb       	ldi	r25, 0xB3	; 179
     9fc:	01 97       	sbiw	r24, 0x01	; 1
     9fe:	f1 f7       	brne	.-4      	; 0x9fc <_Z5einsth+0x386>
     a00:	00 c0       	rjmp	.+0      	; 0xa02 <_Z5einsth+0x38c>
     a02:	00 00       	nop
     a04:	8f ef       	ldi	r24, 0xFF	; 255
     a06:	93 e2       	ldi	r25, 0x23	; 35
     a08:	01 97       	sbiw	r24, 0x01	; 1
     a0a:	f1 f7       	brne	.-4      	; 0xa08 <_Z5einsth+0x392>
     a0c:	00 c0       	rjmp	.+0      	; 0xa0e <_Z5einsth+0x398>
     a0e:	00 00       	nop
			}
			if(debounce(&PIND,3))
     a10:	83 99       	sbic	0x10, 3	; 16
     a12:	14 c0       	rjmp	.+40     	; 0xa3c <_Z5einsth+0x3c6>
			{
				temp++;
     a14:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,5);
     a16:	65 e0       	ldi	r22, 0x05	; 5
     a18:	81 2f       	mov	r24, r17
     a1a:	81 dd       	rcall	.-1278   	; 0x51e <_Z3aushh>
				aus(2,0);
     a1c:	6d 2f       	mov	r22, r29
     a1e:	82 e0       	ldi	r24, 0x02	; 2
     a20:	7e dd       	rcall	.-1284   	; 0x51e <_Z3aushh>
				switch (temp)
     a22:	cc 23       	and	r28, r28
     a24:	19 f0       	breq	.+6      	; 0xa2c <_Z5einsth+0x3b6>
     a26:	c1 30       	cpi	r28, 0x01	; 1
     a28:	49 f4       	brne	.+18     	; 0xa3c <_Z5einsth+0x3c6>
     a2a:	04 c0       	rjmp	.+8      	; 0xa34 <_Z5einsth+0x3be>
				{
					case 0:
					lcd_string(NAME(WStunden[1]));
     a2c:	84 e0       	ldi	r24, 0x04	; 4
     a2e:	91 e0       	ldi	r25, 0x01	; 1
     a30:	12 dc       	rcall	.-2012   	; 0x256 <_Z10lcd_stringPKc>
     a32:	09 c0       	rjmp	.+18     	; 0xa46 <_Z5einsth+0x3d0>
					break;
					case 1:
					lcd_string(NAME(WMinuten[1]));
     a34:	80 e1       	ldi	r24, 0x10	; 16
     a36:	91 e0       	ldi	r25, 0x01	; 1
     a38:	0e dc       	rcall	.-2020   	; 0x256 <_Z10lcd_stringPKc>
     a3a:	0e c0       	rjmp	.+28     	; 0xa58 <_Z5einsth+0x3e2>
					break;
					default:
					break;
				}
			}
			switch (temp)
     a3c:	cc 23       	and	r28, r28
     a3e:	19 f0       	breq	.+6      	; 0xa46 <_Z5einsth+0x3d0>
     a40:	c1 30       	cpi	r28, 0x01	; 1
     a42:	99 f4       	brne	.+38     	; 0xa6a <_Z5einsth+0x3f4>
     a44:	09 c0       	rjmp	.+18     	; 0xa58 <_Z5einsth+0x3e2>
			{
				case 0:
				erhoehen(&WStunden[1],24,5,NAME(WStunden[1]));
     a46:	24 e0       	ldi	r18, 0x04	; 4
     a48:	31 e0       	ldi	r19, 0x01	; 1
     a4a:	45 e0       	ldi	r20, 0x05	; 5
     a4c:	68 e1       	ldi	r22, 0x18	; 24
     a4e:	87 e7       	ldi	r24, 0x77	; 119
     a50:	91 e0       	ldi	r25, 0x01	; 1
     a52:	e4 dd       	rcall	.-1080   	; 0x61c <_Z8erhoehenPhhhPKc>
				break;
     a54:	cd 2f       	mov	r28, r29
     a56:	c8 cf       	rjmp	.-112    	; 0x9e8 <_Z5einsth+0x372>
				case 1:
				erhoehen(&WMinuten[1],60,5,NAME(WMinuten[1]));
     a58:	20 e1       	ldi	r18, 0x10	; 16
     a5a:	31 e0       	ldi	r19, 0x01	; 1
     a5c:	45 e0       	ldi	r20, 0x05	; 5
     a5e:	6c e3       	ldi	r22, 0x3C	; 60
     a60:	85 e7       	ldi	r24, 0x75	; 117
     a62:	91 e0       	ldi	r25, 0x01	; 1
     a64:	db dd       	rcall	.-1098   	; 0x61c <_Z8erhoehenPhhhPKc>
				break;
     a66:	c1 2f       	mov	r28, r17
     a68:	bf cf       	rjmp	.-130    	; 0x9e8 <_Z5einsth+0x372>
	case 5:
		temp = 0;
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[1]));
		while (temp<2)
     a6a:	c2 30       	cpi	r28, 0x02	; 2
     a6c:	08 f4       	brcc	.+2      	; 0xa70 <_Z5einsth+0x3fa>
     a6e:	bc cf       	rjmp	.-136    	; 0x9e8 <_Z5einsth+0x372>
				erhoehen(&WMinuten[1],60,5,NAME(WMinuten[1]));
				break;
			}
			
		}
		return 0;
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	13 c0       	rjmp	.+38     	; 0xa9a <_Z5einsth+0x424>
		break;

	default:
		return 1;
     a74:	81 e0       	ldi	r24, 0x01	; 1
     a76:	11 c0       	rjmp	.+34     	; 0xa9a <_Z5einsth+0x424>
			{
				lampenstaerke=1;
			}
			
		}
		return 0;
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	0f c0       	rjmp	.+30     	; 0xa9a <_Z5einsth+0x424>
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	0d c0       	rjmp	.+26     	; 0xa9a <_Z5einsth+0x424>
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	0b c0       	rjmp	.+22     	; 0xa9a <_Z5einsth+0x424>
				sekoffset=-5;
			}
				
		}
		
		return 0;
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	09 c0       	rjmp	.+18     	; 0xa9a <_Z5einsth+0x424>
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	07 c0       	rjmp	.+14     	; 0xa9a <_Z5einsth+0x424>
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	05 c0       	rjmp	.+10     	; 0xa9a <_Z5einsth+0x424>
				tempoffset=-10;
			}
			
		}
		
		return 0;
     a90:	80 e0       	ldi	r24, 0x00	; 0
     a92:	03 c0       	rjmp	.+6      	; 0xa9a <_Z5einsth+0x424>
     a94:	80 e0       	ldi	r24, 0x00	; 0
     a96:	01 c0       	rjmp	.+2      	; 0xa9a <_Z5einsth+0x424>
     a98:	80 e0       	ldi	r24, 0x00	; 0

	default:
		return 1;
		break;
	}
}
     a9a:	df 91       	pop	r29
     a9c:	cf 91       	pop	r28
     a9e:	1f 91       	pop	r17
     aa0:	08 95       	ret

00000aa2 <_Z10zeitsetzenv>:

#ifndef EINSTELLUNGEN_H_
#define EINSTELLUNGEN_H_

void zeitsetzen(){
	Minuten = 34;
     aa2:	82 e2       	ldi	r24, 0x22	; 34
     aa4:	80 93 7a 01 	sts	0x017A, r24
	Stunden	= 5;
     aa8:	85 e0       	ldi	r24, 0x05	; 5
     aaa:	80 93 79 01 	sts	0x0179, r24
	Sekunden = 0;
     aae:	10 92 7b 01 	sts	0x017B, r1
	WochenTag=6;
     ab2:	96 e0       	ldi	r25, 0x06	; 6
     ab4:	90 93 78 01 	sts	0x0178, r25
	WStunden[0]=5;
     ab8:	80 93 76 01 	sts	0x0176, r24
	WMinuten[0]=35;
     abc:	83 e2       	ldi	r24, 0x23	; 35
     abe:	80 93 74 01 	sts	0x0174, r24
	WStunden[1]=7;
     ac2:	97 e0       	ldi	r25, 0x07	; 7
     ac4:	90 93 77 01 	sts	0x0177, r25
	WMinuten[1]=35;
     ac8:	80 93 75 01 	sts	0x0175, r24
	einst(4);
     acc:	84 e0       	ldi	r24, 0x04	; 4
     ace:	d3 dd       	rcall	.-1114   	; 0x676 <_Z5einsth>
	einst(0);
     ad0:	80 e0       	ldi	r24, 0x00	; 0
     ad2:	d1 dd       	rcall	.-1118   	; 0x676 <_Z5einsth>
	sekoffset=1;
     ad4:	81 e0       	ldi	r24, 0x01	; 1
     ad6:	80 93 6d 01 	sts	0x016D, r24
     ada:	08 95       	ret

00000adc <_Z4menuv>:


#ifndef MENUE_H_
#define MENUE_H_

uint8_t menu(){
     adc:	cf 93       	push	r28
     ade:	df 93       	push	r29
	uint8_t posit = 0;
     ae0:	80 e0       	ldi	r24, 0x00	; 0
						temperatur();
						return 1;
					}
				}
				temperatur();
				posit++;
     ae2:	c6 e0       	ldi	r28, 0x06	; 6
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     ae4:	d7 e0       	ldi	r29, 0x07	; 7

uint8_t menu(){
	uint8_t posit = 0;
	while (true)
	{
		switch (posit)
     ae6:	83 30       	cpi	r24, 0x03	; 3
     ae8:	09 f4       	brne	.+2      	; 0xaec <_Z4menuv+0x10>
     aea:	e7 c0       	rjmp	.+462    	; 0xcba <_Z4menuv+0x1de>
     aec:	30 f4       	brcc	.+12     	; 0xafa <_Z4menuv+0x1e>
     aee:	81 30       	cpi	r24, 0x01	; 1
     af0:	09 f4       	brne	.+2      	; 0xaf4 <_Z4menuv+0x18>
     af2:	53 c0       	rjmp	.+166    	; 0xb9a <_Z4menuv+0xbe>
     af4:	82 30       	cpi	r24, 0x02	; 2
     af6:	49 f4       	brne	.+18     	; 0xb0a <_Z4menuv+0x2e>
     af8:	98 c0       	rjmp	.+304    	; 0xc2a <_Z4menuv+0x14e>
     afa:	85 30       	cpi	r24, 0x05	; 5
     afc:	09 f4       	brne	.+2      	; 0xb00 <_Z4menuv+0x24>
     afe:	75 c1       	rjmp	.+746    	; 0xdea <_Z4menuv+0x30e>
     b00:	08 f4       	brcc	.+2      	; 0xb04 <_Z4menuv+0x28>
     b02:	23 c1       	rjmp	.+582    	; 0xd4a <_Z4menuv+0x26e>
     b04:	86 30       	cpi	r24, 0x06	; 6
     b06:	09 f4       	brne	.+2      	; 0xb0a <_Z4menuv+0x2e>
     b08:	c3 c1       	rjmp	.+902    	; 0xe90 <_Z4menuv+0x3b4>
		{
			case 0:
				//Weckzeit anzeigen und einstellen mit PD2
				lcd_clear();
     b0a:	53 db       	rcall	.-2394   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,5);
     b0c:	65 e0       	ldi	r22, 0x05	; 5
     b0e:	81 e0       	ldi	r24, 0x01	; 1
     b10:	06 dd       	rcall	.-1524   	; 0x51e <_Z3aushh>
				aus(2,0);
     b12:	60 e0       	ldi	r22, 0x00	; 0
     b14:	82 e0       	ldi	r24, 0x02	; 2
     b16:	03 dd       	rcall	.-1530   	; 0x51e <_Z3aushh>
				lcd_string("Werktags");
     b18:	8c e1       	ldi	r24, 0x1C	; 28
     b1a:	91 e0       	ldi	r25, 0x01	; 1
     b1c:	9c db       	rcall	.-2248   	; 0x256 <_Z10lcd_stringPKc>
				posit = posit + 1;
				while(!debounce(&PIND,PD3))
     b1e:	2b c0       	rjmp	.+86     	; 0xb76 <_Z4menuv+0x9a>
				{
					//Zeitabfrage mit einbauen
					if(Sekunden!=sektemp){
     b20:	90 91 7b 01 	lds	r25, 0x017B
     b24:	80 91 72 01 	lds	r24, 0x0172
     b28:	98 13       	cpse	r25, r24
						zeit();
     b2a:	56 dc       	rcall	.-1876   	; 0x3d8 <_Z4zeitv>
     b2c:	82 99       	sbic	0x10, 2	; 16
     b2e:	13 c0       	rjmp	.+38     	; 0xb56 <_Z4menuv+0x7a>
     b30:	8f ef       	ldi	r24, 0xFF	; 255
     b32:	93 eb       	ldi	r25, 0xB3	; 179
     b34:	01 97       	sbiw	r24, 0x01	; 1
     b36:	f1 f7       	brne	.-4      	; 0xb34 <_Z4menuv+0x58>
     b38:	00 c0       	rjmp	.+0      	; 0xb3a <_Z4menuv+0x5e>
     b3a:	00 00       	nop
     b3c:	8f ef       	ldi	r24, 0xFF	; 255
     b3e:	93 e2       	ldi	r25, 0x23	; 35
     b40:	01 97       	sbiw	r24, 0x01	; 1
     b42:	f1 f7       	brne	.-4      	; 0xb40 <_Z4menuv+0x64>
     b44:	00 c0       	rjmp	.+0      	; 0xb46 <_Z4menuv+0x6a>
     b46:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     b48:	82 99       	sbic	0x10, 2	; 16
     b4a:	05 c0       	rjmp	.+10     	; 0xb56 <_Z4menuv+0x7a>
					{
						einst(4);
     b4c:	84 e0       	ldi	r24, 0x04	; 4
     b4e:	93 dd       	rcall	.-1242   	; 0x676 <_Z5einsth>
						lcd_string("Werktags");
     b50:	8c e1       	ldi	r24, 0x1C	; 28
     b52:	91 e0       	ldi	r25, 0x01	; 1
     b54:	80 db       	rcall	.-2304   	; 0x256 <_Z10lcd_stringPKc>
     b56:	84 99       	sbic	0x10, 4	; 16
     b58:	0e c0       	rjmp	.+28     	; 0xb76 <_Z4menuv+0x9a>
     b5a:	8f ef       	ldi	r24, 0xFF	; 255
     b5c:	93 eb       	ldi	r25, 0xB3	; 179
     b5e:	01 97       	sbiw	r24, 0x01	; 1
     b60:	f1 f7       	brne	.-4      	; 0xb5e <_Z4menuv+0x82>
     b62:	00 c0       	rjmp	.+0      	; 0xb64 <_Z4menuv+0x88>
     b64:	00 00       	nop
     b66:	8f ef       	ldi	r24, 0xFF	; 255
     b68:	93 e2       	ldi	r25, 0x23	; 35
     b6a:	01 97       	sbiw	r24, 0x01	; 1
     b6c:	f1 f7       	brne	.-4      	; 0xb6a <_Z4menuv+0x8e>
     b6e:	00 c0       	rjmp	.+0      	; 0xb70 <_Z4menuv+0x94>
     b70:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     b72:	84 9b       	sbis	0x10, 4	; 16
     b74:	d7 c1       	rjmp	.+942    	; 0xf24 <_Z4menuv+0x448>
     b76:	83 99       	sbic	0x10, 3	; 16
     b78:	d3 cf       	rjmp	.-90     	; 0xb20 <_Z4menuv+0x44>
     b7a:	8f ef       	ldi	r24, 0xFF	; 255
     b7c:	93 eb       	ldi	r25, 0xB3	; 179
     b7e:	01 97       	sbiw	r24, 0x01	; 1
     b80:	f1 f7       	brne	.-4      	; 0xb7e <_Z4menuv+0xa2>
     b82:	00 c0       	rjmp	.+0      	; 0xb84 <_Z4menuv+0xa8>
     b84:	00 00       	nop
     b86:	8f ef       	ldi	r24, 0xFF	; 255
     b88:	93 e2       	ldi	r25, 0x23	; 35
     b8a:	01 97       	sbiw	r24, 0x01	; 1
     b8c:	f1 f7       	brne	.-4      	; 0xb8a <_Z4menuv+0xae>
     b8e:	00 c0       	rjmp	.+0      	; 0xb90 <_Z4menuv+0xb4>
     b90:	00 00       	nop
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Werktags");
				posit = posit + 1;
				while(!debounce(&PIND,PD3))
     b92:	83 99       	sbic	0x10, 3	; 16
     b94:	c5 cf       	rjmp	.-118    	; 0xb20 <_Z4menuv+0x44>
				//Weckzeit anzeigen und einstellen mit PD2
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Werktags");
				posit = posit + 1;
     b96:	81 e0       	ldi	r24, 0x01	; 1
     b98:	a6 cf       	rjmp	.-180    	; 0xae6 <_Z4menuv+0xa>
				}
				break;
			
			case 1:
			//Weckzeit anzeige und einstellungen am Wochenende
				lcd_clear();
     b9a:	0b db       	rcall	.-2538   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,5);
     b9c:	65 e0       	ldi	r22, 0x05	; 5
     b9e:	81 e0       	ldi	r24, 0x01	; 1
     ba0:	be dc       	rcall	.-1668   	; 0x51e <_Z3aushh>
				aus(2,0);
     ba2:	60 e0       	ldi	r22, 0x00	; 0
     ba4:	82 e0       	ldi	r24, 0x02	; 2
     ba6:	bb dc       	rcall	.-1674   	; 0x51e <_Z3aushh>
				lcd_string("Wohenende");
     ba8:	85 e2       	ldi	r24, 0x25	; 37
     baa:	91 e0       	ldi	r25, 0x01	; 1
     bac:	54 db       	rcall	.-2392   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     bae:	2b c0       	rjmp	.+86     	; 0xc06 <_Z4menuv+0x12a>
				{
					if(Sekunden!=sektemp){
     bb0:	90 91 7b 01 	lds	r25, 0x017B
     bb4:	80 91 72 01 	lds	r24, 0x0172
     bb8:	98 13       	cpse	r25, r24
						zeit();
     bba:	0e dc       	rcall	.-2020   	; 0x3d8 <_Z4zeitv>
     bbc:	82 99       	sbic	0x10, 2	; 16
     bbe:	13 c0       	rjmp	.+38     	; 0xbe6 <_Z4menuv+0x10a>
     bc0:	8f ef       	ldi	r24, 0xFF	; 255
     bc2:	93 eb       	ldi	r25, 0xB3	; 179
     bc4:	01 97       	sbiw	r24, 0x01	; 1
     bc6:	f1 f7       	brne	.-4      	; 0xbc4 <_Z4menuv+0xe8>
     bc8:	00 c0       	rjmp	.+0      	; 0xbca <_Z4menuv+0xee>
     bca:	00 00       	nop
     bcc:	8f ef       	ldi	r24, 0xFF	; 255
     bce:	93 e2       	ldi	r25, 0x23	; 35
     bd0:	01 97       	sbiw	r24, 0x01	; 1
     bd2:	f1 f7       	brne	.-4      	; 0xbd0 <_Z4menuv+0xf4>
     bd4:	00 c0       	rjmp	.+0      	; 0xbd6 <_Z4menuv+0xfa>
     bd6:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     bd8:	82 99       	sbic	0x10, 2	; 16
     bda:	05 c0       	rjmp	.+10     	; 0xbe6 <_Z4menuv+0x10a>
					{
						einst(5);
     bdc:	85 e0       	ldi	r24, 0x05	; 5
     bde:	4b dd       	rcall	.-1386   	; 0x676 <_Z5einsth>
						lcd_string("Wohenende");
     be0:	85 e2       	ldi	r24, 0x25	; 37
     be2:	91 e0       	ldi	r25, 0x01	; 1
     be4:	38 db       	rcall	.-2448   	; 0x256 <_Z10lcd_stringPKc>
     be6:	84 99       	sbic	0x10, 4	; 16
     be8:	0e c0       	rjmp	.+28     	; 0xc06 <_Z4menuv+0x12a>
     bea:	8f ef       	ldi	r24, 0xFF	; 255
     bec:	93 eb       	ldi	r25, 0xB3	; 179
     bee:	01 97       	sbiw	r24, 0x01	; 1
     bf0:	f1 f7       	brne	.-4      	; 0xbee <_Z4menuv+0x112>
     bf2:	00 c0       	rjmp	.+0      	; 0xbf4 <_Z4menuv+0x118>
     bf4:	00 00       	nop
     bf6:	8f ef       	ldi	r24, 0xFF	; 255
     bf8:	93 e2       	ldi	r25, 0x23	; 35
     bfa:	01 97       	sbiw	r24, 0x01	; 1
     bfc:	f1 f7       	brne	.-4      	; 0xbfa <_Z4menuv+0x11e>
     bfe:	00 c0       	rjmp	.+0      	; 0xc00 <_Z4menuv+0x124>
     c00:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     c02:	84 9b       	sbis	0x10, 4	; 16
     c04:	8f c1       	rjmp	.+798    	; 0xf24 <_Z4menuv+0x448>
     c06:	83 99       	sbic	0x10, 3	; 16
     c08:	d3 cf       	rjmp	.-90     	; 0xbb0 <_Z4menuv+0xd4>
     c0a:	8f ef       	ldi	r24, 0xFF	; 255
     c0c:	93 eb       	ldi	r25, 0xB3	; 179
     c0e:	01 97       	sbiw	r24, 0x01	; 1
     c10:	f1 f7       	brne	.-4      	; 0xc0e <_Z4menuv+0x132>
     c12:	00 c0       	rjmp	.+0      	; 0xc14 <_Z4menuv+0x138>
     c14:	00 00       	nop
     c16:	8f ef       	ldi	r24, 0xFF	; 255
     c18:	93 e2       	ldi	r25, 0x23	; 35
     c1a:	01 97       	sbiw	r24, 0x01	; 1
     c1c:	f1 f7       	brne	.-4      	; 0xc1a <_Z4menuv+0x13e>
     c1e:	00 c0       	rjmp	.+0      	; 0xc20 <_Z4menuv+0x144>
     c20:	00 00       	nop
			//Weckzeit anzeige und einstellungen am Wochenende
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Wohenende");
				while (!debounce(&PIND,PD3))
     c22:	83 99       	sbic	0x10, 3	; 16
     c24:	c5 cf       	rjmp	.-118    	; 0xbb0 <_Z4menuv+0xd4>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     c26:	82 e0       	ldi	r24, 0x02	; 2
     c28:	5e cf       	rjmp	.-324    	; 0xae6 <_Z4menuv+0xa>
				break;
			
			case 2:
				//Lampe einstellen
				//Jetzt noch nicht implementiert
				lcd_clear();
     c2a:	c3 da       	rcall	.-2682   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,2);
     c2c:	62 e0       	ldi	r22, 0x02	; 2
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	76 dc       	rcall	.-1812   	; 0x51e <_Z3aushh>
				aus(2,0);
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	82 e0       	ldi	r24, 0x02	; 2
     c36:	73 dc       	rcall	.-1818   	; 0x51e <_Z3aushh>
				lcd_string("Lampenstärke:");
     c38:	8b eb       	ldi	r24, 0xBB	; 187
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	0c db       	rcall	.-2536   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     c3e:	2b c0       	rjmp	.+86     	; 0xc96 <_Z4menuv+0x1ba>
				{
					if(Sekunden!=sektemp){
     c40:	90 91 7b 01 	lds	r25, 0x017B
     c44:	80 91 72 01 	lds	r24, 0x0172
     c48:	98 13       	cpse	r25, r24
						zeit();
     c4a:	c6 db       	rcall	.-2164   	; 0x3d8 <_Z4zeitv>
     c4c:	82 99       	sbic	0x10, 2	; 16
     c4e:	13 c0       	rjmp	.+38     	; 0xc76 <_Z4menuv+0x19a>
     c50:	8f ef       	ldi	r24, 0xFF	; 255
     c52:	93 eb       	ldi	r25, 0xB3	; 179
     c54:	01 97       	sbiw	r24, 0x01	; 1
     c56:	f1 f7       	brne	.-4      	; 0xc54 <_Z4menuv+0x178>
     c58:	00 c0       	rjmp	.+0      	; 0xc5a <_Z4menuv+0x17e>
     c5a:	00 00       	nop
     c5c:	8f ef       	ldi	r24, 0xFF	; 255
     c5e:	93 e2       	ldi	r25, 0x23	; 35
     c60:	01 97       	sbiw	r24, 0x01	; 1
     c62:	f1 f7       	brne	.-4      	; 0xc60 <_Z4menuv+0x184>
     c64:	00 c0       	rjmp	.+0      	; 0xc66 <_Z4menuv+0x18a>
     c66:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     c68:	82 99       	sbic	0x10, 2	; 16
     c6a:	05 c0       	rjmp	.+10     	; 0xc76 <_Z4menuv+0x19a>
					{
						einst(1);
     c6c:	81 e0       	ldi	r24, 0x01	; 1
     c6e:	03 dd       	rcall	.-1530   	; 0x676 <_Z5einsth>
						lcd_string("Lampenstärke");
     c70:	8f e2       	ldi	r24, 0x2F	; 47
     c72:	91 e0       	ldi	r25, 0x01	; 1
     c74:	f0 da       	rcall	.-2592   	; 0x256 <_Z10lcd_stringPKc>
     c76:	84 99       	sbic	0x10, 4	; 16
     c78:	0e c0       	rjmp	.+28     	; 0xc96 <_Z4menuv+0x1ba>
     c7a:	8f ef       	ldi	r24, 0xFF	; 255
     c7c:	93 eb       	ldi	r25, 0xB3	; 179
     c7e:	01 97       	sbiw	r24, 0x01	; 1
     c80:	f1 f7       	brne	.-4      	; 0xc7e <_Z4menuv+0x1a2>
     c82:	00 c0       	rjmp	.+0      	; 0xc84 <_Z4menuv+0x1a8>
     c84:	00 00       	nop
     c86:	8f ef       	ldi	r24, 0xFF	; 255
     c88:	93 e2       	ldi	r25, 0x23	; 35
     c8a:	01 97       	sbiw	r24, 0x01	; 1
     c8c:	f1 f7       	brne	.-4      	; 0xc8a <_Z4menuv+0x1ae>
     c8e:	00 c0       	rjmp	.+0      	; 0xc90 <_Z4menuv+0x1b4>
     c90:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     c92:	84 9b       	sbis	0x10, 4	; 16
     c94:	47 c1       	rjmp	.+654    	; 0xf24 <_Z4menuv+0x448>
     c96:	83 99       	sbic	0x10, 3	; 16
     c98:	d3 cf       	rjmp	.-90     	; 0xc40 <_Z4menuv+0x164>
     c9a:	8f ef       	ldi	r24, 0xFF	; 255
     c9c:	93 eb       	ldi	r25, 0xB3	; 179
     c9e:	01 97       	sbiw	r24, 0x01	; 1
     ca0:	f1 f7       	brne	.-4      	; 0xc9e <_Z4menuv+0x1c2>
     ca2:	00 c0       	rjmp	.+0      	; 0xca4 <_Z4menuv+0x1c8>
     ca4:	00 00       	nop
     ca6:	8f ef       	ldi	r24, 0xFF	; 255
     ca8:	93 e2       	ldi	r25, 0x23	; 35
     caa:	01 97       	sbiw	r24, 0x01	; 1
     cac:	f1 f7       	brne	.-4      	; 0xcaa <_Z4menuv+0x1ce>
     cae:	00 c0       	rjmp	.+0      	; 0xcb0 <_Z4menuv+0x1d4>
     cb0:	00 00       	nop
				//Jetzt noch nicht implementiert
				lcd_clear();
				aus(1,2);
				aus(2,0);
				lcd_string("Lampenstärke:");
				while (!debounce(&PIND,PD3))
     cb2:	83 99       	sbic	0x10, 3	; 16
     cb4:	c5 cf       	rjmp	.-118    	; 0xc40 <_Z4menuv+0x164>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     cb6:	83 e0       	ldi	r24, 0x03	; 3
     cb8:	16 cf       	rjmp	.-468    	; 0xae6 <_Z4menuv+0xa>
				break;
			
			case 3:
				//Zeit einstellen ohnen Sekunden
				lcd_clear();
     cba:	7b da       	rcall	.-2826   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,3);
     cbc:	63 e0       	ldi	r22, 0x03	; 3
     cbe:	81 e0       	ldi	r24, 0x01	; 1
     cc0:	2e dc       	rcall	.-1956   	; 0x51e <_Z3aushh>
				aus(2,0);
     cc2:	60 e0       	ldi	r22, 0x00	; 0
     cc4:	82 e0       	ldi	r24, 0x02	; 2
     cc6:	2b dc       	rcall	.-1962   	; 0x51e <_Z3aushh>
				lcd_string("Zeit");
     cc8:	8d e3       	ldi	r24, 0x3D	; 61
     cca:	91 e0       	ldi	r25, 0x01	; 1
     ccc:	c4 da       	rcall	.-2680   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     cce:	2b c0       	rjmp	.+86     	; 0xd26 <_Z4menuv+0x24a>
				{
					if(Sekunden!=sektemp){
     cd0:	90 91 7b 01 	lds	r25, 0x017B
     cd4:	80 91 72 01 	lds	r24, 0x0172
     cd8:	98 13       	cpse	r25, r24
						zeit();
     cda:	7e db       	rcall	.-2308   	; 0x3d8 <_Z4zeitv>
     cdc:	82 99       	sbic	0x10, 2	; 16
     cde:	13 c0       	rjmp	.+38     	; 0xd06 <_Z4menuv+0x22a>
     ce0:	8f ef       	ldi	r24, 0xFF	; 255
     ce2:	93 eb       	ldi	r25, 0xB3	; 179
     ce4:	01 97       	sbiw	r24, 0x01	; 1
     ce6:	f1 f7       	brne	.-4      	; 0xce4 <_Z4menuv+0x208>
     ce8:	00 c0       	rjmp	.+0      	; 0xcea <_Z4menuv+0x20e>
     cea:	00 00       	nop
     cec:	8f ef       	ldi	r24, 0xFF	; 255
     cee:	93 e2       	ldi	r25, 0x23	; 35
     cf0:	01 97       	sbiw	r24, 0x01	; 1
     cf2:	f1 f7       	brne	.-4      	; 0xcf0 <_Z4menuv+0x214>
     cf4:	00 c0       	rjmp	.+0      	; 0xcf6 <_Z4menuv+0x21a>
     cf6:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     cf8:	82 99       	sbic	0x10, 2	; 16
     cfa:	05 c0       	rjmp	.+10     	; 0xd06 <_Z4menuv+0x22a>
					{
						einst(0);
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	bb dc       	rcall	.-1674   	; 0x676 <_Z5einsth>
						lcd_string("Zeit");
     d00:	8d e3       	ldi	r24, 0x3D	; 61
     d02:	91 e0       	ldi	r25, 0x01	; 1
     d04:	a8 da       	rcall	.-2736   	; 0x256 <_Z10lcd_stringPKc>
     d06:	84 99       	sbic	0x10, 4	; 16
     d08:	0e c0       	rjmp	.+28     	; 0xd26 <_Z4menuv+0x24a>
     d0a:	8f ef       	ldi	r24, 0xFF	; 255
     d0c:	93 eb       	ldi	r25, 0xB3	; 179
     d0e:	01 97       	sbiw	r24, 0x01	; 1
     d10:	f1 f7       	brne	.-4      	; 0xd0e <_Z4menuv+0x232>
     d12:	00 c0       	rjmp	.+0      	; 0xd14 <_Z4menuv+0x238>
     d14:	00 00       	nop
     d16:	8f ef       	ldi	r24, 0xFF	; 255
     d18:	93 e2       	ldi	r25, 0x23	; 35
     d1a:	01 97       	sbiw	r24, 0x01	; 1
     d1c:	f1 f7       	brne	.-4      	; 0xd1a <_Z4menuv+0x23e>
     d1e:	00 c0       	rjmp	.+0      	; 0xd20 <_Z4menuv+0x244>
     d20:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     d22:	84 9b       	sbis	0x10, 4	; 16
     d24:	ff c0       	rjmp	.+510    	; 0xf24 <_Z4menuv+0x448>
     d26:	83 99       	sbic	0x10, 3	; 16
     d28:	d3 cf       	rjmp	.-90     	; 0xcd0 <_Z4menuv+0x1f4>
     d2a:	8f ef       	ldi	r24, 0xFF	; 255
     d2c:	93 eb       	ldi	r25, 0xB3	; 179
     d2e:	01 97       	sbiw	r24, 0x01	; 1
     d30:	f1 f7       	brne	.-4      	; 0xd2e <_Z4menuv+0x252>
     d32:	00 c0       	rjmp	.+0      	; 0xd34 <_Z4menuv+0x258>
     d34:	00 00       	nop
     d36:	8f ef       	ldi	r24, 0xFF	; 255
     d38:	93 e2       	ldi	r25, 0x23	; 35
     d3a:	01 97       	sbiw	r24, 0x01	; 1
     d3c:	f1 f7       	brne	.-4      	; 0xd3a <_Z4menuv+0x25e>
     d3e:	00 c0       	rjmp	.+0      	; 0xd40 <_Z4menuv+0x264>
     d40:	00 00       	nop
				//Zeit einstellen ohnen Sekunden
				lcd_clear();
				aus(1,3);
				aus(2,0);
				lcd_string("Zeit");
				while (!debounce(&PIND,PD3))
     d42:	83 99       	sbic	0x10, 3	; 16
     d44:	c5 cf       	rjmp	.-118    	; 0xcd0 <_Z4menuv+0x1f4>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     d46:	84 e0       	ldi	r24, 0x04	; 4
     d48:	ce ce       	rjmp	.-612    	; 0xae6 <_Z4menuv+0xa>
				break;
				
			case 4:
				//Sekundenoffset einstellen
				lcd_clear();
     d4a:	33 da       	rcall	.-2970   	; 0x1b2 <_Z9lcd_clearv>
				lcd_home();
     d4c:	69 da       	rcall	.-2862   	; 0x220 <_Z8lcd_homev>
				lcd_string("Sekundenoffset:");
     d4e:	8a ec       	ldi	r24, 0xCA	; 202
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	81 da       	rcall	.-2814   	; 0x256 <_Z10lcd_stringPKc>
				aus(2,0);
     d54:	60 e0       	ldi	r22, 0x00	; 0
     d56:	82 e0       	ldi	r24, 0x02	; 2
     d58:	e2 db       	rcall	.-2108   	; 0x51e <_Z3aushh>
				itoa(sekoffset,Buffer,10);
     d5a:	80 91 6d 01 	lds	r24, 0x016D
     d5e:	4a e0       	ldi	r20, 0x0A	; 10
     d60:	50 e0       	ldi	r21, 0x00	; 0
     d62:	69 e5       	ldi	r22, 0x59	; 89
     d64:	71 e0       	ldi	r23, 0x01	; 1
     d66:	99 27       	eor	r25, r25
     d68:	87 fd       	sbrc	r24, 7
     d6a:	90 95       	com	r25
     d6c:	7c d3       	rcall	.+1784   	; 0x1466 <itoa>
				lcd_string(Buffer);
     d6e:	89 e5       	ldi	r24, 0x59	; 89
     d70:	91 e0       	ldi	r25, 0x01	; 1
     d72:	71 da       	rcall	.-2846   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     d74:	28 c0       	rjmp	.+80     	; 0xdc6 <_Z4menuv+0x2ea>
				{
					if(Sekunden!=sektemp){
     d76:	90 91 7b 01 	lds	r25, 0x017B
     d7a:	80 91 72 01 	lds	r24, 0x0172
     d7e:	98 13       	cpse	r25, r24
						zeit();
     d80:	2b db       	rcall	.-2474   	; 0x3d8 <_Z4zeitv>
     d82:	82 99       	sbic	0x10, 2	; 16
     d84:	10 c0       	rjmp	.+32     	; 0xda6 <_Z4menuv+0x2ca>
     d86:	8f ef       	ldi	r24, 0xFF	; 255
     d88:	93 eb       	ldi	r25, 0xB3	; 179
     d8a:	01 97       	sbiw	r24, 0x01	; 1
     d8c:	f1 f7       	brne	.-4      	; 0xd8a <_Z4menuv+0x2ae>
     d8e:	00 c0       	rjmp	.+0      	; 0xd90 <_Z4menuv+0x2b4>
     d90:	00 00       	nop
     d92:	8f ef       	ldi	r24, 0xFF	; 255
     d94:	93 e2       	ldi	r25, 0x23	; 35
     d96:	01 97       	sbiw	r24, 0x01	; 1
     d98:	f1 f7       	brne	.-4      	; 0xd96 <_Z4menuv+0x2ba>
     d9a:	00 c0       	rjmp	.+0      	; 0xd9c <_Z4menuv+0x2c0>
     d9c:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     d9e:	82 99       	sbic	0x10, 2	; 16
     da0:	02 c0       	rjmp	.+4      	; 0xda6 <_Z4menuv+0x2ca>
					{
						einst(2);
     da2:	82 e0       	ldi	r24, 0x02	; 2
     da4:	68 dc       	rcall	.-1840   	; 0x676 <_Z5einsth>
     da6:	84 99       	sbic	0x10, 4	; 16
     da8:	0e c0       	rjmp	.+28     	; 0xdc6 <_Z4menuv+0x2ea>
     daa:	8f ef       	ldi	r24, 0xFF	; 255
     dac:	93 eb       	ldi	r25, 0xB3	; 179
     dae:	01 97       	sbiw	r24, 0x01	; 1
     db0:	f1 f7       	brne	.-4      	; 0xdae <_Z4menuv+0x2d2>
     db2:	00 c0       	rjmp	.+0      	; 0xdb4 <_Z4menuv+0x2d8>
     db4:	00 00       	nop
     db6:	8f ef       	ldi	r24, 0xFF	; 255
     db8:	93 e2       	ldi	r25, 0x23	; 35
     dba:	01 97       	sbiw	r24, 0x01	; 1
     dbc:	f1 f7       	brne	.-4      	; 0xdba <_Z4menuv+0x2de>
     dbe:	00 c0       	rjmp	.+0      	; 0xdc0 <_Z4menuv+0x2e4>
     dc0:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     dc2:	84 9b       	sbis	0x10, 4	; 16
     dc4:	af c0       	rjmp	.+350    	; 0xf24 <_Z4menuv+0x448>
     dc6:	83 99       	sbic	0x10, 3	; 16
     dc8:	d6 cf       	rjmp	.-84     	; 0xd76 <_Z4menuv+0x29a>
     dca:	8f ef       	ldi	r24, 0xFF	; 255
     dcc:	93 eb       	ldi	r25, 0xB3	; 179
     dce:	01 97       	sbiw	r24, 0x01	; 1
     dd0:	f1 f7       	brne	.-4      	; 0xdce <_Z4menuv+0x2f2>
     dd2:	00 c0       	rjmp	.+0      	; 0xdd4 <_Z4menuv+0x2f8>
     dd4:	00 00       	nop
     dd6:	8f ef       	ldi	r24, 0xFF	; 255
     dd8:	93 e2       	ldi	r25, 0x23	; 35
     dda:	01 97       	sbiw	r24, 0x01	; 1
     ddc:	f1 f7       	brne	.-4      	; 0xdda <_Z4menuv+0x2fe>
     dde:	00 c0       	rjmp	.+0      	; 0xde0 <_Z4menuv+0x304>
     de0:	00 00       	nop
				lcd_home();
				lcd_string("Sekundenoffset:");
				aus(2,0);
				itoa(sekoffset,Buffer,10);
				lcd_string(Buffer);
				while (!debounce(&PIND,PD3))
     de2:	83 99       	sbic	0x10, 3	; 16
     de4:	c8 cf       	rjmp	.-112    	; 0xd76 <_Z4menuv+0x29a>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     de6:	85 e0       	ldi	r24, 0x05	; 5
     de8:	7e ce       	rjmp	.-772    	; 0xae6 <_Z4menuv+0xa>
				break;
				
			case 5:
				//Temperaturoffset einstellen
				lcd_clear();
     dea:	e3 d9       	rcall	.-3130   	; 0x1b2 <_Z9lcd_clearv>
				lcd_home();
     dec:	19 da       	rcall	.-3022   	; 0x220 <_Z8lcd_homev>
				lcd_string("Temperaturoffset:");
     dee:	8a ed       	ldi	r24, 0xDA	; 218
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	31 da       	rcall	.-2974   	; 0x256 <_Z10lcd_stringPKc>
				aus(2,0);
     df4:	60 e0       	ldi	r22, 0x00	; 0
     df6:	82 e0       	ldi	r24, 0x02	; 2
     df8:	92 db       	rcall	.-2268   	; 0x51e <_Z3aushh>
				itoa(tempoffset,Buffer,10);
     dfa:	80 91 62 00 	lds	r24, 0x0062
     dfe:	4a e0       	ldi	r20, 0x0A	; 10
     e00:	50 e0       	ldi	r21, 0x00	; 0
     e02:	69 e5       	ldi	r22, 0x59	; 89
     e04:	71 e0       	ldi	r23, 0x01	; 1
     e06:	99 27       	eor	r25, r25
     e08:	87 fd       	sbrc	r24, 7
     e0a:	90 95       	com	r25
     e0c:	2c d3       	rcall	.+1624   	; 0x1466 <itoa>
				lcd_string(Buffer);
     e0e:	89 e5       	ldi	r24, 0x59	; 89
     e10:	91 e0       	ldi	r25, 0x01	; 1
     e12:	21 da       	rcall	.-3006   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     e14:	2a c0       	rjmp	.+84     	; 0xe6a <_Z4menuv+0x38e>
				{
					if(Sekunden!=sektemp){
     e16:	90 91 7b 01 	lds	r25, 0x017B
     e1a:	80 91 72 01 	lds	r24, 0x0172
     e1e:	98 13       	cpse	r25, r24
						zeit();
     e20:	db da       	rcall	.-2634   	; 0x3d8 <_Z4zeitv>
     e22:	82 99       	sbic	0x10, 2	; 16
     e24:	10 c0       	rjmp	.+32     	; 0xe46 <_Z4menuv+0x36a>
     e26:	8f ef       	ldi	r24, 0xFF	; 255
     e28:	93 eb       	ldi	r25, 0xB3	; 179
     e2a:	01 97       	sbiw	r24, 0x01	; 1
     e2c:	f1 f7       	brne	.-4      	; 0xe2a <_Z4menuv+0x34e>
     e2e:	00 c0       	rjmp	.+0      	; 0xe30 <_Z4menuv+0x354>
     e30:	00 00       	nop
     e32:	8f ef       	ldi	r24, 0xFF	; 255
     e34:	93 e2       	ldi	r25, 0x23	; 35
     e36:	01 97       	sbiw	r24, 0x01	; 1
     e38:	f1 f7       	brne	.-4      	; 0xe36 <_Z4menuv+0x35a>
     e3a:	00 c0       	rjmp	.+0      	; 0xe3c <_Z4menuv+0x360>
     e3c:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     e3e:	82 99       	sbic	0x10, 2	; 16
     e40:	02 c0       	rjmp	.+4      	; 0xe46 <_Z4menuv+0x36a>
					{
						einst(3);
     e42:	83 e0       	ldi	r24, 0x03	; 3
     e44:	18 dc       	rcall	.-2000   	; 0x676 <_Z5einsth>
     e46:	84 99       	sbic	0x10, 4	; 16
     e48:	10 c0       	rjmp	.+32     	; 0xe6a <_Z4menuv+0x38e>
     e4a:	8f ef       	ldi	r24, 0xFF	; 255
     e4c:	93 eb       	ldi	r25, 0xB3	; 179
     e4e:	01 97       	sbiw	r24, 0x01	; 1
     e50:	f1 f7       	brne	.-4      	; 0xe4e <_Z4menuv+0x372>
     e52:	00 c0       	rjmp	.+0      	; 0xe54 <_Z4menuv+0x378>
     e54:	00 00       	nop
     e56:	8f ef       	ldi	r24, 0xFF	; 255
     e58:	93 e2       	ldi	r25, 0x23	; 35
     e5a:	01 97       	sbiw	r24, 0x01	; 1
     e5c:	f1 f7       	brne	.-4      	; 0xe5a <_Z4menuv+0x37e>
     e5e:	00 c0       	rjmp	.+0      	; 0xe60 <_Z4menuv+0x384>
     e60:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     e62:	84 99       	sbic	0x10, 4	; 16
     e64:	02 c0       	rjmp	.+4      	; 0xe6a <_Z4menuv+0x38e>
					{
						temperatur();
     e66:	5c da       	rcall	.-2888   	; 0x320 <_Z10temperaturv>
						return 1;
     e68:	5d c0       	rjmp	.+186    	; 0xf24 <_Z4menuv+0x448>
     e6a:	83 99       	sbic	0x10, 3	; 16
     e6c:	d4 cf       	rjmp	.-88     	; 0xe16 <_Z4menuv+0x33a>
     e6e:	8f ef       	ldi	r24, 0xFF	; 255
     e70:	93 eb       	ldi	r25, 0xB3	; 179
     e72:	01 97       	sbiw	r24, 0x01	; 1
     e74:	f1 f7       	brne	.-4      	; 0xe72 <_Z4menuv+0x396>
     e76:	00 c0       	rjmp	.+0      	; 0xe78 <_Z4menuv+0x39c>
     e78:	00 00       	nop
     e7a:	8f ef       	ldi	r24, 0xFF	; 255
     e7c:	93 e2       	ldi	r25, 0x23	; 35
     e7e:	01 97       	sbiw	r24, 0x01	; 1
     e80:	f1 f7       	brne	.-4      	; 0xe7e <_Z4menuv+0x3a2>
     e82:	00 c0       	rjmp	.+0      	; 0xe84 <_Z4menuv+0x3a8>
     e84:	00 00       	nop
				lcd_home();
				lcd_string("Temperaturoffset:");
				aus(2,0);
				itoa(tempoffset,Buffer,10);
				lcd_string(Buffer);
				while (!debounce(&PIND,PD3))
     e86:	83 99       	sbic	0x10, 3	; 16
     e88:	c6 cf       	rjmp	.-116    	; 0xe16 <_Z4menuv+0x33a>
					{
						temperatur();
						return 1;
					}
				}
				temperatur();
     e8a:	4a da       	rcall	.-2924   	; 0x320 <_Z10temperaturv>
				posit++;
     e8c:	8c 2f       	mov	r24, r28
				break;
     e8e:	2b ce       	rjmp	.-938    	; 0xae6 <_Z4menuv+0xa>
				
			case 6:
				//Display ausschalten
				lcd_clear();
     e90:	90 d9       	rcall	.-3296   	; 0x1b2 <_Z9lcd_clearv>
				lcd_home();
     e92:	c6 d9       	rcall	.-3188   	; 0x220 <_Z8lcd_homev>
				lcd_string("Display");
     e94:	82 e4       	ldi	r24, 0x42	; 66
     e96:	91 e0       	ldi	r25, 0x01	; 1
     e98:	de d9       	rcall	.-3140   	; 0x256 <_Z10lcd_stringPKc>
				aus(2,0);
     e9a:	60 e0       	ldi	r22, 0x00	; 0
     e9c:	82 e0       	ldi	r24, 0x02	; 2
     e9e:	3f db       	rcall	.-2434   	; 0x51e <_Z3aushh>
				lcd_string("ausschalten?");
     ea0:	8a e4       	ldi	r24, 0x4A	; 74
     ea2:	91 e0       	ldi	r25, 0x01	; 1
     ea4:	d8 d9       	rcall	.-3152   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     ea6:	2c c0       	rjmp	.+88     	; 0xf00 <_Z4menuv+0x424>
				{
					if(Sekunden!=sektemp){
     ea8:	90 91 7b 01 	lds	r25, 0x017B
     eac:	80 91 72 01 	lds	r24, 0x0172
     eb0:	98 13       	cpse	r25, r24
						zeit();
     eb2:	92 da       	rcall	.-2780   	; 0x3d8 <_Z4zeitv>
     eb4:	82 99       	sbic	0x10, 2	; 16
     eb6:	14 c0       	rjmp	.+40     	; 0xee0 <_Z4menuv+0x404>
     eb8:	8f ef       	ldi	r24, 0xFF	; 255
     eba:	93 eb       	ldi	r25, 0xB3	; 179
     ebc:	01 97       	sbiw	r24, 0x01	; 1
     ebe:	f1 f7       	brne	.-4      	; 0xebc <_Z4menuv+0x3e0>
     ec0:	00 c0       	rjmp	.+0      	; 0xec2 <_Z4menuv+0x3e6>
     ec2:	00 00       	nop
     ec4:	8f ef       	ldi	r24, 0xFF	; 255
     ec6:	93 e2       	ldi	r25, 0x23	; 35
     ec8:	01 97       	sbiw	r24, 0x01	; 1
     eca:	f1 f7       	brne	.-4      	; 0xec8 <_Z4menuv+0x3ec>
     ecc:	00 c0       	rjmp	.+0      	; 0xece <_Z4menuv+0x3f2>
     ece:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     ed0:	82 99       	sbic	0x10, 2	; 16
     ed2:	06 c0       	rjmp	.+12     	; 0xee0 <_Z4menuv+0x404>
					{
						displaystat=false;
     ed4:	10 92 60 00 	sts	0x0060, r1
						displayoff=0;
     ed8:	10 92 58 01 	sts	0x0158, r1
						PORTC &= ~(1<<PC2); //Display ausschalten
     edc:	aa 98       	cbi	0x15, 2	; 21
						return 1;
     ede:	22 c0       	rjmp	.+68     	; 0xf24 <_Z4menuv+0x448>
     ee0:	84 99       	sbic	0x10, 4	; 16
     ee2:	0e c0       	rjmp	.+28     	; 0xf00 <_Z4menuv+0x424>
     ee4:	8f ef       	ldi	r24, 0xFF	; 255
     ee6:	93 eb       	ldi	r25, 0xB3	; 179
     ee8:	01 97       	sbiw	r24, 0x01	; 1
     eea:	f1 f7       	brne	.-4      	; 0xee8 <_Z4menuv+0x40c>
     eec:	00 c0       	rjmp	.+0      	; 0xeee <_Z4menuv+0x412>
     eee:	00 00       	nop
     ef0:	8f ef       	ldi	r24, 0xFF	; 255
     ef2:	93 e2       	ldi	r25, 0x23	; 35
     ef4:	01 97       	sbiw	r24, 0x01	; 1
     ef6:	f1 f7       	brne	.-4      	; 0xef4 <_Z4menuv+0x418>
     ef8:	00 c0       	rjmp	.+0      	; 0xefa <_Z4menuv+0x41e>
     efa:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     efc:	84 9b       	sbis	0x10, 4	; 16
     efe:	12 c0       	rjmp	.+36     	; 0xf24 <_Z4menuv+0x448>
     f00:	83 99       	sbic	0x10, 3	; 16
     f02:	d2 cf       	rjmp	.-92     	; 0xea8 <_Z4menuv+0x3cc>
     f04:	8f ef       	ldi	r24, 0xFF	; 255
     f06:	93 eb       	ldi	r25, 0xB3	; 179
     f08:	01 97       	sbiw	r24, 0x01	; 1
     f0a:	f1 f7       	brne	.-4      	; 0xf08 <_Z4menuv+0x42c>
     f0c:	00 c0       	rjmp	.+0      	; 0xf0e <_Z4menuv+0x432>
     f0e:	00 00       	nop
     f10:	8f ef       	ldi	r24, 0xFF	; 255
     f12:	93 e2       	ldi	r25, 0x23	; 35
     f14:	01 97       	sbiw	r24, 0x01	; 1
     f16:	f1 f7       	brne	.-4      	; 0xf14 <_Z4menuv+0x438>
     f18:	00 c0       	rjmp	.+0      	; 0xf1a <_Z4menuv+0x43e>
     f1a:	00 00       	nop
				lcd_clear();
				lcd_home();
				lcd_string("Display");
				aus(2,0);
				lcd_string("ausschalten?");
				while (!debounce(&PIND,PD3))
     f1c:	83 99       	sbic	0x10, 3	; 16
     f1e:	c4 cf       	rjmp	.-120    	; 0xea8 <_Z4menuv+0x3cc>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     f20:	8d 2f       	mov	r24, r29
     f22:	e1 cd       	rjmp	.-1086   	; 0xae6 <_Z4menuv+0xa>
				posit=0;
				break;
		}
	}
return 0;
}
     f24:	81 e0       	ldi	r24, 0x01	; 1
     f26:	df 91       	pop	r29
     f28:	cf 91       	pop	r28
     f2a:	08 95       	ret

00000f2c <_Z4initv>:
}

void init(){
	//ADC
	ADMUX = (1<<REFS0);
     f2c:	80 e4       	ldi	r24, 0x40	; 64
     f2e:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
     f30:	83 e0       	ldi	r24, 0x03	; 3
     f32:	86 b9       	out	0x06, r24	; 6
	ADCSRA |= (1<<ADEN);
     f34:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1<<ADSC);
     f36:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     f38:	36 99       	sbic	0x06, 6	; 6
     f3a:	fe cf       	rjmp	.-4      	; 0xf38 <_Z4initv+0xc>
	}
	(void) ADCW;
     f3c:	84 b1       	in	r24, 0x04	; 4
     f3e:	95 b1       	in	r25, 0x05	; 5
	
	//Eingänge
	PORTD |= (1<<PD2) | (1<<PD3) | (1<<PD4);
     f40:	82 b3       	in	r24, 0x12	; 18
     f42:	8c 61       	ori	r24, 0x1C	; 28
     f44:	82 bb       	out	0x12, r24	; 18
	
	//Ausgänge
	DDRC = (1<<PC5) | (1<<PC4) | (1<<PC3) | (1<<PC2);
     f46:	8c e3       	ldi	r24, 0x3C	; 60
     f48:	84 bb       	out	0x14, r24	; 20
	
	//LCD einstellen und erste Ausgabe
	PORTC |= (1<PC2);
     f4a:	a8 9a       	sbi	0x15, 0	; 21
	lcd_init();
     f4c:	39 d9       	rcall	.-3470   	; 0x1c0 <_Z8lcd_initv>
	aus(1,4);
     f4e:	64 e0       	ldi	r22, 0x04	; 4
     f50:	81 e0       	ldi	r24, 0x01	; 1
     f52:	e5 da       	rcall	.-2614   	; 0x51e <_Z3aushh>
     f54:	2f ef       	ldi	r18, 0xFF	; 255
     f56:	8f ed       	ldi	r24, 0xDF	; 223
     f58:	90 e1       	ldi	r25, 0x10	; 16
     f5a:	21 50       	subi	r18, 0x01	; 1
     f5c:	80 40       	sbci	r24, 0x00	; 0
     f5e:	90 40       	sbci	r25, 0x00	; 0
     f60:	e1 f7       	brne	.-8      	; 0xf5a <_Z4initv+0x2e>
     f62:	00 c0       	rjmp	.+0      	; 0xf64 <_Z4initv+0x38>
     f64:	00 00       	nop
	_delay_ms(1500);
	lcd_clear();
     f66:	25 d9       	rcall	.-3510   	; 0x1b2 <_Z9lcd_clearv>
	
	//erste zeiteinstellung
	zeitsetzen();
     f68:	9c dd       	rcall	.-1224   	; 0xaa2 <_Z10zeitsetzenv>
	
	//Timer 1 Einstelungen
	TCNT1H = 0b11110001;
     f6a:	81 ef       	ldi	r24, 0xF1	; 241
     f6c:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     f6e:	80 ef       	ldi	r24, 0xF0	; 240
     f70:	8c bd       	out	0x2c, r24	; 44
	TIMSK = (1<<TOIE1);
     f72:	84 e0       	ldi	r24, 0x04	; 4
     f74:	89 bf       	out	0x39, r24	; 57
	TCCR1B = (1<<CS10) | (1<<CS12);
     f76:	85 e0       	ldi	r24, 0x05	; 5
     f78:	8e bd       	out	0x2e, r24	; 46
	
	//Interupts aktivieren
	sei();
     f7a:	78 94       	sei
	
	//Wecker einschalten
	Wan=0;
     f7c:	10 92 73 01 	sts	0x0173, r1
     f80:	08 95       	ret

00000f82 <__vector_8>:
#include "einstellungen.h"
#include "zeit.h"
#include "menue.h"
#include "ausgabe.h"

ISR(TIMER1_OVF_vect){
     f82:	1f 92       	push	r1
     f84:	0f 92       	push	r0
     f86:	0f b6       	in	r0, 0x3f	; 63
     f88:	0f 92       	push	r0
     f8a:	11 24       	eor	r1, r1
     f8c:	8f 93       	push	r24
	TCNT1H = 0b11110001;
     f8e:	81 ef       	ldi	r24, 0xF1	; 241
     f90:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     f92:	80 ef       	ldi	r24, 0xF0	; 240
     f94:	8c bd       	out	0x2c, r24	; 44
	Sekunden++;
     f96:	80 91 7b 01 	lds	r24, 0x017B
     f9a:	8f 5f       	subi	r24, 0xFF	; 255
     f9c:	80 93 7b 01 	sts	0x017B, r24
}
     fa0:	8f 91       	pop	r24
     fa2:	0f 90       	pop	r0
     fa4:	0f be       	out	0x3f, r0	; 63
     fa6:	0f 90       	pop	r0
     fa8:	1f 90       	pop	r1
     faa:	18 95       	reti

00000fac <main>:

int main(void)
{
	init();
     fac:	bf df       	rcall	.-130    	; 0xf2c <_Z4initv>
	
	while(1)
	{
		if (Sekunden!=sektemp)
     fae:	90 91 7b 01 	lds	r25, 0x017B
     fb2:	80 91 72 01 	lds	r24, 0x0172
     fb6:	98 17       	cp	r25, r24
     fb8:	c9 f0       	breq	.+50     	; 0xfec <main+0x40>
		{
			zeit();
     fba:	0e da       	rcall	.-3044   	; 0x3d8 <_Z4zeitv>
			if (displaystat)
     fbc:	80 91 60 00 	lds	r24, 0x0060
     fc0:	88 23       	and	r24, r24
     fc2:	59 f0       	breq	.+22     	; 0xfda <main+0x2e>
			{
				aus(1,3);
     fc4:	63 e0       	ldi	r22, 0x03	; 3
     fc6:	81 e0       	ldi	r24, 0x01	; 1
     fc8:	aa da       	rcall	.-2732   	; 0x51e <_Z3aushh>
				aus(2,1);
     fca:	61 e0       	ldi	r22, 0x01	; 1
     fcc:	82 e0       	ldi	r24, 0x02	; 2
     fce:	a7 da       	rcall	.-2738   	; 0x51e <_Z3aushh>
				displayoff++;
     fd0:	80 91 58 01 	lds	r24, 0x0158
     fd4:	8f 5f       	subi	r24, 0xFF	; 255
     fd6:	80 93 58 01 	sts	0x0158, r24
			}
			if (displayoff>=120)
     fda:	80 91 58 01 	lds	r24, 0x0158
     fde:	88 37       	cpi	r24, 0x78	; 120
     fe0:	28 f0       	brcs	.+10     	; 0xfec <main+0x40>
			{
				displaystat=false;
     fe2:	10 92 60 00 	sts	0x0060, r1
				displayoff=0;
     fe6:	10 92 58 01 	sts	0x0158, r1
				PORTC &= ~(1<<PC2); //Display ausschalten
     fea:	aa 98       	cbi	0x15, 2	; 21
     fec:	82 99       	sbic	0x10, 2	; 16
     fee:	12 c0       	rjmp	.+36     	; 0x1014 <main+0x68>
     ff0:	8f ef       	ldi	r24, 0xFF	; 255
     ff2:	93 eb       	ldi	r25, 0xB3	; 179
     ff4:	01 97       	sbiw	r24, 0x01	; 1
     ff6:	f1 f7       	brne	.-4      	; 0xff4 <main+0x48>
     ff8:	00 c0       	rjmp	.+0      	; 0xffa <main+0x4e>
     ffa:	00 00       	nop
     ffc:	8f ef       	ldi	r24, 0xFF	; 255
     ffe:	93 e2       	ldi	r25, 0x23	; 35
    1000:	01 97       	sbiw	r24, 0x01	; 1
    1002:	f1 f7       	brne	.-4      	; 0x1000 <main+0x54>
    1004:	00 c0       	rjmp	.+0      	; 0x1006 <main+0x5a>
    1006:	00 00       	nop
			}
			
		}
		if(debounce(&PIND,2))
    1008:	82 99       	sbic	0x10, 2	; 16
    100a:	04 c0       	rjmp	.+8      	; 0x1014 <main+0x68>
		{
			Wan=0;
    100c:	10 92 73 01 	sts	0x0173, r1
			lichteinaus(0);
    1010:	80 e0       	ldi	r24, 0x00	; 0
    1012:	3c d9       	rcall	.-3464   	; 0x28c <_Z11lichteinaush>
    1014:	84 99       	sbic	0x10, 4	; 16
    1016:	25 c0       	rjmp	.+74     	; 0x1062 <main+0xb6>
    1018:	8f ef       	ldi	r24, 0xFF	; 255
    101a:	93 eb       	ldi	r25, 0xB3	; 179
    101c:	01 97       	sbiw	r24, 0x01	; 1
    101e:	f1 f7       	brne	.-4      	; 0x101c <main+0x70>
    1020:	00 c0       	rjmp	.+0      	; 0x1022 <main+0x76>
    1022:	00 00       	nop
    1024:	8f ef       	ldi	r24, 0xFF	; 255
    1026:	93 e2       	ldi	r25, 0x23	; 35
    1028:	01 97       	sbiw	r24, 0x01	; 1
    102a:	f1 f7       	brne	.-4      	; 0x1028 <main+0x7c>
    102c:	00 c0       	rjmp	.+0      	; 0x102e <main+0x82>
    102e:	00 00       	nop
		}
		if (debounce(&PIND,PD4))
    1030:	84 99       	sbic	0x10, 4	; 16
    1032:	17 c0       	rjmp	.+46     	; 0x1062 <main+0xb6>
		{
			if (!displaystat)
    1034:	80 91 60 00 	lds	r24, 0x0060
    1038:	81 11       	cpse	r24, r1
    103a:	0c c0       	rjmp	.+24     	; 0x1054 <main+0xa8>
			{
				PORTC |= (1<<PC2); //display einsschalten und neue anzeige starten
    103c:	aa 9a       	sbi	0x15, 2	; 21
				lcd_init();
    103e:	c0 d8       	rcall	.-3712   	; 0x1c0 <_Z8lcd_initv>
				aus(1,3);
    1040:	63 e0       	ldi	r22, 0x03	; 3
    1042:	81 e0       	ldi	r24, 0x01	; 1
    1044:	6c da       	rcall	.-2856   	; 0x51e <_Z3aushh>
				aus(2,1);
    1046:	61 e0       	ldi	r22, 0x01	; 1
    1048:	82 e0       	ldi	r24, 0x02	; 2
    104a:	69 da       	rcall	.-2862   	; 0x51e <_Z3aushh>
				displaystat=true;
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	80 93 60 00 	sts	0x0060, r24
    1052:	07 c0       	rjmp	.+14     	; 0x1062 <main+0xb6>
			}
			else
			{
				menu();
    1054:	43 dd       	rcall	.-1402   	; 0xadc <_Z4menuv>
				aus(1,3);
    1056:	63 e0       	ldi	r22, 0x03	; 3
    1058:	81 e0       	ldi	r24, 0x01	; 1
    105a:	61 da       	rcall	.-2878   	; 0x51e <_Z3aushh>
				aus(2,1);
    105c:	61 e0       	ldi	r22, 0x01	; 1
    105e:	82 e0       	ldi	r24, 0x02	; 2
    1060:	5e da       	rcall	.-2884   	; 0x51e <_Z3aushh>
    1062:	83 99       	sbic	0x10, 3	; 16
    1064:	a4 cf       	rjmp	.-184    	; 0xfae <main+0x2>
    1066:	8f ef       	ldi	r24, 0xFF	; 255
    1068:	93 eb       	ldi	r25, 0xB3	; 179
    106a:	01 97       	sbiw	r24, 0x01	; 1
    106c:	f1 f7       	brne	.-4      	; 0x106a <main+0xbe>
    106e:	00 c0       	rjmp	.+0      	; 0x1070 <main+0xc4>
    1070:	00 00       	nop
    1072:	8f ef       	ldi	r24, 0xFF	; 255
    1074:	93 e2       	ldi	r25, 0x23	; 35
    1076:	01 97       	sbiw	r24, 0x01	; 1
    1078:	f1 f7       	brne	.-4      	; 0x1076 <main+0xca>
    107a:	00 c0       	rjmp	.+0      	; 0x107c <main+0xd0>
    107c:	00 00       	nop
			}
			
		}
		if (debounce(&PIND,PD3))
    107e:	83 99       	sbic	0x10, 3	; 16
    1080:	96 cf       	rjmp	.-212    	; 0xfae <main+0x2>
		{
			switch (lampenstaerke)
    1082:	80 91 61 00 	lds	r24, 0x0061
    1086:	82 30       	cpi	r24, 0x02	; 2
    1088:	31 f0       	breq	.+12     	; 0x1096 <main+0xea>
    108a:	83 30       	cpi	r24, 0x03	; 3
    108c:	39 f0       	breq	.+14     	; 0x109c <main+0xf0>
    108e:	81 30       	cpi	r24, 0x01	; 1
    1090:	39 f4       	brne	.+14     	; 0x10a0 <main+0xf4>
			{
				case 1:
					lichteinaus(1);
    1092:	fc d8       	rcall	.-3592   	; 0x28c <_Z11lichteinaush>
					break;
    1094:	05 c0       	rjmp	.+10     	; 0x10a0 <main+0xf4>
					
				case 2:
					lichteinaus(5);
    1096:	85 e0       	ldi	r24, 0x05	; 5
    1098:	f9 d8       	rcall	.-3598   	; 0x28c <_Z11lichteinaush>
					break;
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <main+0xf4>
					
				case 3:
					lichteinaus(4);
    109c:	84 e0       	ldi	r24, 0x04	; 4
    109e:	f6 d8       	rcall	.-3604   	; 0x28c <_Z11lichteinaush>
					break;
					
				default:
					break;
			}
			if ( PORTC& (1<<PC3) )
    10a0:	ab 9b       	sbis	0x15, 3	; 21
    10a2:	85 cf       	rjmp	.-246    	; 0xfae <main+0x2>
			{
				lichteinaus(0);
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	f2 d8       	rcall	.-3612   	; 0x28c <_Z11lichteinaush>
    10a8:	82 cf       	rjmp	.-252    	; 0xfae <main+0x2>

000010aa <__subsf3>:
    10aa:	50 58       	subi	r21, 0x80	; 128

000010ac <__addsf3>:
    10ac:	bb 27       	eor	r27, r27
    10ae:	aa 27       	eor	r26, r26
    10b0:	0e d0       	rcall	.+28     	; 0x10ce <__addsf3x>
    10b2:	1c c1       	rjmp	.+568    	; 0x12ec <__fp_round>
    10b4:	0d d1       	rcall	.+538    	; 0x12d0 <__fp_pscA>
    10b6:	30 f0       	brcs	.+12     	; 0x10c4 <__addsf3+0x18>
    10b8:	12 d1       	rcall	.+548    	; 0x12de <__fp_pscB>
    10ba:	20 f0       	brcs	.+8      	; 0x10c4 <__addsf3+0x18>
    10bc:	31 f4       	brne	.+12     	; 0x10ca <__addsf3+0x1e>
    10be:	9f 3f       	cpi	r25, 0xFF	; 255
    10c0:	11 f4       	brne	.+4      	; 0x10c6 <__addsf3+0x1a>
    10c2:	1e f4       	brtc	.+6      	; 0x10ca <__addsf3+0x1e>
    10c4:	02 c1       	rjmp	.+516    	; 0x12ca <__fp_nan>
    10c6:	0e f4       	brtc	.+2      	; 0x10ca <__addsf3+0x1e>
    10c8:	e0 95       	com	r30
    10ca:	e7 fb       	bst	r30, 7
    10cc:	f8 c0       	rjmp	.+496    	; 0x12be <__fp_inf>

000010ce <__addsf3x>:
    10ce:	e9 2f       	mov	r30, r25
    10d0:	1e d1       	rcall	.+572    	; 0x130e <__fp_split3>
    10d2:	80 f3       	brcs	.-32     	; 0x10b4 <__addsf3+0x8>
    10d4:	ba 17       	cp	r27, r26
    10d6:	62 07       	cpc	r22, r18
    10d8:	73 07       	cpc	r23, r19
    10da:	84 07       	cpc	r24, r20
    10dc:	95 07       	cpc	r25, r21
    10de:	18 f0       	brcs	.+6      	; 0x10e6 <__addsf3x+0x18>
    10e0:	71 f4       	brne	.+28     	; 0x10fe <__addsf3x+0x30>
    10e2:	9e f5       	brtc	.+102    	; 0x114a <__addsf3x+0x7c>
    10e4:	36 c1       	rjmp	.+620    	; 0x1352 <__fp_zero>
    10e6:	0e f4       	brtc	.+2      	; 0x10ea <__addsf3x+0x1c>
    10e8:	e0 95       	com	r30
    10ea:	0b 2e       	mov	r0, r27
    10ec:	ba 2f       	mov	r27, r26
    10ee:	a0 2d       	mov	r26, r0
    10f0:	0b 01       	movw	r0, r22
    10f2:	b9 01       	movw	r22, r18
    10f4:	90 01       	movw	r18, r0
    10f6:	0c 01       	movw	r0, r24
    10f8:	ca 01       	movw	r24, r20
    10fa:	a0 01       	movw	r20, r0
    10fc:	11 24       	eor	r1, r1
    10fe:	ff 27       	eor	r31, r31
    1100:	59 1b       	sub	r21, r25
    1102:	99 f0       	breq	.+38     	; 0x112a <__addsf3x+0x5c>
    1104:	59 3f       	cpi	r21, 0xF9	; 249
    1106:	50 f4       	brcc	.+20     	; 0x111c <__addsf3x+0x4e>
    1108:	50 3e       	cpi	r21, 0xE0	; 224
    110a:	68 f1       	brcs	.+90     	; 0x1166 <__addsf3x+0x98>
    110c:	1a 16       	cp	r1, r26
    110e:	f0 40       	sbci	r31, 0x00	; 0
    1110:	a2 2f       	mov	r26, r18
    1112:	23 2f       	mov	r18, r19
    1114:	34 2f       	mov	r19, r20
    1116:	44 27       	eor	r20, r20
    1118:	58 5f       	subi	r21, 0xF8	; 248
    111a:	f3 cf       	rjmp	.-26     	; 0x1102 <__addsf3x+0x34>
    111c:	46 95       	lsr	r20
    111e:	37 95       	ror	r19
    1120:	27 95       	ror	r18
    1122:	a7 95       	ror	r26
    1124:	f0 40       	sbci	r31, 0x00	; 0
    1126:	53 95       	inc	r21
    1128:	c9 f7       	brne	.-14     	; 0x111c <__addsf3x+0x4e>
    112a:	7e f4       	brtc	.+30     	; 0x114a <__addsf3x+0x7c>
    112c:	1f 16       	cp	r1, r31
    112e:	ba 0b       	sbc	r27, r26
    1130:	62 0b       	sbc	r22, r18
    1132:	73 0b       	sbc	r23, r19
    1134:	84 0b       	sbc	r24, r20
    1136:	ba f0       	brmi	.+46     	; 0x1166 <__addsf3x+0x98>
    1138:	91 50       	subi	r25, 0x01	; 1
    113a:	a1 f0       	breq	.+40     	; 0x1164 <__addsf3x+0x96>
    113c:	ff 0f       	add	r31, r31
    113e:	bb 1f       	adc	r27, r27
    1140:	66 1f       	adc	r22, r22
    1142:	77 1f       	adc	r23, r23
    1144:	88 1f       	adc	r24, r24
    1146:	c2 f7       	brpl	.-16     	; 0x1138 <__addsf3x+0x6a>
    1148:	0e c0       	rjmp	.+28     	; 0x1166 <__addsf3x+0x98>
    114a:	ba 0f       	add	r27, r26
    114c:	62 1f       	adc	r22, r18
    114e:	73 1f       	adc	r23, r19
    1150:	84 1f       	adc	r24, r20
    1152:	48 f4       	brcc	.+18     	; 0x1166 <__addsf3x+0x98>
    1154:	87 95       	ror	r24
    1156:	77 95       	ror	r23
    1158:	67 95       	ror	r22
    115a:	b7 95       	ror	r27
    115c:	f7 95       	ror	r31
    115e:	9e 3f       	cpi	r25, 0xFE	; 254
    1160:	08 f0       	brcs	.+2      	; 0x1164 <__addsf3x+0x96>
    1162:	b3 cf       	rjmp	.-154    	; 0x10ca <__addsf3+0x1e>
    1164:	93 95       	inc	r25
    1166:	88 0f       	add	r24, r24
    1168:	08 f0       	brcs	.+2      	; 0x116c <__addsf3x+0x9e>
    116a:	99 27       	eor	r25, r25
    116c:	ee 0f       	add	r30, r30
    116e:	97 95       	ror	r25
    1170:	87 95       	ror	r24
    1172:	08 95       	ret

00001174 <__divsf3>:
    1174:	0c d0       	rcall	.+24     	; 0x118e <__divsf3x>
    1176:	ba c0       	rjmp	.+372    	; 0x12ec <__fp_round>
    1178:	b2 d0       	rcall	.+356    	; 0x12de <__fp_pscB>
    117a:	40 f0       	brcs	.+16     	; 0x118c <__divsf3+0x18>
    117c:	a9 d0       	rcall	.+338    	; 0x12d0 <__fp_pscA>
    117e:	30 f0       	brcs	.+12     	; 0x118c <__divsf3+0x18>
    1180:	21 f4       	brne	.+8      	; 0x118a <__divsf3+0x16>
    1182:	5f 3f       	cpi	r21, 0xFF	; 255
    1184:	19 f0       	breq	.+6      	; 0x118c <__divsf3+0x18>
    1186:	9b c0       	rjmp	.+310    	; 0x12be <__fp_inf>
    1188:	51 11       	cpse	r21, r1
    118a:	e4 c0       	rjmp	.+456    	; 0x1354 <__fp_szero>
    118c:	9e c0       	rjmp	.+316    	; 0x12ca <__fp_nan>

0000118e <__divsf3x>:
    118e:	bf d0       	rcall	.+382    	; 0x130e <__fp_split3>
    1190:	98 f3       	brcs	.-26     	; 0x1178 <__divsf3+0x4>

00001192 <__divsf3_pse>:
    1192:	99 23       	and	r25, r25
    1194:	c9 f3       	breq	.-14     	; 0x1188 <__divsf3+0x14>
    1196:	55 23       	and	r21, r21
    1198:	b1 f3       	breq	.-20     	; 0x1186 <__divsf3+0x12>
    119a:	95 1b       	sub	r25, r21
    119c:	55 0b       	sbc	r21, r21
    119e:	bb 27       	eor	r27, r27
    11a0:	aa 27       	eor	r26, r26
    11a2:	62 17       	cp	r22, r18
    11a4:	73 07       	cpc	r23, r19
    11a6:	84 07       	cpc	r24, r20
    11a8:	38 f0       	brcs	.+14     	; 0x11b8 <__divsf3_pse+0x26>
    11aa:	9f 5f       	subi	r25, 0xFF	; 255
    11ac:	5f 4f       	sbci	r21, 0xFF	; 255
    11ae:	22 0f       	add	r18, r18
    11b0:	33 1f       	adc	r19, r19
    11b2:	44 1f       	adc	r20, r20
    11b4:	aa 1f       	adc	r26, r26
    11b6:	a9 f3       	breq	.-22     	; 0x11a2 <__divsf3_pse+0x10>
    11b8:	33 d0       	rcall	.+102    	; 0x1220 <__divsf3_pse+0x8e>
    11ba:	0e 2e       	mov	r0, r30
    11bc:	3a f0       	brmi	.+14     	; 0x11cc <__divsf3_pse+0x3a>
    11be:	e0 e8       	ldi	r30, 0x80	; 128
    11c0:	30 d0       	rcall	.+96     	; 0x1222 <__divsf3_pse+0x90>
    11c2:	91 50       	subi	r25, 0x01	; 1
    11c4:	50 40       	sbci	r21, 0x00	; 0
    11c6:	e6 95       	lsr	r30
    11c8:	00 1c       	adc	r0, r0
    11ca:	ca f7       	brpl	.-14     	; 0x11be <__divsf3_pse+0x2c>
    11cc:	29 d0       	rcall	.+82     	; 0x1220 <__divsf3_pse+0x8e>
    11ce:	fe 2f       	mov	r31, r30
    11d0:	27 d0       	rcall	.+78     	; 0x1220 <__divsf3_pse+0x8e>
    11d2:	66 0f       	add	r22, r22
    11d4:	77 1f       	adc	r23, r23
    11d6:	88 1f       	adc	r24, r24
    11d8:	bb 1f       	adc	r27, r27
    11da:	26 17       	cp	r18, r22
    11dc:	37 07       	cpc	r19, r23
    11de:	48 07       	cpc	r20, r24
    11e0:	ab 07       	cpc	r26, r27
    11e2:	b0 e8       	ldi	r27, 0x80	; 128
    11e4:	09 f0       	breq	.+2      	; 0x11e8 <__divsf3_pse+0x56>
    11e6:	bb 0b       	sbc	r27, r27
    11e8:	80 2d       	mov	r24, r0
    11ea:	bf 01       	movw	r22, r30
    11ec:	ff 27       	eor	r31, r31
    11ee:	93 58       	subi	r25, 0x83	; 131
    11f0:	5f 4f       	sbci	r21, 0xFF	; 255
    11f2:	2a f0       	brmi	.+10     	; 0x11fe <__divsf3_pse+0x6c>
    11f4:	9e 3f       	cpi	r25, 0xFE	; 254
    11f6:	51 05       	cpc	r21, r1
    11f8:	68 f0       	brcs	.+26     	; 0x1214 <__divsf3_pse+0x82>
    11fa:	61 c0       	rjmp	.+194    	; 0x12be <__fp_inf>
    11fc:	ab c0       	rjmp	.+342    	; 0x1354 <__fp_szero>
    11fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1200:	ec f3       	brlt	.-6      	; 0x11fc <__divsf3_pse+0x6a>
    1202:	98 3e       	cpi	r25, 0xE8	; 232
    1204:	dc f3       	brlt	.-10     	; 0x11fc <__divsf3_pse+0x6a>
    1206:	86 95       	lsr	r24
    1208:	77 95       	ror	r23
    120a:	67 95       	ror	r22
    120c:	b7 95       	ror	r27
    120e:	f7 95       	ror	r31
    1210:	9f 5f       	subi	r25, 0xFF	; 255
    1212:	c9 f7       	brne	.-14     	; 0x1206 <__divsf3_pse+0x74>
    1214:	88 0f       	add	r24, r24
    1216:	91 1d       	adc	r25, r1
    1218:	96 95       	lsr	r25
    121a:	87 95       	ror	r24
    121c:	97 f9       	bld	r25, 7
    121e:	08 95       	ret
    1220:	e1 e0       	ldi	r30, 0x01	; 1
    1222:	66 0f       	add	r22, r22
    1224:	77 1f       	adc	r23, r23
    1226:	88 1f       	adc	r24, r24
    1228:	bb 1f       	adc	r27, r27
    122a:	62 17       	cp	r22, r18
    122c:	73 07       	cpc	r23, r19
    122e:	84 07       	cpc	r24, r20
    1230:	ba 07       	cpc	r27, r26
    1232:	20 f0       	brcs	.+8      	; 0x123c <__divsf3_pse+0xaa>
    1234:	62 1b       	sub	r22, r18
    1236:	73 0b       	sbc	r23, r19
    1238:	84 0b       	sbc	r24, r20
    123a:	ba 0b       	sbc	r27, r26
    123c:	ee 1f       	adc	r30, r30
    123e:	88 f7       	brcc	.-30     	; 0x1222 <__divsf3_pse+0x90>
    1240:	e0 95       	com	r30
    1242:	08 95       	ret

00001244 <__floatunsisf>:
    1244:	e8 94       	clt
    1246:	09 c0       	rjmp	.+18     	; 0x125a <__floatsisf+0x12>

00001248 <__floatsisf>:
    1248:	97 fb       	bst	r25, 7
    124a:	3e f4       	brtc	.+14     	; 0x125a <__floatsisf+0x12>
    124c:	90 95       	com	r25
    124e:	80 95       	com	r24
    1250:	70 95       	com	r23
    1252:	61 95       	neg	r22
    1254:	7f 4f       	sbci	r23, 0xFF	; 255
    1256:	8f 4f       	sbci	r24, 0xFF	; 255
    1258:	9f 4f       	sbci	r25, 0xFF	; 255
    125a:	99 23       	and	r25, r25
    125c:	a9 f0       	breq	.+42     	; 0x1288 <__floatsisf+0x40>
    125e:	f9 2f       	mov	r31, r25
    1260:	96 e9       	ldi	r25, 0x96	; 150
    1262:	bb 27       	eor	r27, r27
    1264:	93 95       	inc	r25
    1266:	f6 95       	lsr	r31
    1268:	87 95       	ror	r24
    126a:	77 95       	ror	r23
    126c:	67 95       	ror	r22
    126e:	b7 95       	ror	r27
    1270:	f1 11       	cpse	r31, r1
    1272:	f8 cf       	rjmp	.-16     	; 0x1264 <__floatsisf+0x1c>
    1274:	fa f4       	brpl	.+62     	; 0x12b4 <__floatsisf+0x6c>
    1276:	bb 0f       	add	r27, r27
    1278:	11 f4       	brne	.+4      	; 0x127e <__floatsisf+0x36>
    127a:	60 ff       	sbrs	r22, 0
    127c:	1b c0       	rjmp	.+54     	; 0x12b4 <__floatsisf+0x6c>
    127e:	6f 5f       	subi	r22, 0xFF	; 255
    1280:	7f 4f       	sbci	r23, 0xFF	; 255
    1282:	8f 4f       	sbci	r24, 0xFF	; 255
    1284:	9f 4f       	sbci	r25, 0xFF	; 255
    1286:	16 c0       	rjmp	.+44     	; 0x12b4 <__floatsisf+0x6c>
    1288:	88 23       	and	r24, r24
    128a:	11 f0       	breq	.+4      	; 0x1290 <__floatsisf+0x48>
    128c:	96 e9       	ldi	r25, 0x96	; 150
    128e:	11 c0       	rjmp	.+34     	; 0x12b2 <__floatsisf+0x6a>
    1290:	77 23       	and	r23, r23
    1292:	21 f0       	breq	.+8      	; 0x129c <__floatsisf+0x54>
    1294:	9e e8       	ldi	r25, 0x8E	; 142
    1296:	87 2f       	mov	r24, r23
    1298:	76 2f       	mov	r23, r22
    129a:	05 c0       	rjmp	.+10     	; 0x12a6 <__floatsisf+0x5e>
    129c:	66 23       	and	r22, r22
    129e:	71 f0       	breq	.+28     	; 0x12bc <__floatsisf+0x74>
    12a0:	96 e8       	ldi	r25, 0x86	; 134
    12a2:	86 2f       	mov	r24, r22
    12a4:	70 e0       	ldi	r23, 0x00	; 0
    12a6:	60 e0       	ldi	r22, 0x00	; 0
    12a8:	2a f0       	brmi	.+10     	; 0x12b4 <__floatsisf+0x6c>
    12aa:	9a 95       	dec	r25
    12ac:	66 0f       	add	r22, r22
    12ae:	77 1f       	adc	r23, r23
    12b0:	88 1f       	adc	r24, r24
    12b2:	da f7       	brpl	.-10     	; 0x12aa <__floatsisf+0x62>
    12b4:	88 0f       	add	r24, r24
    12b6:	96 95       	lsr	r25
    12b8:	87 95       	ror	r24
    12ba:	97 f9       	bld	r25, 7
    12bc:	08 95       	ret

000012be <__fp_inf>:
    12be:	97 f9       	bld	r25, 7
    12c0:	9f 67       	ori	r25, 0x7F	; 127
    12c2:	80 e8       	ldi	r24, 0x80	; 128
    12c4:	70 e0       	ldi	r23, 0x00	; 0
    12c6:	60 e0       	ldi	r22, 0x00	; 0
    12c8:	08 95       	ret

000012ca <__fp_nan>:
    12ca:	9f ef       	ldi	r25, 0xFF	; 255
    12cc:	80 ec       	ldi	r24, 0xC0	; 192
    12ce:	08 95       	ret

000012d0 <__fp_pscA>:
    12d0:	00 24       	eor	r0, r0
    12d2:	0a 94       	dec	r0
    12d4:	16 16       	cp	r1, r22
    12d6:	17 06       	cpc	r1, r23
    12d8:	18 06       	cpc	r1, r24
    12da:	09 06       	cpc	r0, r25
    12dc:	08 95       	ret

000012de <__fp_pscB>:
    12de:	00 24       	eor	r0, r0
    12e0:	0a 94       	dec	r0
    12e2:	12 16       	cp	r1, r18
    12e4:	13 06       	cpc	r1, r19
    12e6:	14 06       	cpc	r1, r20
    12e8:	05 06       	cpc	r0, r21
    12ea:	08 95       	ret

000012ec <__fp_round>:
    12ec:	09 2e       	mov	r0, r25
    12ee:	03 94       	inc	r0
    12f0:	00 0c       	add	r0, r0
    12f2:	11 f4       	brne	.+4      	; 0x12f8 <__fp_round+0xc>
    12f4:	88 23       	and	r24, r24
    12f6:	52 f0       	brmi	.+20     	; 0x130c <__fp_round+0x20>
    12f8:	bb 0f       	add	r27, r27
    12fa:	40 f4       	brcc	.+16     	; 0x130c <__fp_round+0x20>
    12fc:	bf 2b       	or	r27, r31
    12fe:	11 f4       	brne	.+4      	; 0x1304 <__fp_round+0x18>
    1300:	60 ff       	sbrs	r22, 0
    1302:	04 c0       	rjmp	.+8      	; 0x130c <__fp_round+0x20>
    1304:	6f 5f       	subi	r22, 0xFF	; 255
    1306:	7f 4f       	sbci	r23, 0xFF	; 255
    1308:	8f 4f       	sbci	r24, 0xFF	; 255
    130a:	9f 4f       	sbci	r25, 0xFF	; 255
    130c:	08 95       	ret

0000130e <__fp_split3>:
    130e:	57 fd       	sbrc	r21, 7
    1310:	90 58       	subi	r25, 0x80	; 128
    1312:	44 0f       	add	r20, r20
    1314:	55 1f       	adc	r21, r21
    1316:	59 f0       	breq	.+22     	; 0x132e <__fp_splitA+0x10>
    1318:	5f 3f       	cpi	r21, 0xFF	; 255
    131a:	71 f0       	breq	.+28     	; 0x1338 <__fp_splitA+0x1a>
    131c:	47 95       	ror	r20

0000131e <__fp_splitA>:
    131e:	88 0f       	add	r24, r24
    1320:	97 fb       	bst	r25, 7
    1322:	99 1f       	adc	r25, r25
    1324:	61 f0       	breq	.+24     	; 0x133e <__fp_splitA+0x20>
    1326:	9f 3f       	cpi	r25, 0xFF	; 255
    1328:	79 f0       	breq	.+30     	; 0x1348 <__fp_splitA+0x2a>
    132a:	87 95       	ror	r24
    132c:	08 95       	ret
    132e:	12 16       	cp	r1, r18
    1330:	13 06       	cpc	r1, r19
    1332:	14 06       	cpc	r1, r20
    1334:	55 1f       	adc	r21, r21
    1336:	f2 cf       	rjmp	.-28     	; 0x131c <__fp_split3+0xe>
    1338:	46 95       	lsr	r20
    133a:	f1 df       	rcall	.-30     	; 0x131e <__fp_splitA>
    133c:	08 c0       	rjmp	.+16     	; 0x134e <__fp_splitA+0x30>
    133e:	16 16       	cp	r1, r22
    1340:	17 06       	cpc	r1, r23
    1342:	18 06       	cpc	r1, r24
    1344:	99 1f       	adc	r25, r25
    1346:	f1 cf       	rjmp	.-30     	; 0x132a <__fp_splitA+0xc>
    1348:	86 95       	lsr	r24
    134a:	71 05       	cpc	r23, r1
    134c:	61 05       	cpc	r22, r1
    134e:	08 94       	sec
    1350:	08 95       	ret

00001352 <__fp_zero>:
    1352:	e8 94       	clt

00001354 <__fp_szero>:
    1354:	bb 27       	eor	r27, r27
    1356:	66 27       	eor	r22, r22
    1358:	77 27       	eor	r23, r23
    135a:	cb 01       	movw	r24, r22
    135c:	97 f9       	bld	r25, 7
    135e:	08 95       	ret

00001360 <__mulsf3>:
    1360:	0b d0       	rcall	.+22     	; 0x1378 <__mulsf3x>
    1362:	c4 cf       	rjmp	.-120    	; 0x12ec <__fp_round>
    1364:	b5 df       	rcall	.-150    	; 0x12d0 <__fp_pscA>
    1366:	28 f0       	brcs	.+10     	; 0x1372 <__mulsf3+0x12>
    1368:	ba df       	rcall	.-140    	; 0x12de <__fp_pscB>
    136a:	18 f0       	brcs	.+6      	; 0x1372 <__mulsf3+0x12>
    136c:	95 23       	and	r25, r21
    136e:	09 f0       	breq	.+2      	; 0x1372 <__mulsf3+0x12>
    1370:	a6 cf       	rjmp	.-180    	; 0x12be <__fp_inf>
    1372:	ab cf       	rjmp	.-170    	; 0x12ca <__fp_nan>
    1374:	11 24       	eor	r1, r1
    1376:	ee cf       	rjmp	.-36     	; 0x1354 <__fp_szero>

00001378 <__mulsf3x>:
    1378:	ca df       	rcall	.-108    	; 0x130e <__fp_split3>
    137a:	a0 f3       	brcs	.-24     	; 0x1364 <__mulsf3+0x4>

0000137c <__mulsf3_pse>:
    137c:	95 9f       	mul	r25, r21
    137e:	d1 f3       	breq	.-12     	; 0x1374 <__mulsf3+0x14>
    1380:	95 0f       	add	r25, r21
    1382:	50 e0       	ldi	r21, 0x00	; 0
    1384:	55 1f       	adc	r21, r21
    1386:	62 9f       	mul	r22, r18
    1388:	f0 01       	movw	r30, r0
    138a:	72 9f       	mul	r23, r18
    138c:	bb 27       	eor	r27, r27
    138e:	f0 0d       	add	r31, r0
    1390:	b1 1d       	adc	r27, r1
    1392:	63 9f       	mul	r22, r19
    1394:	aa 27       	eor	r26, r26
    1396:	f0 0d       	add	r31, r0
    1398:	b1 1d       	adc	r27, r1
    139a:	aa 1f       	adc	r26, r26
    139c:	64 9f       	mul	r22, r20
    139e:	66 27       	eor	r22, r22
    13a0:	b0 0d       	add	r27, r0
    13a2:	a1 1d       	adc	r26, r1
    13a4:	66 1f       	adc	r22, r22
    13a6:	82 9f       	mul	r24, r18
    13a8:	22 27       	eor	r18, r18
    13aa:	b0 0d       	add	r27, r0
    13ac:	a1 1d       	adc	r26, r1
    13ae:	62 1f       	adc	r22, r18
    13b0:	73 9f       	mul	r23, r19
    13b2:	b0 0d       	add	r27, r0
    13b4:	a1 1d       	adc	r26, r1
    13b6:	62 1f       	adc	r22, r18
    13b8:	83 9f       	mul	r24, r19
    13ba:	a0 0d       	add	r26, r0
    13bc:	61 1d       	adc	r22, r1
    13be:	22 1f       	adc	r18, r18
    13c0:	74 9f       	mul	r23, r20
    13c2:	33 27       	eor	r19, r19
    13c4:	a0 0d       	add	r26, r0
    13c6:	61 1d       	adc	r22, r1
    13c8:	23 1f       	adc	r18, r19
    13ca:	84 9f       	mul	r24, r20
    13cc:	60 0d       	add	r22, r0
    13ce:	21 1d       	adc	r18, r1
    13d0:	82 2f       	mov	r24, r18
    13d2:	76 2f       	mov	r23, r22
    13d4:	6a 2f       	mov	r22, r26
    13d6:	11 24       	eor	r1, r1
    13d8:	9f 57       	subi	r25, 0x7F	; 127
    13da:	50 40       	sbci	r21, 0x00	; 0
    13dc:	8a f0       	brmi	.+34     	; 0x1400 <__mulsf3_pse+0x84>
    13de:	e1 f0       	breq	.+56     	; 0x1418 <__mulsf3_pse+0x9c>
    13e0:	88 23       	and	r24, r24
    13e2:	4a f0       	brmi	.+18     	; 0x13f6 <__mulsf3_pse+0x7a>
    13e4:	ee 0f       	add	r30, r30
    13e6:	ff 1f       	adc	r31, r31
    13e8:	bb 1f       	adc	r27, r27
    13ea:	66 1f       	adc	r22, r22
    13ec:	77 1f       	adc	r23, r23
    13ee:	88 1f       	adc	r24, r24
    13f0:	91 50       	subi	r25, 0x01	; 1
    13f2:	50 40       	sbci	r21, 0x00	; 0
    13f4:	a9 f7       	brne	.-22     	; 0x13e0 <__mulsf3_pse+0x64>
    13f6:	9e 3f       	cpi	r25, 0xFE	; 254
    13f8:	51 05       	cpc	r21, r1
    13fa:	70 f0       	brcs	.+28     	; 0x1418 <__mulsf3_pse+0x9c>
    13fc:	60 cf       	rjmp	.-320    	; 0x12be <__fp_inf>
    13fe:	aa cf       	rjmp	.-172    	; 0x1354 <__fp_szero>
    1400:	5f 3f       	cpi	r21, 0xFF	; 255
    1402:	ec f3       	brlt	.-6      	; 0x13fe <__mulsf3_pse+0x82>
    1404:	98 3e       	cpi	r25, 0xE8	; 232
    1406:	dc f3       	brlt	.-10     	; 0x13fe <__mulsf3_pse+0x82>
    1408:	86 95       	lsr	r24
    140a:	77 95       	ror	r23
    140c:	67 95       	ror	r22
    140e:	b7 95       	ror	r27
    1410:	f7 95       	ror	r31
    1412:	e7 95       	ror	r30
    1414:	9f 5f       	subi	r25, 0xFF	; 255
    1416:	c1 f7       	brne	.-16     	; 0x1408 <__mulsf3_pse+0x8c>
    1418:	fe 2b       	or	r31, r30
    141a:	88 0f       	add	r24, r24
    141c:	91 1d       	adc	r25, r1
    141e:	96 95       	lsr	r25
    1420:	87 95       	ror	r24
    1422:	97 f9       	bld	r25, 7
    1424:	08 95       	ret

00001426 <dtostrf>:
    1426:	ef 92       	push	r14
    1428:	0f 93       	push	r16
    142a:	1f 93       	push	r17
    142c:	cf 93       	push	r28
    142e:	c0 2f       	mov	r28, r16
    1430:	47 ff       	sbrs	r20, 7
    1432:	02 c0       	rjmp	.+4      	; 0x1438 <dtostrf+0x12>
    1434:	34 e1       	ldi	r19, 0x14	; 20
    1436:	01 c0       	rjmp	.+2      	; 0x143a <dtostrf+0x14>
    1438:	34 e0       	ldi	r19, 0x04	; 4
    143a:	e4 2f       	mov	r30, r20
    143c:	ff 27       	eor	r31, r31
    143e:	e7 fd       	sbrc	r30, 7
    1440:	f0 95       	com	r31
    1442:	f7 ff       	sbrs	r31, 7
    1444:	03 c0       	rjmp	.+6      	; 0x144c <dtostrf+0x26>
    1446:	f1 95       	neg	r31
    1448:	e1 95       	neg	r30
    144a:	f1 09       	sbc	r31, r1
    144c:	e3 2e       	mov	r14, r19
    144e:	02 2f       	mov	r16, r18
    1450:	2e 2f       	mov	r18, r30
    1452:	4c 2f       	mov	r20, r28
    1454:	51 2f       	mov	r21, r17
    1456:	26 d0       	rcall	.+76     	; 0x14a4 <dtoa_prf>
    1458:	8c 2f       	mov	r24, r28
    145a:	91 2f       	mov	r25, r17
    145c:	cf 91       	pop	r28
    145e:	1f 91       	pop	r17
    1460:	0f 91       	pop	r16
    1462:	ef 90       	pop	r14
    1464:	08 95       	ret

00001466 <itoa>:
    1466:	fb 01       	movw	r30, r22
    1468:	9f 01       	movw	r18, r30
    146a:	e8 94       	clt
    146c:	42 30       	cpi	r20, 0x02	; 2
    146e:	bc f0       	brlt	.+46     	; 0x149e <itoa+0x38>
    1470:	45 32       	cpi	r20, 0x25	; 37
    1472:	ac f4       	brge	.+42     	; 0x149e <itoa+0x38>
    1474:	4a 30       	cpi	r20, 0x0A	; 10
    1476:	29 f4       	brne	.+10     	; 0x1482 <itoa+0x1c>
    1478:	97 fb       	bst	r25, 7
    147a:	1e f4       	brtc	.+6      	; 0x1482 <itoa+0x1c>
    147c:	90 95       	com	r25
    147e:	81 95       	neg	r24
    1480:	9f 4f       	sbci	r25, 0xFF	; 255
    1482:	64 2f       	mov	r22, r20
    1484:	77 27       	eor	r23, r23
    1486:	72 d2       	rcall	.+1252   	; 0x196c <__udivmodhi4>
    1488:	80 5d       	subi	r24, 0xD0	; 208
    148a:	8a 33       	cpi	r24, 0x3A	; 58
    148c:	0c f0       	brlt	.+2      	; 0x1490 <itoa+0x2a>
    148e:	89 5d       	subi	r24, 0xD9	; 217
    1490:	81 93       	st	Z+, r24
    1492:	cb 01       	movw	r24, r22
    1494:	00 97       	sbiw	r24, 0x00	; 0
    1496:	a9 f7       	brne	.-22     	; 0x1482 <itoa+0x1c>
    1498:	16 f4       	brtc	.+4      	; 0x149e <itoa+0x38>
    149a:	5d e2       	ldi	r21, 0x2D	; 45
    149c:	51 93       	st	Z+, r21
    149e:	10 82       	st	Z, r1
    14a0:	c9 01       	movw	r24, r18
    14a2:	54 c2       	rjmp	.+1192   	; 0x194c <strrev>

000014a4 <dtoa_prf>:
    14a4:	6f 92       	push	r6
    14a6:	7f 92       	push	r7
    14a8:	9f 92       	push	r9
    14aa:	af 92       	push	r10
    14ac:	bf 92       	push	r11
    14ae:	cf 92       	push	r12
    14b0:	df 92       	push	r13
    14b2:	ef 92       	push	r14
    14b4:	ff 92       	push	r15
    14b6:	0f 93       	push	r16
    14b8:	1f 93       	push	r17
    14ba:	cf 93       	push	r28
    14bc:	df 93       	push	r29
    14be:	cd b7       	in	r28, 0x3d	; 61
    14c0:	de b7       	in	r29, 0x3e	; 62
    14c2:	29 97       	sbiw	r28, 0x09	; 9
    14c4:	0f b6       	in	r0, 0x3f	; 63
    14c6:	f8 94       	cli
    14c8:	de bf       	out	0x3e, r29	; 62
    14ca:	0f be       	out	0x3f, r0	; 63
    14cc:	cd bf       	out	0x3d, r28	; 61
    14ce:	6a 01       	movw	r12, r20
    14d0:	b2 2e       	mov	r11, r18
    14d2:	10 2f       	mov	r17, r16
    14d4:	0c 33       	cpi	r16, 0x3C	; 60
    14d6:	18 f4       	brcc	.+6      	; 0x14de <dtoa_prf+0x3a>
    14d8:	f0 2e       	mov	r15, r16
    14da:	f3 94       	inc	r15
    14dc:	02 c0       	rjmp	.+4      	; 0x14e2 <dtoa_prf+0x3e>
    14de:	5c e3       	ldi	r21, 0x3C	; 60
    14e0:	f5 2e       	mov	r15, r21
    14e2:	0f 2d       	mov	r16, r15
    14e4:	27 e0       	ldi	r18, 0x07	; 7
    14e6:	ae 01       	movw	r20, r28
    14e8:	4f 5f       	subi	r20, 0xFF	; 255
    14ea:	5f 4f       	sbci	r21, 0xFF	; 255
    14ec:	57 d1       	rcall	.+686    	; 0x179c <__ftoa_engine>
    14ee:	79 81       	ldd	r23, Y+1	; 0x01
    14f0:	27 2f       	mov	r18, r23
    14f2:	29 70       	andi	r18, 0x09	; 9
    14f4:	21 30       	cpi	r18, 0x01	; 1
    14f6:	31 f0       	breq	.+12     	; 0x1504 <dtoa_prf+0x60>
    14f8:	e1 fc       	sbrc	r14, 1
    14fa:	06 c0       	rjmp	.+12     	; 0x1508 <dtoa_prf+0x64>
    14fc:	e0 fe       	sbrs	r14, 0
    14fe:	06 c0       	rjmp	.+12     	; 0x150c <dtoa_prf+0x68>
    1500:	60 e2       	ldi	r22, 0x20	; 32
    1502:	05 c0       	rjmp	.+10     	; 0x150e <dtoa_prf+0x6a>
    1504:	6d e2       	ldi	r22, 0x2D	; 45
    1506:	03 c0       	rjmp	.+6      	; 0x150e <dtoa_prf+0x6a>
    1508:	6b e2       	ldi	r22, 0x2B	; 43
    150a:	01 c0       	rjmp	.+2      	; 0x150e <dtoa_prf+0x6a>
    150c:	60 e0       	ldi	r22, 0x00	; 0
    150e:	73 ff       	sbrs	r23, 3
    1510:	3d c0       	rjmp	.+122    	; 0x158c <dtoa_prf+0xe8>
    1512:	66 23       	and	r22, r22
    1514:	11 f0       	breq	.+4      	; 0x151a <dtoa_prf+0x76>
    1516:	84 e0       	ldi	r24, 0x04	; 4
    1518:	01 c0       	rjmp	.+2      	; 0x151c <dtoa_prf+0x78>
    151a:	83 e0       	ldi	r24, 0x03	; 3
    151c:	8b 15       	cp	r24, r11
    151e:	10 f4       	brcc	.+4      	; 0x1524 <dtoa_prf+0x80>
    1520:	b8 1a       	sub	r11, r24
    1522:	01 c0       	rjmp	.+2      	; 0x1526 <dtoa_prf+0x82>
    1524:	b1 2c       	mov	r11, r1
    1526:	e4 fc       	sbrc	r14, 4
    1528:	0b c0       	rjmp	.+22     	; 0x1540 <dtoa_prf+0x9c>
    152a:	8b 2d       	mov	r24, r11
    152c:	f6 01       	movw	r30, r12
    152e:	90 e2       	ldi	r25, 0x20	; 32
    1530:	02 c0       	rjmp	.+4      	; 0x1536 <dtoa_prf+0x92>
    1532:	91 93       	st	Z+, r25
    1534:	81 50       	subi	r24, 0x01	; 1
    1536:	81 11       	cpse	r24, r1
    1538:	fc cf       	rjmp	.-8      	; 0x1532 <dtoa_prf+0x8e>
    153a:	cb 0c       	add	r12, r11
    153c:	d1 1c       	adc	r13, r1
    153e:	b1 2c       	mov	r11, r1
    1540:	66 23       	and	r22, r22
    1542:	19 f0       	breq	.+6      	; 0x154a <dtoa_prf+0xa6>
    1544:	d6 01       	movw	r26, r12
    1546:	6d 93       	st	X+, r22
    1548:	6d 01       	movw	r12, r26
    154a:	e2 fe       	sbrs	r14, 2
    154c:	0a c0       	rjmp	.+20     	; 0x1562 <dtoa_prf+0xbe>
    154e:	8e e4       	ldi	r24, 0x4E	; 78
    1550:	f6 01       	movw	r30, r12
    1552:	80 83       	st	Z, r24
    1554:	91 e4       	ldi	r25, 0x41	; 65
    1556:	91 83       	std	Z+1, r25	; 0x01
    1558:	82 83       	std	Z+2, r24	; 0x02
    155a:	f3 e0       	ldi	r31, 0x03	; 3
    155c:	cf 0e       	add	r12, r31
    155e:	d1 1c       	adc	r13, r1
    1560:	0c c0       	rjmp	.+24     	; 0x157a <dtoa_prf+0xd6>
    1562:	8e e6       	ldi	r24, 0x6E	; 110
    1564:	d6 01       	movw	r26, r12
    1566:	8c 93       	st	X, r24
    1568:	91 e6       	ldi	r25, 0x61	; 97
    156a:	11 96       	adiw	r26, 0x01	; 1
    156c:	9c 93       	st	X, r25
    156e:	11 97       	sbiw	r26, 0x01	; 1
    1570:	12 96       	adiw	r26, 0x02	; 2
    1572:	8c 93       	st	X, r24
    1574:	b3 e0       	ldi	r27, 0x03	; 3
    1576:	cb 0e       	add	r12, r27
    1578:	d1 1c       	adc	r13, r1
    157a:	8b 2d       	mov	r24, r11
    157c:	f6 01       	movw	r30, r12
    157e:	90 e2       	ldi	r25, 0x20	; 32
    1580:	02 c0       	rjmp	.+4      	; 0x1586 <dtoa_prf+0xe2>
    1582:	91 93       	st	Z+, r25
    1584:	81 50       	subi	r24, 0x01	; 1
    1586:	81 11       	cpse	r24, r1
    1588:	fc cf       	rjmp	.-8      	; 0x1582 <dtoa_prf+0xde>
    158a:	40 c0       	rjmp	.+128    	; 0x160c <dtoa_prf+0x168>
    158c:	72 ff       	sbrs	r23, 2
    158e:	45 c0       	rjmp	.+138    	; 0x161a <dtoa_prf+0x176>
    1590:	66 23       	and	r22, r22
    1592:	11 f0       	breq	.+4      	; 0x1598 <dtoa_prf+0xf4>
    1594:	84 e0       	ldi	r24, 0x04	; 4
    1596:	01 c0       	rjmp	.+2      	; 0x159a <dtoa_prf+0xf6>
    1598:	83 e0       	ldi	r24, 0x03	; 3
    159a:	8b 15       	cp	r24, r11
    159c:	10 f4       	brcc	.+4      	; 0x15a2 <dtoa_prf+0xfe>
    159e:	b8 1a       	sub	r11, r24
    15a0:	01 c0       	rjmp	.+2      	; 0x15a4 <dtoa_prf+0x100>
    15a2:	b1 2c       	mov	r11, r1
    15a4:	e4 fc       	sbrc	r14, 4
    15a6:	0b c0       	rjmp	.+22     	; 0x15be <dtoa_prf+0x11a>
    15a8:	8b 2d       	mov	r24, r11
    15aa:	f6 01       	movw	r30, r12
    15ac:	90 e2       	ldi	r25, 0x20	; 32
    15ae:	02 c0       	rjmp	.+4      	; 0x15b4 <dtoa_prf+0x110>
    15b0:	91 93       	st	Z+, r25
    15b2:	81 50       	subi	r24, 0x01	; 1
    15b4:	81 11       	cpse	r24, r1
    15b6:	fc cf       	rjmp	.-8      	; 0x15b0 <dtoa_prf+0x10c>
    15b8:	cb 0c       	add	r12, r11
    15ba:	d1 1c       	adc	r13, r1
    15bc:	b1 2c       	mov	r11, r1
    15be:	66 23       	and	r22, r22
    15c0:	19 f0       	breq	.+6      	; 0x15c8 <dtoa_prf+0x124>
    15c2:	f6 01       	movw	r30, r12
    15c4:	61 93       	st	Z+, r22
    15c6:	6f 01       	movw	r12, r30
    15c8:	e2 fe       	sbrs	r14, 2
    15ca:	0e c0       	rjmp	.+28     	; 0x15e8 <dtoa_prf+0x144>
    15cc:	89 e4       	ldi	r24, 0x49	; 73
    15ce:	d6 01       	movw	r26, r12
    15d0:	8c 93       	st	X, r24
    15d2:	8e e4       	ldi	r24, 0x4E	; 78
    15d4:	11 96       	adiw	r26, 0x01	; 1
    15d6:	8c 93       	st	X, r24
    15d8:	11 97       	sbiw	r26, 0x01	; 1
    15da:	86 e4       	ldi	r24, 0x46	; 70
    15dc:	12 96       	adiw	r26, 0x02	; 2
    15de:	8c 93       	st	X, r24
    15e0:	b3 e0       	ldi	r27, 0x03	; 3
    15e2:	cb 0e       	add	r12, r27
    15e4:	d1 1c       	adc	r13, r1
    15e6:	0a c0       	rjmp	.+20     	; 0x15fc <dtoa_prf+0x158>
    15e8:	89 e6       	ldi	r24, 0x69	; 105
    15ea:	f6 01       	movw	r30, r12
    15ec:	80 83       	st	Z, r24
    15ee:	8e e6       	ldi	r24, 0x6E	; 110
    15f0:	81 83       	std	Z+1, r24	; 0x01
    15f2:	86 e6       	ldi	r24, 0x66	; 102
    15f4:	82 83       	std	Z+2, r24	; 0x02
    15f6:	f3 e0       	ldi	r31, 0x03	; 3
    15f8:	cf 0e       	add	r12, r31
    15fa:	d1 1c       	adc	r13, r1
    15fc:	8b 2d       	mov	r24, r11
    15fe:	f6 01       	movw	r30, r12
    1600:	90 e2       	ldi	r25, 0x20	; 32
    1602:	02 c0       	rjmp	.+4      	; 0x1608 <dtoa_prf+0x164>
    1604:	91 93       	st	Z+, r25
    1606:	81 50       	subi	r24, 0x01	; 1
    1608:	81 11       	cpse	r24, r1
    160a:	fc cf       	rjmp	.-8      	; 0x1604 <dtoa_prf+0x160>
    160c:	f6 01       	movw	r30, r12
    160e:	eb 0d       	add	r30, r11
    1610:	f1 1d       	adc	r31, r1
    1612:	10 82       	st	Z, r1
    1614:	2e ef       	ldi	r18, 0xFE	; 254
    1616:	3f ef       	ldi	r19, 0xFF	; 255
    1618:	ac c0       	rjmp	.+344    	; 0x1772 <dtoa_prf+0x2ce>
    161a:	a1 e0       	ldi	r26, 0x01	; 1
    161c:	61 11       	cpse	r22, r1
    161e:	01 c0       	rjmp	.+2      	; 0x1622 <dtoa_prf+0x17e>
    1620:	a0 e0       	ldi	r26, 0x00	; 0
    1622:	4a 2f       	mov	r20, r26
    1624:	50 e0       	ldi	r21, 0x00	; 0
    1626:	18 16       	cp	r1, r24
    1628:	19 06       	cpc	r1, r25
    162a:	24 f4       	brge	.+8      	; 0x1634 <dtoa_prf+0x190>
    162c:	9c 01       	movw	r18, r24
    162e:	2f 5f       	subi	r18, 0xFF	; 255
    1630:	3f 4f       	sbci	r19, 0xFF	; 255
    1632:	02 c0       	rjmp	.+4      	; 0x1638 <dtoa_prf+0x194>
    1634:	21 e0       	ldi	r18, 0x01	; 1
    1636:	30 e0       	ldi	r19, 0x00	; 0
    1638:	24 0f       	add	r18, r20
    163a:	35 1f       	adc	r19, r21
    163c:	11 23       	and	r17, r17
    163e:	29 f0       	breq	.+10     	; 0x164a <dtoa_prf+0x1a6>
    1640:	41 2f       	mov	r20, r17
    1642:	50 e0       	ldi	r21, 0x00	; 0
    1644:	4f 5f       	subi	r20, 0xFF	; 255
    1646:	5f 4f       	sbci	r21, 0xFF	; 255
    1648:	02 c0       	rjmp	.+4      	; 0x164e <dtoa_prf+0x1aa>
    164a:	40 e0       	ldi	r20, 0x00	; 0
    164c:	50 e0       	ldi	r21, 0x00	; 0
    164e:	42 0f       	add	r20, r18
    1650:	53 1f       	adc	r21, r19
    1652:	2b 2d       	mov	r18, r11
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	42 17       	cp	r20, r18
    1658:	53 07       	cpc	r21, r19
    165a:	14 f4       	brge	.+4      	; 0x1660 <dtoa_prf+0x1bc>
    165c:	b4 1a       	sub	r11, r20
    165e:	01 c0       	rjmp	.+2      	; 0x1662 <dtoa_prf+0x1be>
    1660:	b1 2c       	mov	r11, r1
    1662:	3e 2d       	mov	r19, r14
    1664:	30 71       	andi	r19, 0x10	; 16
    1666:	e4 fc       	sbrc	r14, 4
    1668:	0d c0       	rjmp	.+26     	; 0x1684 <dtoa_prf+0x1e0>
    166a:	e3 fc       	sbrc	r14, 3
    166c:	0b c0       	rjmp	.+22     	; 0x1684 <dtoa_prf+0x1e0>
    166e:	2b 2d       	mov	r18, r11
    1670:	f6 01       	movw	r30, r12
    1672:	40 e2       	ldi	r20, 0x20	; 32
    1674:	02 c0       	rjmp	.+4      	; 0x167a <dtoa_prf+0x1d6>
    1676:	41 93       	st	Z+, r20
    1678:	21 50       	subi	r18, 0x01	; 1
    167a:	21 11       	cpse	r18, r1
    167c:	fc cf       	rjmp	.-8      	; 0x1676 <dtoa_prf+0x1d2>
    167e:	cb 0c       	add	r12, r11
    1680:	d1 1c       	adc	r13, r1
    1682:	b1 2c       	mov	r11, r1
    1684:	aa 23       	and	r26, r26
    1686:	19 f0       	breq	.+6      	; 0x168e <dtoa_prf+0x1ea>
    1688:	d6 01       	movw	r26, r12
    168a:	6d 93       	st	X+, r22
    168c:	6d 01       	movw	r12, r26
    168e:	31 11       	cpse	r19, r1
    1690:	0b c0       	rjmp	.+22     	; 0x16a8 <dtoa_prf+0x204>
    1692:	2b 2d       	mov	r18, r11
    1694:	f6 01       	movw	r30, r12
    1696:	30 e3       	ldi	r19, 0x30	; 48
    1698:	02 c0       	rjmp	.+4      	; 0x169e <dtoa_prf+0x1fa>
    169a:	31 93       	st	Z+, r19
    169c:	21 50       	subi	r18, 0x01	; 1
    169e:	21 11       	cpse	r18, r1
    16a0:	fc cf       	rjmp	.-8      	; 0x169a <dtoa_prf+0x1f6>
    16a2:	cb 0c       	add	r12, r11
    16a4:	d1 1c       	adc	r13, r1
    16a6:	b1 2c       	mov	r11, r1
    16a8:	f8 0e       	add	r15, r24
    16aa:	0a 81       	ldd	r16, Y+2	; 0x02
    16ac:	40 e1       	ldi	r20, 0x10	; 16
    16ae:	a4 2e       	mov	r10, r20
    16b0:	a7 22       	and	r10, r23
    16b2:	74 ff       	sbrs	r23, 4
    16b4:	03 c0       	rjmp	.+6      	; 0x16bc <dtoa_prf+0x218>
    16b6:	01 33       	cpi	r16, 0x31	; 49
    16b8:	09 f4       	brne	.+2      	; 0x16bc <dtoa_prf+0x218>
    16ba:	fa 94       	dec	r15
    16bc:	1f 14       	cp	r1, r15
    16be:	2c f4       	brge	.+10     	; 0x16ca <dtoa_prf+0x226>
    16c0:	2f 2d       	mov	r18, r15
    16c2:	29 30       	cpi	r18, 0x09	; 9
    16c4:	18 f0       	brcs	.+6      	; 0x16cc <dtoa_prf+0x228>
    16c6:	28 e0       	ldi	r18, 0x08	; 8
    16c8:	01 c0       	rjmp	.+2      	; 0x16cc <dtoa_prf+0x228>
    16ca:	21 e0       	ldi	r18, 0x01	; 1
    16cc:	ac 01       	movw	r20, r24
    16ce:	97 ff       	sbrs	r25, 7
    16d0:	02 c0       	rjmp	.+4      	; 0x16d6 <dtoa_prf+0x232>
    16d2:	40 e0       	ldi	r20, 0x00	; 0
    16d4:	50 e0       	ldi	r21, 0x00	; 0
    16d6:	60 e0       	ldi	r22, 0x00	; 0
    16d8:	70 e0       	ldi	r23, 0x00	; 0
    16da:	3e e2       	ldi	r19, 0x2E	; 46
    16dc:	93 2e       	mov	r9, r19
    16de:	fc 01       	movw	r30, r24
    16e0:	e2 1b       	sub	r30, r18
    16e2:	f1 09       	sbc	r31, r1
    16e4:	9f 01       	movw	r18, r30
    16e6:	dc 01       	movw	r26, r24
    16e8:	a4 1b       	sub	r26, r20
    16ea:	b5 0b       	sbc	r27, r21
    16ec:	fe 01       	movw	r30, r28
    16ee:	31 96       	adiw	r30, 0x01	; 1
    16f0:	ea 0f       	add	r30, r26
    16f2:	fb 1f       	adc	r31, r27
    16f4:	a1 2f       	mov	r26, r17
    16f6:	b0 e0       	ldi	r27, 0x00	; 0
    16f8:	66 24       	eor	r6, r6
    16fa:	77 24       	eor	r7, r7
    16fc:	6a 1a       	sub	r6, r26
    16fe:	7b 0a       	sbc	r7, r27
    1700:	4f 3f       	cpi	r20, 0xFF	; 255
    1702:	1f ef       	ldi	r17, 0xFF	; 255
    1704:	51 07       	cpc	r21, r17
    1706:	19 f4       	brne	.+6      	; 0x170e <dtoa_prf+0x26a>
    1708:	d6 01       	movw	r26, r12
    170a:	9d 92       	st	X+, r9
    170c:	6d 01       	movw	r12, r26
    170e:	84 17       	cp	r24, r20
    1710:	95 07       	cpc	r25, r21
    1712:	54 f0       	brlt	.+20     	; 0x1728 <dtoa_prf+0x284>
    1714:	24 17       	cp	r18, r20
    1716:	35 07       	cpc	r19, r21
    1718:	3c f4       	brge	.+14     	; 0x1728 <dtoa_prf+0x284>
    171a:	7f 01       	movw	r14, r30
    171c:	e6 0e       	add	r14, r22
    171e:	f7 1e       	adc	r15, r23
    1720:	d7 01       	movw	r26, r14
    1722:	11 96       	adiw	r26, 0x01	; 1
    1724:	1c 91       	ld	r17, X
    1726:	01 c0       	rjmp	.+2      	; 0x172a <dtoa_prf+0x286>
    1728:	10 e3       	ldi	r17, 0x30	; 48
    172a:	41 50       	subi	r20, 0x01	; 1
    172c:	51 09       	sbc	r21, r1
    172e:	6f 5f       	subi	r22, 0xFF	; 255
    1730:	7f 4f       	sbci	r23, 0xFF	; 255
    1732:	46 15       	cp	r20, r6
    1734:	57 05       	cpc	r21, r7
    1736:	24 f0       	brlt	.+8      	; 0x1740 <dtoa_prf+0x29c>
    1738:	d6 01       	movw	r26, r12
    173a:	1d 93       	st	X+, r17
    173c:	6d 01       	movw	r12, r26
    173e:	e0 cf       	rjmp	.-64     	; 0x1700 <dtoa_prf+0x25c>
    1740:	48 17       	cp	r20, r24
    1742:	59 07       	cpc	r21, r25
    1744:	39 f4       	brne	.+14     	; 0x1754 <dtoa_prf+0x2b0>
    1746:	06 33       	cpi	r16, 0x36	; 54
    1748:	20 f4       	brcc	.+8      	; 0x1752 <dtoa_prf+0x2ae>
    174a:	05 33       	cpi	r16, 0x35	; 53
    174c:	19 f4       	brne	.+6      	; 0x1754 <dtoa_prf+0x2b0>
    174e:	a1 10       	cpse	r10, r1
    1750:	01 c0       	rjmp	.+2      	; 0x1754 <dtoa_prf+0x2b0>
    1752:	11 e3       	ldi	r17, 0x31	; 49
    1754:	f6 01       	movw	r30, r12
    1756:	11 93       	st	Z+, r17
    1758:	8b 2d       	mov	r24, r11
    175a:	df 01       	movw	r26, r30
    175c:	90 e2       	ldi	r25, 0x20	; 32
    175e:	02 c0       	rjmp	.+4      	; 0x1764 <dtoa_prf+0x2c0>
    1760:	9d 93       	st	X+, r25
    1762:	81 50       	subi	r24, 0x01	; 1
    1764:	81 11       	cpse	r24, r1
    1766:	fc cf       	rjmp	.-8      	; 0x1760 <dtoa_prf+0x2bc>
    1768:	eb 0d       	add	r30, r11
    176a:	f1 1d       	adc	r31, r1
    176c:	10 82       	st	Z, r1
    176e:	20 e0       	ldi	r18, 0x00	; 0
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	c9 01       	movw	r24, r18
    1774:	29 96       	adiw	r28, 0x09	; 9
    1776:	0f b6       	in	r0, 0x3f	; 63
    1778:	f8 94       	cli
    177a:	de bf       	out	0x3e, r29	; 62
    177c:	0f be       	out	0x3f, r0	; 63
    177e:	cd bf       	out	0x3d, r28	; 61
    1780:	df 91       	pop	r29
    1782:	cf 91       	pop	r28
    1784:	1f 91       	pop	r17
    1786:	0f 91       	pop	r16
    1788:	ff 90       	pop	r15
    178a:	ef 90       	pop	r14
    178c:	df 90       	pop	r13
    178e:	cf 90       	pop	r12
    1790:	bf 90       	pop	r11
    1792:	af 90       	pop	r10
    1794:	9f 90       	pop	r9
    1796:	7f 90       	pop	r7
    1798:	6f 90       	pop	r6
    179a:	08 95       	ret

0000179c <__ftoa_engine>:
    179c:	28 30       	cpi	r18, 0x08	; 8
    179e:	08 f0       	brcs	.+2      	; 0x17a2 <__ftoa_engine+0x6>
    17a0:	27 e0       	ldi	r18, 0x07	; 7
    17a2:	33 27       	eor	r19, r19
    17a4:	da 01       	movw	r26, r20
    17a6:	99 0f       	add	r25, r25
    17a8:	31 1d       	adc	r19, r1
    17aa:	87 fd       	sbrc	r24, 7
    17ac:	91 60       	ori	r25, 0x01	; 1
    17ae:	00 96       	adiw	r24, 0x00	; 0
    17b0:	61 05       	cpc	r22, r1
    17b2:	71 05       	cpc	r23, r1
    17b4:	39 f4       	brne	.+14     	; 0x17c4 <__ftoa_engine+0x28>
    17b6:	32 60       	ori	r19, 0x02	; 2
    17b8:	2e 5f       	subi	r18, 0xFE	; 254
    17ba:	3d 93       	st	X+, r19
    17bc:	30 e3       	ldi	r19, 0x30	; 48
    17be:	2a 95       	dec	r18
    17c0:	e1 f7       	brne	.-8      	; 0x17ba <__ftoa_engine+0x1e>
    17c2:	08 95       	ret
    17c4:	9f 3f       	cpi	r25, 0xFF	; 255
    17c6:	30 f0       	brcs	.+12     	; 0x17d4 <__ftoa_engine+0x38>
    17c8:	80 38       	cpi	r24, 0x80	; 128
    17ca:	71 05       	cpc	r23, r1
    17cc:	61 05       	cpc	r22, r1
    17ce:	09 f0       	breq	.+2      	; 0x17d2 <__ftoa_engine+0x36>
    17d0:	3c 5f       	subi	r19, 0xFC	; 252
    17d2:	3c 5f       	subi	r19, 0xFC	; 252
    17d4:	3d 93       	st	X+, r19
    17d6:	91 30       	cpi	r25, 0x01	; 1
    17d8:	08 f0       	brcs	.+2      	; 0x17dc <__ftoa_engine+0x40>
    17da:	80 68       	ori	r24, 0x80	; 128
    17dc:	91 1d       	adc	r25, r1
    17de:	df 93       	push	r29
    17e0:	cf 93       	push	r28
    17e2:	1f 93       	push	r17
    17e4:	0f 93       	push	r16
    17e6:	ff 92       	push	r15
    17e8:	ef 92       	push	r14
    17ea:	19 2f       	mov	r17, r25
    17ec:	98 7f       	andi	r25, 0xF8	; 248
    17ee:	96 95       	lsr	r25
    17f0:	e9 2f       	mov	r30, r25
    17f2:	96 95       	lsr	r25
    17f4:	96 95       	lsr	r25
    17f6:	e9 0f       	add	r30, r25
    17f8:	ff 27       	eor	r31, r31
    17fa:	e0 58       	subi	r30, 0x80	; 128
    17fc:	ff 4f       	sbci	r31, 0xFF	; 255
    17fe:	99 27       	eor	r25, r25
    1800:	33 27       	eor	r19, r19
    1802:	ee 24       	eor	r14, r14
    1804:	ff 24       	eor	r15, r15
    1806:	a7 01       	movw	r20, r14
    1808:	e7 01       	movw	r28, r14
    180a:	05 90       	lpm	r0, Z+
    180c:	08 94       	sec
    180e:	07 94       	ror	r0
    1810:	28 f4       	brcc	.+10     	; 0x181c <__ftoa_engine+0x80>
    1812:	36 0f       	add	r19, r22
    1814:	e7 1e       	adc	r14, r23
    1816:	f8 1e       	adc	r15, r24
    1818:	49 1f       	adc	r20, r25
    181a:	51 1d       	adc	r21, r1
    181c:	66 0f       	add	r22, r22
    181e:	77 1f       	adc	r23, r23
    1820:	88 1f       	adc	r24, r24
    1822:	99 1f       	adc	r25, r25
    1824:	06 94       	lsr	r0
    1826:	a1 f7       	brne	.-24     	; 0x1810 <__ftoa_engine+0x74>
    1828:	05 90       	lpm	r0, Z+
    182a:	07 94       	ror	r0
    182c:	28 f4       	brcc	.+10     	; 0x1838 <__ftoa_engine+0x9c>
    182e:	e7 0e       	add	r14, r23
    1830:	f8 1e       	adc	r15, r24
    1832:	49 1f       	adc	r20, r25
    1834:	56 1f       	adc	r21, r22
    1836:	c1 1d       	adc	r28, r1
    1838:	77 0f       	add	r23, r23
    183a:	88 1f       	adc	r24, r24
    183c:	99 1f       	adc	r25, r25
    183e:	66 1f       	adc	r22, r22
    1840:	06 94       	lsr	r0
    1842:	a1 f7       	brne	.-24     	; 0x182c <__ftoa_engine+0x90>
    1844:	05 90       	lpm	r0, Z+
    1846:	07 94       	ror	r0
    1848:	28 f4       	brcc	.+10     	; 0x1854 <__ftoa_engine+0xb8>
    184a:	f8 0e       	add	r15, r24
    184c:	49 1f       	adc	r20, r25
    184e:	56 1f       	adc	r21, r22
    1850:	c7 1f       	adc	r28, r23
    1852:	d1 1d       	adc	r29, r1
    1854:	88 0f       	add	r24, r24
    1856:	99 1f       	adc	r25, r25
    1858:	66 1f       	adc	r22, r22
    185a:	77 1f       	adc	r23, r23
    185c:	06 94       	lsr	r0
    185e:	a1 f7       	brne	.-24     	; 0x1848 <__ftoa_engine+0xac>
    1860:	05 90       	lpm	r0, Z+
    1862:	07 94       	ror	r0
    1864:	20 f4       	brcc	.+8      	; 0x186e <__ftoa_engine+0xd2>
    1866:	49 0f       	add	r20, r25
    1868:	56 1f       	adc	r21, r22
    186a:	c7 1f       	adc	r28, r23
    186c:	d8 1f       	adc	r29, r24
    186e:	99 0f       	add	r25, r25
    1870:	66 1f       	adc	r22, r22
    1872:	77 1f       	adc	r23, r23
    1874:	88 1f       	adc	r24, r24
    1876:	06 94       	lsr	r0
    1878:	a9 f7       	brne	.-22     	; 0x1864 <__ftoa_engine+0xc8>
    187a:	84 91       	lpm	r24, Z
    187c:	10 95       	com	r17
    187e:	17 70       	andi	r17, 0x07	; 7
    1880:	41 f0       	breq	.+16     	; 0x1892 <__ftoa_engine+0xf6>
    1882:	d6 95       	lsr	r29
    1884:	c7 95       	ror	r28
    1886:	57 95       	ror	r21
    1888:	47 95       	ror	r20
    188a:	f7 94       	ror	r15
    188c:	e7 94       	ror	r14
    188e:	1a 95       	dec	r17
    1890:	c1 f7       	brne	.-16     	; 0x1882 <__ftoa_engine+0xe6>
    1892:	e6 e2       	ldi	r30, 0x26	; 38
    1894:	f0 e0       	ldi	r31, 0x00	; 0
    1896:	68 94       	set
    1898:	15 90       	lpm	r1, Z+
    189a:	15 91       	lpm	r17, Z+
    189c:	35 91       	lpm	r19, Z+
    189e:	65 91       	lpm	r22, Z+
    18a0:	95 91       	lpm	r25, Z+
    18a2:	05 90       	lpm	r0, Z+
    18a4:	7f e2       	ldi	r23, 0x2F	; 47
    18a6:	73 95       	inc	r23
    18a8:	e1 18       	sub	r14, r1
    18aa:	f1 0a       	sbc	r15, r17
    18ac:	43 0b       	sbc	r20, r19
    18ae:	56 0b       	sbc	r21, r22
    18b0:	c9 0b       	sbc	r28, r25
    18b2:	d0 09       	sbc	r29, r0
    18b4:	c0 f7       	brcc	.-16     	; 0x18a6 <__ftoa_engine+0x10a>
    18b6:	e1 0c       	add	r14, r1
    18b8:	f1 1e       	adc	r15, r17
    18ba:	43 1f       	adc	r20, r19
    18bc:	56 1f       	adc	r21, r22
    18be:	c9 1f       	adc	r28, r25
    18c0:	d0 1d       	adc	r29, r0
    18c2:	7e f4       	brtc	.+30     	; 0x18e2 <__ftoa_engine+0x146>
    18c4:	70 33       	cpi	r23, 0x30	; 48
    18c6:	11 f4       	brne	.+4      	; 0x18cc <__ftoa_engine+0x130>
    18c8:	8a 95       	dec	r24
    18ca:	e6 cf       	rjmp	.-52     	; 0x1898 <__ftoa_engine+0xfc>
    18cc:	e8 94       	clt
    18ce:	01 50       	subi	r16, 0x01	; 1
    18d0:	30 f0       	brcs	.+12     	; 0x18de <__ftoa_engine+0x142>
    18d2:	08 0f       	add	r16, r24
    18d4:	0a f4       	brpl	.+2      	; 0x18d8 <__ftoa_engine+0x13c>
    18d6:	00 27       	eor	r16, r16
    18d8:	02 17       	cp	r16, r18
    18da:	08 f4       	brcc	.+2      	; 0x18de <__ftoa_engine+0x142>
    18dc:	20 2f       	mov	r18, r16
    18de:	23 95       	inc	r18
    18e0:	02 2f       	mov	r16, r18
    18e2:	7a 33       	cpi	r23, 0x3A	; 58
    18e4:	28 f0       	brcs	.+10     	; 0x18f0 <__ftoa_engine+0x154>
    18e6:	79 e3       	ldi	r23, 0x39	; 57
    18e8:	7d 93       	st	X+, r23
    18ea:	2a 95       	dec	r18
    18ec:	e9 f7       	brne	.-6      	; 0x18e8 <__ftoa_engine+0x14c>
    18ee:	10 c0       	rjmp	.+32     	; 0x1910 <__ftoa_engine+0x174>
    18f0:	7d 93       	st	X+, r23
    18f2:	2a 95       	dec	r18
    18f4:	89 f6       	brne	.-94     	; 0x1898 <__ftoa_engine+0xfc>
    18f6:	06 94       	lsr	r0
    18f8:	97 95       	ror	r25
    18fa:	67 95       	ror	r22
    18fc:	37 95       	ror	r19
    18fe:	17 95       	ror	r17
    1900:	17 94       	ror	r1
    1902:	e1 18       	sub	r14, r1
    1904:	f1 0a       	sbc	r15, r17
    1906:	43 0b       	sbc	r20, r19
    1908:	56 0b       	sbc	r21, r22
    190a:	c9 0b       	sbc	r28, r25
    190c:	d0 09       	sbc	r29, r0
    190e:	98 f0       	brcs	.+38     	; 0x1936 <__ftoa_engine+0x19a>
    1910:	23 95       	inc	r18
    1912:	7e 91       	ld	r23, -X
    1914:	73 95       	inc	r23
    1916:	7a 33       	cpi	r23, 0x3A	; 58
    1918:	08 f0       	brcs	.+2      	; 0x191c <__ftoa_engine+0x180>
    191a:	70 e3       	ldi	r23, 0x30	; 48
    191c:	7c 93       	st	X, r23
    191e:	20 13       	cpse	r18, r16
    1920:	b8 f7       	brcc	.-18     	; 0x1910 <__ftoa_engine+0x174>
    1922:	7e 91       	ld	r23, -X
    1924:	70 61       	ori	r23, 0x10	; 16
    1926:	7d 93       	st	X+, r23
    1928:	30 f0       	brcs	.+12     	; 0x1936 <__ftoa_engine+0x19a>
    192a:	83 95       	inc	r24
    192c:	71 e3       	ldi	r23, 0x31	; 49
    192e:	7d 93       	st	X+, r23
    1930:	70 e3       	ldi	r23, 0x30	; 48
    1932:	2a 95       	dec	r18
    1934:	e1 f7       	brne	.-8      	; 0x192e <__ftoa_engine+0x192>
    1936:	11 24       	eor	r1, r1
    1938:	ef 90       	pop	r14
    193a:	ff 90       	pop	r15
    193c:	0f 91       	pop	r16
    193e:	1f 91       	pop	r17
    1940:	cf 91       	pop	r28
    1942:	df 91       	pop	r29
    1944:	99 27       	eor	r25, r25
    1946:	87 fd       	sbrc	r24, 7
    1948:	90 95       	com	r25
    194a:	08 95       	ret

0000194c <strrev>:
    194c:	dc 01       	movw	r26, r24
    194e:	fc 01       	movw	r30, r24
    1950:	67 2f       	mov	r22, r23
    1952:	71 91       	ld	r23, Z+
    1954:	77 23       	and	r23, r23
    1956:	e1 f7       	brne	.-8      	; 0x1950 <strrev+0x4>
    1958:	32 97       	sbiw	r30, 0x02	; 2
    195a:	04 c0       	rjmp	.+8      	; 0x1964 <strrev+0x18>
    195c:	7c 91       	ld	r23, X
    195e:	6d 93       	st	X+, r22
    1960:	70 83       	st	Z, r23
    1962:	62 91       	ld	r22, -Z
    1964:	ae 17       	cp	r26, r30
    1966:	bf 07       	cpc	r27, r31
    1968:	c8 f3       	brcs	.-14     	; 0x195c <strrev+0x10>
    196a:	08 95       	ret

0000196c <__udivmodhi4>:
    196c:	aa 1b       	sub	r26, r26
    196e:	bb 1b       	sub	r27, r27
    1970:	51 e1       	ldi	r21, 0x11	; 17
    1972:	07 c0       	rjmp	.+14     	; 0x1982 <__udivmodhi4_ep>

00001974 <__udivmodhi4_loop>:
    1974:	aa 1f       	adc	r26, r26
    1976:	bb 1f       	adc	r27, r27
    1978:	a6 17       	cp	r26, r22
    197a:	b7 07       	cpc	r27, r23
    197c:	10 f0       	brcs	.+4      	; 0x1982 <__udivmodhi4_ep>
    197e:	a6 1b       	sub	r26, r22
    1980:	b7 0b       	sbc	r27, r23

00001982 <__udivmodhi4_ep>:
    1982:	88 1f       	adc	r24, r24
    1984:	99 1f       	adc	r25, r25
    1986:	5a 95       	dec	r21
    1988:	a9 f7       	brne	.-22     	; 0x1974 <__udivmodhi4_loop>
    198a:	80 95       	com	r24
    198c:	90 95       	com	r25
    198e:	bc 01       	movw	r22, r24
    1990:	cd 01       	movw	r24, r26
    1992:	08 95       	ret

00001994 <_exit>:
    1994:	f8 94       	cli

00001996 <__stop_program>:
    1996:	ff cf       	rjmp	.-2      	; 0x1996 <__stop_program>
