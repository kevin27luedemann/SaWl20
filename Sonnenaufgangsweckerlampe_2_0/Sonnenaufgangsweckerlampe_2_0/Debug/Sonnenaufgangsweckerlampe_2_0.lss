
Sonnenaufgangsweckerlampe_2_0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000018ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000f0  00800060  000018ce  00001962  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000023  00800150  00800150  00001a52  2**0
                  ALLOC
  3 .stab         00002b80  00000000  00000000  00001a54  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000854  00000000  00000000  000045d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004e28  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000148  00000000  00000000  00004e57  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003f79  00000000  00000000  00004f9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000053b  00000000  00000000  00008f18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000cb4  00000000  00000000  00009453  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000374  00000000  00000000  0000a108  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000059d  00000000  00000000  0000a47c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000024f7  00000000  00000000  0000aa19  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000160  00000000  00000000  0000cf10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	a9 c0       	rjmp	.+338    	; 0x156 <__bad_interrupt>
       4:	a8 c0       	rjmp	.+336    	; 0x156 <__bad_interrupt>
       6:	a7 c0       	rjmp	.+334    	; 0x156 <__bad_interrupt>
       8:	a6 c0       	rjmp	.+332    	; 0x156 <__bad_interrupt>
       a:	a5 c0       	rjmp	.+330    	; 0x156 <__bad_interrupt>
       c:	a4 c0       	rjmp	.+328    	; 0x156 <__bad_interrupt>
       e:	a3 c0       	rjmp	.+326    	; 0x156 <__bad_interrupt>
      10:	79 c7       	rjmp	.+3826   	; 0xf04 <__vector_8>
      12:	a1 c0       	rjmp	.+322    	; 0x156 <__bad_interrupt>
      14:	a0 c0       	rjmp	.+320    	; 0x156 <__bad_interrupt>
      16:	9f c0       	rjmp	.+318    	; 0x156 <__bad_interrupt>
      18:	9e c0       	rjmp	.+316    	; 0x156 <__bad_interrupt>
      1a:	9d c0       	rjmp	.+314    	; 0x156 <__bad_interrupt>
      1c:	9c c0       	rjmp	.+312    	; 0x156 <__bad_interrupt>
      1e:	9b c0       	rjmp	.+310    	; 0x156 <__bad_interrupt>
      20:	9a c0       	rjmp	.+308    	; 0x156 <__bad_interrupt>
      22:	99 c0       	rjmp	.+306    	; 0x156 <__bad_interrupt>
      24:	98 c0       	rjmp	.+304    	; 0x156 <__bad_interrupt>
      26:	00 40       	sbci	r16, 0x00	; 0
      28:	7a 10       	cpse	r7, r10
      2a:	f3 5a       	subi	r31, 0xA3	; 163
      2c:	00 a0       	ldd	r0, Z+32	; 0x20
      2e:	72 4e       	sbci	r23, 0xE2	; 226
      30:	18 09       	sbc	r17, r8
      32:	00 10       	cpse	r0, r0
      34:	a5 d4       	rcall	.+2378   	; 0x980 <_Z5einsth+0x2e8>
      36:	e8 00       	.word	0x00e8	; ????
      38:	00 e8       	ldi	r16, 0x80	; 128
      3a:	76 48       	sbci	r23, 0x86	; 134
      3c:	17 00       	.word	0x0017	; ????
      3e:	00 e4       	ldi	r16, 0x40	; 64
      40:	0b 54       	subi	r16, 0x4B	; 75
      42:	02 00       	.word	0x0002	; ????
      44:	00 ca       	rjmp	.-3072   	; 0xfffff446 <__eeprom_end+0xff7ef446>
      46:	9a 3b       	cpi	r25, 0xBA	; 186
      48:	00 00       	nop
      4a:	00 e1       	ldi	r16, 0x10	; 16
      4c:	f5 05       	cpc	r31, r5
      4e:	00 00       	nop
      50:	80 96       	adiw	r24, 0x20	; 32
      52:	98 00       	.word	0x0098	; ????
      54:	00 00       	nop
      56:	40 42       	sbci	r20, 0x20	; 32
      58:	0f 00       	.word	0x000f	; ????
      5a:	00 00       	nop
      5c:	a0 86       	std	Z+8, r10	; 0x08
      5e:	01 00       	.word	0x0001	; ????
      60:	00 00       	nop
      62:	10 27       	eor	r17, r16
      64:	00 00       	nop
      66:	00 00       	nop
      68:	e8 03       	fmulsu	r22, r16
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	64 00       	.word	0x0064	; ????
      70:	00 00       	nop
      72:	00 00       	nop
      74:	0a 00       	.word	0x000a	; ????
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	01 00       	.word	0x0001	; ????
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	2c 76       	andi	r18, 0x6C	; 108
      82:	d8 88       	ldd	r13, Y+16	; 0x10
      84:	dc 67       	ori	r29, 0x7C	; 124
      86:	4f 08       	sbc	r4, r15
      88:	23 df       	rcall	.-442    	; 0xfffffed0 <__eeprom_end+0xff7efed0>
      8a:	c1 df       	rcall	.-126    	; 0xe <__zero_reg__+0xd>
      8c:	ae 59       	subi	r26, 0x9E	; 158
      8e:	e1 b1       	in	r30, 0x01	; 1
      90:	b7 96       	adiw	r30, 0x27	; 39
      92:	e5 e3       	ldi	r30, 0x35	; 53
      94:	e4 53       	subi	r30, 0x34	; 52
      96:	c6 3a       	cpi	r28, 0xA6	; 166
      98:	e6 51       	subi	r30, 0x16	; 22
      9a:	99 76       	andi	r25, 0x69	; 105
      9c:	96 e8       	ldi	r25, 0x86	; 134
      9e:	e6 c2       	rjmp	.+1484   	; 0x66c <_Z8erhoehenPhhhPKc+0x2e>
      a0:	84 26       	eor	r8, r20
      a2:	eb 89       	ldd	r30, Y+19	; 0x13
      a4:	8c 9b       	sbis	0x11, 4	; 17
      a6:	62 ed       	ldi	r22, 0xD2	; 210
      a8:	40 7c       	andi	r20, 0xC0	; 192
      aa:	6f fc       	.word	0xfc6f	; ????
      ac:	ef bc       	out	0x2f, r14	; 47
      ae:	9c 9f       	mul	r25, r28
      b0:	40 f2       	brcs	.-112    	; 0x42 <__SREG__+0x3>
      b2:	ba a5       	ldd	r27, Y+42	; 0x2a
      b4:	6f a5       	ldd	r22, Y+47	; 0x2f
      b6:	f4 90       	lpm	r15, Z
      b8:	05 5a       	subi	r16, 0xA5	; 165
      ba:	2a f7       	brpl	.-54     	; 0x86 <__SREG__+0x47>
      bc:	5c 93       	st	X, r21
      be:	6b 6c       	ori	r22, 0xCB	; 203
      c0:	f9 67       	ori	r31, 0x79	; 121
      c2:	6d c1       	rjmp	.+730    	; 0x39e <_Z4zeitv+0xa>
      c4:	1b fc       	.word	0xfc1b	; ????
      c6:	e0 e4       	ldi	r30, 0x40	; 64
      c8:	0d 47       	sbci	r16, 0x7D	; 125
      ca:	fe f5       	brtc	.+126    	; 0x14a <.do_clear_bss_loop>
      cc:	20 e6       	ldi	r18, 0x60	; 96
      ce:	b5 00       	.word	0x00b5	; ????
      d0:	d0 ed       	ldi	r29, 0xD0	; 208
      d2:	90 2e       	mov	r9, r16
      d4:	03 00       	.word	0x0003	; ????
      d6:	94 35       	cpi	r25, 0x54	; 84
      d8:	77 05       	cpc	r23, r7
      da:	00 80       	ld	r0, Z
      dc:	84 1e       	adc	r8, r20
      de:	08 00       	.word	0x0008	; ????
      e0:	00 20       	and	r0, r0
      e2:	4e 0a       	sbc	r4, r30
      e4:	00 00       	nop
      e6:	00 c8       	rjmp	.-4096   	; 0xfffff0e8 <__eeprom_end+0xff7ef0e8>
      e8:	0c 33       	cpi	r16, 0x3C	; 60
      ea:	33 33       	cpi	r19, 0x33	; 51
      ec:	33 0f       	add	r19, r19
      ee:	98 6e       	ori	r25, 0xE8	; 232
      f0:	12 83       	std	Z+2, r17	; 0x02
      f2:	11 41       	sbci	r17, 0x11	; 17
      f4:	ef 8d       	ldd	r30, Y+31	; 0x1f
      f6:	21 14       	cp	r2, r1
      f8:	89 3b       	cpi	r24, 0xB9	; 185
      fa:	e6 55       	subi	r30, 0x56	; 86
      fc:	16 cf       	rjmp	.-468    	; 0xffffff2a <__eeprom_end+0xff7eff2a>
      fe:	fe e6       	ldi	r31, 0x6E	; 110
     100:	db 18       	sub	r13, r11
     102:	d1 84       	ldd	r13, Z+9	; 0x09
     104:	4b 38       	cpi	r20, 0x8B	; 139
     106:	1b f7       	brvc	.-58     	; 0xce <__SREG__+0x8f>
     108:	7c 1d       	adc	r23, r12
     10a:	90 1d       	adc	r25, r0
     10c:	a4 bb       	out	0x14, r26	; 20
     10e:	e4 24       	eor	r14, r4
     110:	20 32       	cpi	r18, 0x20	; 32
     112:	84 72       	andi	r24, 0x24	; 36
     114:	5e 22       	and	r5, r30
     116:	81 00       	.word	0x0081	; ????
     118:	c9 f1       	breq	.+114    	; 0x18c <_Z8lcd_datah+0x12>
     11a:	24 ec       	ldi	r18, 0xC4	; 196
     11c:	a1 e5       	ldi	r26, 0x51	; 81
     11e:	3d 27       	eor	r19, r29

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf e5       	ldi	r28, 0x5F	; 95
     126:	d4 e0       	ldi	r29, 0x04	; 4
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	11 e0       	ldi	r17, 0x01	; 1
     12e:	a0 e6       	ldi	r26, 0x60	; 96
     130:	b0 e0       	ldi	r27, 0x00	; 0
     132:	ee ec       	ldi	r30, 0xCE	; 206
     134:	f8 e1       	ldi	r31, 0x18	; 24
     136:	02 c0       	rjmp	.+4      	; 0x13c <__do_copy_data+0x10>
     138:	05 90       	lpm	r0, Z+
     13a:	0d 92       	st	X+, r0
     13c:	a0 35       	cpi	r26, 0x50	; 80
     13e:	b1 07       	cpc	r27, r17
     140:	d9 f7       	brne	.-10     	; 0x138 <__do_copy_data+0xc>

00000142 <__do_clear_bss>:
     142:	21 e0       	ldi	r18, 0x01	; 1
     144:	a0 e5       	ldi	r26, 0x50	; 80
     146:	b1 e0       	ldi	r27, 0x01	; 1
     148:	01 c0       	rjmp	.+2      	; 0x14c <.do_clear_bss_start>

0000014a <.do_clear_bss_loop>:
     14a:	1d 92       	st	X+, r1

0000014c <.do_clear_bss_start>:
     14c:	a3 37       	cpi	r26, 0x73	; 115
     14e:	b2 07       	cpc	r27, r18
     150:	e1 f7       	brne	.-8      	; 0x14a <.do_clear_bss_loop>
     152:	ed d6       	rcall	.+3546   	; 0xf2e <main>
     154:	ba cb       	rjmp	.-2188   	; 0xfffff8ca <__eeprom_end+0xff7ef8ca>

00000156 <__bad_interrupt>:
     156:	54 cf       	rjmp	.-344    	; 0x0 <__vectors>

00000158 <_ZL10lcd_enablev>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     158:	c5 9a       	sbi	0x18, 5	; 24
     15a:	88 e1       	ldi	r24, 0x18	; 24
     15c:	8a 95       	dec	r24
     15e:	f1 f7       	brne	.-4      	; 0x15c <_ZL10lcd_enablev+0x4>
     160:	00 c0       	rjmp	.+0      	; 0x162 <_ZL10lcd_enablev+0xa>
     162:	c5 98       	cbi	0x18, 5	; 24
     164:	08 95       	ret

00000166 <_ZL7lcd_outh>:
	}
	aus(1,0);
	aus(2,0);
	lcd_string(NAME(Sekunden));
	while(!debounce(&PIND,3)){
		if (debounce(&PIND,2))
     166:	98 b3       	in	r25, 0x18	; 24
     168:	90 7f       	andi	r25, 0xF0	; 240
		{
			Sekunden++;
     16a:	98 bb       	out	0x18, r25	; 24
     16c:	98 b3       	in	r25, 0x18	; 24
     16e:	82 95       	swap	r24
			if (Sekunden==60)
     170:	8f 70       	andi	r24, 0x0F	; 15
     172:	98 2b       	or	r25, r24
	aus(2,0);
	lcd_string(NAME(Sekunden));
	while(!debounce(&PIND,3)){
		if (debounce(&PIND,2))
		{
			Sekunden++;
     174:	98 bb       	out	0x18, r25	; 24
     176:	f0 df       	rcall	.-32     	; 0x158 <_ZL10lcd_enablev>
     178:	08 95       	ret

0000017a <_Z8lcd_datah>:
			if (Sekunden==60)
			{
				Sekunden=0;
     17a:	cf 93       	push	r28
     17c:	c8 2f       	mov	r28, r24
			}
			aus(1,0);
     17e:	c4 9a       	sbi	0x18, 4	; 24
     180:	f2 df       	rcall	.-28     	; 0x166 <_ZL7lcd_outh>
     182:	8c 2f       	mov	r24, r28
			aus(2,0);
     184:	82 95       	swap	r24
     186:	80 7f       	andi	r24, 0xF0	; 240
     188:	ee df       	rcall	.-36     	; 0x166 <_ZL7lcd_outh>
			lcd_string(NAME(Sekunden));
     18a:	88 e3       	ldi	r24, 0x38	; 56
     18c:	8a 95       	dec	r24
     18e:	f1 f7       	brne	.-4      	; 0x18c <_Z8lcd_datah+0x12>

#endif /* DEFINITIONEN_H_ */

inline uint8_t debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( !(*port & (1 << pin)) )
     190:	00 c0       	rjmp	.+0      	; 0x192 <_Z8lcd_datah+0x18>
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <_Z11lcd_commandh>:
     196:	cf 93       	push	r28
     198:	c8 2f       	mov	r28, r24
     19a:	c4 98       	cbi	0x18, 4	; 24
     19c:	e4 df       	rcall	.-56     	; 0x166 <_ZL7lcd_outh>
     19e:	8c 2f       	mov	r24, r28
     1a0:	82 95       	swap	r24
     1a2:	80 7f       	andi	r24, 0xF0	; 240
     1a4:	e0 df       	rcall	.-64     	; 0x166 <_ZL7lcd_outh>
     1a6:	83 e3       	ldi	r24, 0x33	; 51
     1a8:	8a 95       	dec	r24
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <_Z11lcd_commandh+0x12>
		
	}
	aus(1,0);
	aus(2,0);
	lcd_string(NAME(Sekunden));
	while(!debounce(&PIND,3)){
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <_Z11lcd_commandh+0x18>
     1ae:	cf 91       	pop	r28
			aus(2,0);
			lcd_string(NAME(Sekunden));
		}
		
	}
}
     1b0:	08 95       	ret

000001b2 <_Z9lcd_clearv>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl zur Löschung des Displays
void lcd_clear( void )
{
	lcd_command( LCD_CLEAR_DISPLAY );
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	f0 df       	rcall	.-32     	; 0x196 <_Z11lcd_commandh>
     1b6:	83 e3       	ldi	r24, 0x33	; 51
     1b8:	97 e0       	ldi	r25, 0x07	; 7
     1ba:	01 97       	sbiw	r24, 0x01	; 1
     1bc:	f1 f7       	brne	.-4      	; 0x1ba <_Z9lcd_clearv+0x8>
     1be:	08 95       	ret

000001c0 <_Z8lcd_initv>:
{
	// verwendete Pins auf Ausgang schalten
	uint8_t pins = (0x0F << LCD_DB) |           // 4 Datenleitungen
	(1<<LCD_RS) |                // R/S Leitung
	(1<<LCD_EN);                 // Enable Leitung
	LCD_DDR |= pins;
     1c0:	87 b3       	in	r24, 0x17	; 23
     1c2:	8f 63       	ori	r24, 0x3F	; 63
     1c4:	87 bb       	out	0x17, r24	; 23
	
	// initial alle Ausgänge auf Null
	LCD_PORT &= ~pins;
     1c6:	88 b3       	in	r24, 0x18	; 24
     1c8:	80 7c       	andi	r24, 0xC0	; 192
     1ca:	88 bb       	out	0x18, r24	; 24
     1cc:	8f ef       	ldi	r24, 0xFF	; 255
     1ce:	95 e3       	ldi	r25, 0x35	; 53
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <_Z8lcd_initv+0x10>
     1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <_Z8lcd_initv+0x16>
     1d6:	00 00       	nop
	
	// warten auf die Bereitschaft des LCD
	_delay_ms( LCD_BOOTUP_MS );
	
	// Soft-Reset muss 3mal hintereinander gesendet werden zur Initialisierung
	lcd_out( LCD_SOFT_RESET );
     1d8:	80 e3       	ldi	r24, 0x30	; 48
     1da:	c5 df       	rcall	.-118    	; 0x166 <_ZL7lcd_outh>
     1dc:	8f ef       	ldi	r24, 0xFF	; 255
     1de:	91 e1       	ldi	r25, 0x11	; 17
     1e0:	01 97       	sbiw	r24, 0x01	; 1
     1e2:	f1 f7       	brne	.-4      	; 0x1e0 <_Z8lcd_initv+0x20>
     1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <_Z8lcd_initv+0x26>
     1e6:	00 00       	nop
	_delay_ms( LCD_SOFT_RESET_MS1 );
	
	lcd_enable();
     1e8:	b7 df       	rcall	.-146    	; 0x158 <_ZL10lcd_enablev>
     1ea:	89 e9       	ldi	r24, 0x99	; 153
     1ec:	93 e0       	ldi	r25, 0x03	; 3
     1ee:	01 97       	sbiw	r24, 0x01	; 1
     1f0:	f1 f7       	brne	.-4      	; 0x1ee <_Z8lcd_initv+0x2e>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <_Z8lcd_initv+0x34>
	_delay_ms( LCD_SOFT_RESET_MS2 );
	
	lcd_enable();
     1f4:	b1 df       	rcall	.-158    	; 0x158 <_ZL10lcd_enablev>
     1f6:	89 e9       	ldi	r24, 0x99	; 153
     1f8:	93 e0       	ldi	r25, 0x03	; 3
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <_Z8lcd_initv+0x3a>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <_Z8lcd_initv+0x40>
	_delay_ms( LCD_SOFT_RESET_MS3 );
	
	// 4-bit Modus aktivieren
	lcd_out( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT );
     200:	80 e2       	ldi	r24, 0x20	; 32
     202:	b1 df       	rcall	.-158    	; 0x166 <_ZL7lcd_outh>
     204:	8f ef       	ldi	r24, 0xFF	; 255
     206:	91 e1       	ldi	r25, 0x11	; 17
     208:	01 97       	sbiw	r24, 0x01	; 1
     20a:	f1 f7       	brne	.-4      	; 0x208 <_Z8lcd_initv+0x48>
     20c:	00 c0       	rjmp	.+0      	; 0x20e <_Z8lcd_initv+0x4e>
     20e:	00 00       	nop
	
	// 4-bit Modus / 2 Zeilen / 5x7
	lcd_command( LCD_SET_FUNCTION |
	LCD_FUNCTION_4BIT |
	LCD_FUNCTION_2LINE |
	LCD_FUNCTION_5X7 );
     210:	88 e2       	ldi	r24, 0x28	; 40
     212:	c1 df       	rcall	.-126    	; 0x196 <_Z11lcd_commandh>
	
	// Display ein / Cursor aus / Blinken aus
	lcd_command( LCD_SET_DISPLAY |
	LCD_DISPLAY_ON |
	LCD_CURSOR_OFF |
	LCD_BLINKING_OFF);
     214:	8c e0       	ldi	r24, 0x0C	; 12
     216:	bf df       	rcall	.-130    	; 0x196 <_Z11lcd_commandh>
	
	// Cursor inkrement / kein Scrollen
	lcd_command( LCD_SET_ENTRY |
	LCD_ENTRY_INCREASE |
	LCD_ENTRY_NOSHIFT );
     218:	86 e0       	ldi	r24, 0x06	; 6
     21a:	bd df       	rcall	.-134    	; 0x196 <_Z11lcd_commandh>
	
	lcd_clear();
     21c:	ca df       	rcall	.-108    	; 0x1b2 <_Z9lcd_clearv>
     21e:	08 95       	ret

00000220 <_Z8lcd_homev>:

////////////////////////////////////////////////////////////////////////////////
// Sendet den Befehl: Cursor Home
void lcd_home( void )
{
	lcd_command( LCD_CURSOR_HOME );
     220:	82 e0       	ldi	r24, 0x02	; 2
     222:	b9 df       	rcall	.-142    	; 0x196 <_Z11lcd_commandh>
     224:	83 e3       	ldi	r24, 0x33	; 51
     226:	97 e0       	ldi	r25, 0x07	; 7
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <_Z8lcd_homev+0x8>
     22c:	08 95       	ret

0000022e <_Z13lcd_setcursorhh>:

void lcd_setcursor( uint8_t x, uint8_t y )
{
	uint8_t data;
	
	switch (y)
     22e:	62 30       	cpi	r22, 0x02	; 2
     230:	59 f0       	breq	.+22     	; 0x248 <_Z13lcd_setcursorhh+0x1a>
     232:	18 f4       	brcc	.+6      	; 0x23a <_Z13lcd_setcursorhh+0xc>
     234:	61 30       	cpi	r22, 0x01	; 1
     236:	71 f4       	brne	.+28     	; 0x254 <_Z13lcd_setcursorhh+0x26>
     238:	05 c0       	rjmp	.+10     	; 0x244 <_Z13lcd_setcursorhh+0x16>
     23a:	63 30       	cpi	r22, 0x03	; 3
     23c:	39 f0       	breq	.+14     	; 0x24c <_Z13lcd_setcursorhh+0x1e>
     23e:	64 30       	cpi	r22, 0x04	; 4
     240:	49 f4       	brne	.+18     	; 0x254 <_Z13lcd_setcursorhh+0x26>
     242:	06 c0       	rjmp	.+12     	; 0x250 <_Z13lcd_setcursorhh+0x22>
	{
		case 1:    // 1. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE1 + x;
     244:	80 58       	subi	r24, 0x80	; 128
		break;
     246:	05 c0       	rjmp	.+10     	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 2:    // 2. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE2 + x;
     248:	80 54       	subi	r24, 0x40	; 64
		break;
     24a:	03 c0       	rjmp	.+6      	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 3:    // 3. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE3 + x;
     24c:	80 57       	subi	r24, 0x70	; 112
		break;
     24e:	01 c0       	rjmp	.+2      	; 0x252 <_Z13lcd_setcursorhh+0x24>
		
		case 4:    // 4. Zeile
		data = LCD_SET_DDADR + LCD_DDADR_LINE4 + x;
     250:	80 53       	subi	r24, 0x30	; 48
		
		default:
		return;                                   // für den Fall einer falschen Zeile
	}
	
	lcd_command( data );
     252:	a1 df       	rcall	.-190    	; 0x196 <_Z11lcd_commandh>
     254:	08 95       	ret

00000256 <_Z10lcd_stringPKc>:

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	ec 01       	movw	r28, r24
	while( *data != '\0' )
     25c:	88 81       	ld	r24, Y
     25e:	88 23       	and	r24, r24
     260:	29 f0       	breq	.+10     	; 0x26c <_Z10lcd_stringPKc+0x16>
}

////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
     262:	21 96       	adiw	r28, 0x01	; 1
{
	while( *data != '\0' )
	lcd_data( *data++ );
     264:	8a df       	rcall	.-236    	; 0x17a <_Z8lcd_datah>
////////////////////////////////////////////////////////////////////////////////
// Schreibt einen String auf das LCD

void lcd_string( const char *data )
{
	while( *data != '\0' )
     266:	89 91       	ld	r24, Y+
     268:	81 11       	cpse	r24, r1
     26a:	fc cf       	rjmp	.-8      	; 0x264 <_Z10lcd_stringPKc+0xe>
	lcd_data( *data++ );
}
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <_Z8ADC_Readh>:
#ifndef ADC_H_
#define ADC_H_

uint16_t ADC_Read( uint8_t channel )
{
	ADMUX = (ADMUX & ~(0x1F)) | (channel & 0x1F);
     272:	97 b1       	in	r25, 0x07	; 7
     274:	8f 71       	andi	r24, 0x1F	; 31
     276:	90 7e       	andi	r25, 0xE0	; 224
     278:	98 2b       	or	r25, r24
     27a:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1<<ADSC);
     27c:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     27e:	36 99       	sbic	0x06, 6	; 6
     280:	fe cf       	rjmp	.-4      	; 0x27e <_Z8ADC_Readh+0xc>
	}
	return ADCW;
     282:	24 b1       	in	r18, 0x04	; 4
     284:	35 b1       	in	r19, 0x05	; 5
}
     286:	82 2f       	mov	r24, r18
     288:	93 2f       	mov	r25, r19
     28a:	08 95       	ret

0000028c <_Z6Weckerv>:

#ifndef ZEIT_H_
#define ZEIT_H_

void Wecker(){
	if (WochenTag!=0 && WochenTag!=6)
     28c:	80 91 6f 01 	lds	r24, 0x016F
     290:	88 23       	and	r24, r24
     292:	99 f0       	breq	.+38     	; 0x2ba <_Z6Weckerv+0x2e>
     294:	86 30       	cpi	r24, 0x06	; 6
     296:	89 f0       	breq	.+34     	; 0x2ba <_Z6Weckerv+0x2e>
	{
		if(Stunden==WStunden[0]){
     298:	90 91 6d 01 	lds	r25, 0x016D
     29c:	80 91 70 01 	lds	r24, 0x0170
     2a0:	98 13       	cpse	r25, r24
     2a2:	1b c0       	rjmp	.+54     	; 0x2da <_Z6Weckerv+0x4e>
			if(Minuten==WMinuten[0]){
     2a4:	90 91 6b 01 	lds	r25, 0x016B
     2a8:	80 91 71 01 	lds	r24, 0x0171
     2ac:	98 13       	cpse	r25, r24
     2ae:	15 c0       	rjmp	.+42     	; 0x2da <_Z6Weckerv+0x4e>
				Wan = 1;
     2b0:	81 e0       	ldi	r24, 0x01	; 1
     2b2:	80 93 6a 01 	sts	0x016A, r24
				PORTC |= (1<<PC5);
     2b6:	ad 9a       	sbi	0x15, 5	; 21
     2b8:	08 95       	ret
			}
		}
	}
	else
	{
		if(Stunden==WStunden[1]){
     2ba:	90 91 6e 01 	lds	r25, 0x016E
     2be:	80 91 70 01 	lds	r24, 0x0170
     2c2:	98 13       	cpse	r25, r24
     2c4:	0a c0       	rjmp	.+20     	; 0x2da <_Z6Weckerv+0x4e>
			if(Minuten==WMinuten[1]){
     2c6:	90 91 6c 01 	lds	r25, 0x016C
     2ca:	80 91 71 01 	lds	r24, 0x0171
     2ce:	98 13       	cpse	r25, r24
     2d0:	04 c0       	rjmp	.+8      	; 0x2da <_Z6Weckerv+0x4e>
				Wan = 1;
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	80 93 6a 01 	sts	0x016A, r24
				PORTC |= (1<<PC5);
     2d8:	ad 9a       	sbi	0x15, 5	; 21
     2da:	08 95       	ret

000002dc <_Z10temperaturv>:
			}
		}
	}
}

void temperatur(){
     2dc:	cf 92       	push	r12
     2de:	df 92       	push	r13
     2e0:	ef 92       	push	r14
     2e2:	ff 92       	push	r15
     2e4:	0f 93       	push	r16
     2e6:	1f 93       	push	r17
     2e8:	cf 93       	push	r28
     2ea:	df 93       	push	r29
	ADC_Read(0);
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	c1 df       	rcall	.-126    	; 0x272 <_Z8ADC_Readh>
	uint16_t adcval = ADC_Read(0);
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	bf df       	rcall	.-130    	; 0x272 <_Z8ADC_Readh>
	double span= (double)adcval*(5.0/1024.0);
     2f4:	bc 01       	movw	r22, r24
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	3f d7       	rcall	.+3710   	; 0x117a <__floatunsisf>
     2fc:	20 e0       	ldi	r18, 0x00	; 0
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	40 ea       	ldi	r20, 0xA0	; 160
     302:	5b e3       	ldi	r21, 0x3B	; 59
     304:	c8 d7       	rcall	.+3984   	; 0x1296 <__mulsf3>
     306:	06 2f       	mov	r16, r22
     308:	17 2f       	mov	r17, r23
     30a:	d8 2f       	mov	r29, r24
     30c:	c9 2f       	mov	r28, r25
	double widerst = ((double)span*2700.0)/((double)(5-(double)span));
     30e:	20 e0       	ldi	r18, 0x00	; 0
     310:	30 ec       	ldi	r19, 0xC0	; 192
     312:	48 e2       	ldi	r20, 0x28	; 40
     314:	55 e4       	ldi	r21, 0x45	; 69
     316:	bf d7       	rcall	.+3966   	; 0x1296 <__mulsf3>
     318:	6b 01       	movw	r12, r22
     31a:	7c 01       	movw	r14, r24
     31c:	20 2f       	mov	r18, r16
     31e:	31 2f       	mov	r19, r17
     320:	4d 2f       	mov	r20, r29
     322:	5c 2f       	mov	r21, r28
     324:	60 e0       	ldi	r22, 0x00	; 0
     326:	70 e0       	ldi	r23, 0x00	; 0
     328:	80 ea       	ldi	r24, 0xA0	; 160
     32a:	90 e4       	ldi	r25, 0x40	; 64
     32c:	59 d6       	rcall	.+3250   	; 0xfe0 <__subsf3>
     32e:	9b 01       	movw	r18, r22
     330:	ac 01       	movw	r20, r24
     332:	c7 01       	movw	r24, r14
     334:	b6 01       	movw	r22, r12
     336:	b9 d6       	rcall	.+3442   	; 0x10aa <__divsf3>
	tempera = (100.0/1387.0)*widerst+(50+tempoffset-(100.0/1387.0)*2417.0);
     338:	25 e2       	ldi	r18, 0x25	; 37
     33a:	38 ea       	ldi	r19, 0xA8	; 168
     33c:	43 e9       	ldi	r20, 0x93	; 147
     33e:	5d e3       	ldi	r21, 0x3D	; 61
     340:	aa d7       	rcall	.+3924   	; 0x1296 <__mulsf3>
     342:	6b 01       	movw	r12, r22
     344:	7c 01       	movw	r14, r24
     346:	60 91 64 00 	lds	r22, 0x0064
     34a:	77 27       	eor	r23, r23
     34c:	67 fd       	sbrc	r22, 7
     34e:	70 95       	com	r23
     350:	6e 5c       	subi	r22, 0xCE	; 206
     352:	7f 4f       	sbci	r23, 0xFF	; 255
     354:	88 27       	eor	r24, r24
     356:	77 fd       	sbrc	r23, 7
     358:	80 95       	com	r24
     35a:	98 2f       	mov	r25, r24
     35c:	10 d7       	rcall	.+3616   	; 0x117e <__floatsisf>
     35e:	21 ed       	ldi	r18, 0xD1	; 209
     360:	32 e4       	ldi	r19, 0x42	; 66
     362:	4e e2       	ldi	r20, 0x2E	; 46
     364:	53 e4       	ldi	r21, 0x43	; 67
     366:	3c d6       	rcall	.+3192   	; 0xfe0 <__subsf3>
     368:	9b 01       	movw	r18, r22
     36a:	ac 01       	movw	r20, r24
     36c:	c7 01       	movw	r24, r14
     36e:	b6 01       	movw	r22, r12
     370:	38 d6       	rcall	.+3184   	; 0xfe2 <__addsf3>
     372:	60 93 65 01 	sts	0x0165, r22
     376:	70 93 66 01 	sts	0x0166, r23
     37a:	80 93 67 01 	sts	0x0167, r24
     37e:	90 93 68 01 	sts	0x0168, r25
}
     382:	df 91       	pop	r29
     384:	cf 91       	pop	r28
     386:	1f 91       	pop	r17
     388:	0f 91       	pop	r16
     38a:	ff 90       	pop	r15
     38c:	ef 90       	pop	r14
     38e:	df 90       	pop	r13
     390:	cf 90       	pop	r12
     392:	08 95       	ret

00000394 <_Z4zeitv>:

void zeit(){
	sektemp=Sekunden;
     394:	80 91 72 01 	lds	r24, 0x0172
     398:	80 93 69 01 	sts	0x0169, r24
	if (Sekunden >= 60){
     39c:	8c 33       	cpi	r24, 0x3C	; 60
     39e:	50 f1       	brcs	.+84     	; 0x3f4 <_Z4zeitv+0x60>
		//Temperatur bestimmen
		temperatur();
     3a0:	9d df       	rcall	.-198    	; 0x2dc <_Z10temperaturv>
		
		Sekunden = 0;
     3a2:	10 92 72 01 	sts	0x0172, r1
		Minuten++;
     3a6:	80 91 71 01 	lds	r24, 0x0171
     3aa:	8f 5f       	subi	r24, 0xFF	; 255
		if(Minuten >= 60){
     3ac:	8c 33       	cpi	r24, 0x3C	; 60
     3ae:	18 f4       	brcc	.+6      	; 0x3b6 <_Z4zeitv+0x22>
	if (Sekunden >= 60){
		//Temperatur bestimmen
		temperatur();
		
		Sekunden = 0;
		Minuten++;
     3b0:	80 93 71 01 	sts	0x0171, r24
     3b4:	07 c0       	rjmp	.+14     	; 0x3c4 <_Z4zeitv+0x30>
		if(Minuten >= 60){
			Minuten = 0;
     3b6:	10 92 71 01 	sts	0x0171, r1
			Stunden++;
     3ba:	80 91 70 01 	lds	r24, 0x0170
     3be:	8f 5f       	subi	r24, 0xFF	; 255
     3c0:	80 93 70 01 	sts	0x0170, r24
		}
		if(Stunden >= 24){
     3c4:	80 91 70 01 	lds	r24, 0x0170
     3c8:	88 31       	cpi	r24, 0x18	; 24
     3ca:	a0 f0       	brcs	.+40     	; 0x3f4 <_Z4zeitv+0x60>
			Stunden = 0;
     3cc:	10 92 70 01 	sts	0x0170, r1
			WochenTag++;
     3d0:	80 91 6f 01 	lds	r24, 0x016F
     3d4:	8f 5f       	subi	r24, 0xFF	; 255
     3d6:	80 93 6f 01 	sts	0x016F, r24
			Tag++;
     3da:	90 91 63 00 	lds	r25, 0x0063
     3de:	9f 5f       	subi	r25, 0xFF	; 255
     3e0:	90 93 63 00 	sts	0x0063, r25
			if (WochenTag>=7)
     3e4:	87 30       	cpi	r24, 0x07	; 7
     3e6:	10 f0       	brcs	.+4      	; 0x3ec <_Z4zeitv+0x58>
			{
				WochenTag=0;
     3e8:	10 92 6f 01 	sts	0x016F, r1
			{
				if (Tag==28)
				{
				}
			}*/
			Sekunden += sekoffset; //Ausgleich der VerlustSekunden
     3ec:	80 91 64 01 	lds	r24, 0x0164
     3f0:	80 93 72 01 	sts	0x0172, r24
		}
	}
	
	if(Wan==0)
     3f4:	80 91 6a 01 	lds	r24, 0x016A
     3f8:	81 11       	cpse	r24, r1
     3fa:	01 c0       	rjmp	.+2      	; 0x3fe <_Z4zeitv+0x6a>
	{
		Wecker();
     3fc:	47 df       	rcall	.-370    	; 0x28c <_Z6Weckerv>
     3fe:	08 95       	ret

00000400 <_Z4wtagh>:
		lcd_data(0b01000011); //C
	}
}

void wtag(uint8_t numm){
	switch (numm)
     400:	83 30       	cpi	r24, 0x03	; 3
     402:	b9 f0       	breq	.+46     	; 0x432 <_Z4wtagh+0x32>
     404:	20 f4       	brcc	.+8      	; 0x40e <_Z4wtagh+0xe>
     406:	81 30       	cpi	r24, 0x01	; 1
     408:	61 f0       	breq	.+24     	; 0x422 <_Z4wtagh+0x22>
     40a:	78 f4       	brcc	.+30     	; 0x42a <_Z4wtagh+0x2a>
     40c:	06 c0       	rjmp	.+12     	; 0x41a <_Z4wtagh+0x1a>
     40e:	85 30       	cpi	r24, 0x05	; 5
     410:	c1 f0       	breq	.+48     	; 0x442 <_Z4wtagh+0x42>
     412:	98 f0       	brcs	.+38     	; 0x43a <_Z4wtagh+0x3a>
     414:	86 30       	cpi	r24, 0x06	; 6
     416:	e1 f4       	brne	.+56     	; 0x450 <_Z4wtagh+0x50>
     418:	18 c0       	rjmp	.+48     	; 0x44a <_Z4wtagh+0x4a>
	{
		case 0:
		lcd_string("So ");
     41a:	85 e6       	ldi	r24, 0x65	; 101
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	1b df       	rcall	.-458    	; 0x256 <_Z10lcd_stringPKc>
		break;
     420:	08 95       	ret
		
		case 1:
		lcd_string("Mo ");
     422:	89 e6       	ldi	r24, 0x69	; 105
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	17 df       	rcall	.-466    	; 0x256 <_Z10lcd_stringPKc>
		break;
     428:	08 95       	ret
		
		case 2:
		lcd_string("Di ");
     42a:	8d e6       	ldi	r24, 0x6D	; 109
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	13 df       	rcall	.-474    	; 0x256 <_Z10lcd_stringPKc>
		break;
     430:	08 95       	ret
		
		case 3:
		lcd_string("Mi ");
     432:	81 e7       	ldi	r24, 0x71	; 113
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	0f df       	rcall	.-482    	; 0x256 <_Z10lcd_stringPKc>
		break;
     438:	08 95       	ret
		
		case 4:
		lcd_string("Do ");
     43a:	85 e7       	ldi	r24, 0x75	; 117
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	0b df       	rcall	.-490    	; 0x256 <_Z10lcd_stringPKc>
		break;
     440:	08 95       	ret
		
		case 5:
		lcd_string("Fr ");
     442:	89 e7       	ldi	r24, 0x79	; 121
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	07 df       	rcall	.-498    	; 0x256 <_Z10lcd_stringPKc>
		break;
     448:	08 95       	ret
		
		case 6:
		lcd_string("Sa ");
     44a:	8d e7       	ldi	r24, 0x7D	; 125
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	03 df       	rcall	.-506    	; 0x256 <_Z10lcd_stringPKc>
     450:	08 95       	ret

00000452 <_Z11Kalenderaush>:
			break;
	}
}

void Kalenderaus(uint8_t pos){
	switch (pos)
     452:	88 23       	and	r24, r24
     454:	19 f0       	breq	.+6      	; 0x45c <_Z11Kalenderaush+0xa>
     456:	81 30       	cpi	r24, 0x01	; 1
     458:	79 f5       	brne	.+94     	; 0x4b8 <__stack+0x59>
     45a:	2b c0       	rjmp	.+86     	; 0x4b2 <__stack+0x53>
	{
		case 0:
			//alles
			//Wochentag noch nach der alten Methode
			wtag(WochenTag);
     45c:	80 91 6f 01 	lds	r24, 0x016F
     460:	cf df       	rcall	.-98     	; 0x400 <_Z4wtagh>
			
			//Kalender als normale Tage, an sich nicht implementiert
			itoa(Tag,Buffer,10);
     462:	4a e0       	ldi	r20, 0x0A	; 10
     464:	50 e0       	ldi	r21, 0x00	; 0
     466:	60 e5       	ldi	r22, 0x50	; 80
     468:	71 e0       	ldi	r23, 0x01	; 1
     46a:	80 91 63 00 	lds	r24, 0x0063
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	95 d7       	rcall	.+3882   	; 0x139c <itoa>
			lcd_string(Buffer);
     472:	80 e5       	ldi	r24, 0x50	; 80
     474:	91 e0       	ldi	r25, 0x01	; 1
     476:	ef de       	rcall	.-546    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(".");
     478:	81 e8       	ldi	r24, 0x81	; 129
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	ec de       	rcall	.-552    	; 0x256 <_Z10lcd_stringPKc>
			itoa(Monat,Buffer,10);
     47e:	4a e0       	ldi	r20, 0x0A	; 10
     480:	50 e0       	ldi	r21, 0x00	; 0
     482:	60 e5       	ldi	r22, 0x50	; 80
     484:	71 e0       	ldi	r23, 0x01	; 1
     486:	80 91 62 00 	lds	r24, 0x0062
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	87 d7       	rcall	.+3854   	; 0x139c <itoa>
			lcd_string(Buffer);
     48e:	80 e5       	ldi	r24, 0x50	; 80
     490:	91 e0       	ldi	r25, 0x01	; 1
     492:	e1 de       	rcall	.-574    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(".");
     494:	81 e8       	ldi	r24, 0x81	; 129
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	de de       	rcall	.-580    	; 0x256 <_Z10lcd_stringPKc>
			itoa(Jahr,Buffer,10);
     49a:	4a e0       	ldi	r20, 0x0A	; 10
     49c:	50 e0       	ldi	r21, 0x00	; 0
     49e:	60 e5       	ldi	r22, 0x50	; 80
     4a0:	71 e0       	ldi	r23, 0x01	; 1
     4a2:	80 91 61 00 	lds	r24, 0x0061
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	79 d7       	rcall	.+3826   	; 0x139c <itoa>
			lcd_string(Buffer);
     4aa:	80 e5       	ldi	r24, 0x50	; 80
     4ac:	91 e0       	ldi	r25, 0x01	; 1
     4ae:	d3 de       	rcall	.-602    	; 0x256 <_Z10lcd_stringPKc>
			
			break;
     4b0:	08 95       	ret
		
		case 1:
			//Nur der Wochentag
			wtag(WochenTag);
     4b2:	80 91 6f 01 	lds	r24, 0x016F
     4b6:	a4 df       	rcall	.-184    	; 0x400 <_Z4wtagh>
     4b8:	08 95       	ret

000004ba <_Z7zeitaush>:
	}
	
}

void zeitaus(uint8_t pos){
	switch (pos)
     4ba:	88 23       	and	r24, r24
     4bc:	21 f0       	breq	.+8      	; 0x4c6 <_Z7zeitaush+0xc>
     4be:	81 30       	cpi	r24, 0x01	; 1
     4c0:	09 f0       	breq	.+2      	; 0x4c4 <_Z7zeitaush+0xa>
     4c2:	42 c0       	rjmp	.+132    	; 0x548 <_Z7zeitaush+0x8e>
     4c4:	1a c0       	rjmp	.+52     	; 0x4fa <_Z7zeitaush+0x40>
	{
		case 0:
			itoa( Stunden, Buffer, 10 );
     4c6:	4a e0       	ldi	r20, 0x0A	; 10
     4c8:	50 e0       	ldi	r21, 0x00	; 0
     4ca:	60 e5       	ldi	r22, 0x50	; 80
     4cc:	71 e0       	ldi	r23, 0x01	; 1
     4ce:	80 91 70 01 	lds	r24, 0x0170
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	63 d7       	rcall	.+3782   	; 0x139c <itoa>
			lcd_string(Buffer);
     4d6:	80 e5       	ldi	r24, 0x50	; 80
     4d8:	91 e0       	ldi	r25, 0x01	; 1
     4da:	bd de       	rcall	.-646    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     4dc:	8c ec       	ldi	r24, 0xCC	; 204
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	ba de       	rcall	.-652    	; 0x256 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     4e2:	4a e0       	ldi	r20, 0x0A	; 10
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e5       	ldi	r22, 0x50	; 80
     4e8:	71 e0       	ldi	r23, 0x01	; 1
     4ea:	80 91 71 01 	lds	r24, 0x0171
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	55 d7       	rcall	.+3754   	; 0x139c <itoa>
			lcd_string(Buffer);
     4f2:	80 e5       	ldi	r24, 0x50	; 80
     4f4:	91 e0       	ldi	r25, 0x01	; 1
     4f6:	af de       	rcall	.-674    	; 0x256 <_Z10lcd_stringPKc>
			
			break;
     4f8:	08 95       	ret
		
		case 1:
			itoa( Stunden, Buffer, 10 );
     4fa:	4a e0       	ldi	r20, 0x0A	; 10
     4fc:	50 e0       	ldi	r21, 0x00	; 0
     4fe:	60 e5       	ldi	r22, 0x50	; 80
     500:	71 e0       	ldi	r23, 0x01	; 1
     502:	80 91 70 01 	lds	r24, 0x0170
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	49 d7       	rcall	.+3730   	; 0x139c <itoa>
			lcd_string(Buffer);
     50a:	80 e5       	ldi	r24, 0x50	; 80
     50c:	91 e0       	ldi	r25, 0x01	; 1
     50e:	a3 de       	rcall	.-698    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     510:	8c ec       	ldi	r24, 0xCC	; 204
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	a0 de       	rcall	.-704    	; 0x256 <_Z10lcd_stringPKc>
			itoa( Minuten, Buffer, 10);
     516:	4a e0       	ldi	r20, 0x0A	; 10
     518:	50 e0       	ldi	r21, 0x00	; 0
     51a:	60 e5       	ldi	r22, 0x50	; 80
     51c:	71 e0       	ldi	r23, 0x01	; 1
     51e:	80 91 71 01 	lds	r24, 0x0171
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	3b d7       	rcall	.+3702   	; 0x139c <itoa>
			lcd_string(Buffer);
     526:	80 e5       	ldi	r24, 0x50	; 80
     528:	91 e0       	ldi	r25, 0x01	; 1
     52a:	95 de       	rcall	.-726    	; 0x256 <_Z10lcd_stringPKc>
			lcd_string(":");
     52c:	8c ec       	ldi	r24, 0xCC	; 204
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	92 de       	rcall	.-732    	; 0x256 <_Z10lcd_stringPKc>
			itoa(Sekunden, Buffer,10);
     532:	4a e0       	ldi	r20, 0x0A	; 10
     534:	50 e0       	ldi	r21, 0x00	; 0
     536:	60 e5       	ldi	r22, 0x50	; 80
     538:	71 e0       	ldi	r23, 0x01	; 1
     53a:	80 91 72 01 	lds	r24, 0x0172
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	2d d7       	rcall	.+3674   	; 0x139c <itoa>
			lcd_string(Buffer);
     542:	80 e5       	ldi	r24, 0x50	; 80
     544:	91 e0       	ldi	r25, 0x01	; 1
     546:	87 de       	rcall	.-754    	; 0x256 <_Z10lcd_stringPKc>
     548:	08 95       	ret

0000054a <_Z3aushh>:
		default:
		break;
	}
}

void aus(uint8_t zeile, uint8_t pos){
     54a:	0f 93       	push	r16
     54c:	1f 93       	push	r17
     54e:	cf 93       	push	r28
     550:	c6 2f       	mov	r28, r22
	
	switch (zeile)
     552:	81 30       	cpi	r24, 0x01	; 1
     554:	21 f0       	breq	.+8      	; 0x55e <_Z3aushh+0x14>
     556:	82 30       	cpi	r24, 0x02	; 2
     558:	09 f0       	breq	.+2      	; 0x55c <_Z3aushh+0x12>
     55a:	6d c0       	rjmp	.+218    	; 0x636 <_Z3aushh+0xec>
     55c:	54 c0       	rjmp	.+168    	; 0x606 <_Z3aushh+0xbc>
	{
		case 1:
			lcd_clear();
     55e:	29 de       	rcall	.-942    	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     560:	5f de       	rcall	.-834    	; 0x220 <_Z8lcd_homev>
			switch (pos)
     562:	c3 30       	cpi	r28, 0x03	; 3
     564:	f9 f0       	breq	.+62     	; 0x5a4 <_Z3aushh+0x5a>
     566:	20 f4       	brcc	.+8      	; 0x570 <_Z3aushh+0x26>
     568:	c1 30       	cpi	r28, 0x01	; 1
     56a:	89 f0       	breq	.+34     	; 0x58e <_Z3aushh+0x44>
     56c:	c0 f4       	brcc	.+48     	; 0x59e <_Z3aushh+0x54>
     56e:	07 c0       	rjmp	.+14     	; 0x57e <_Z3aushh+0x34>
     570:	c5 30       	cpi	r28, 0x05	; 5
     572:	39 f1       	breq	.+78     	; 0x5c2 <_Z3aushh+0x78>
     574:	e0 f0       	brcs	.+56     	; 0x5ae <_Z3aushh+0x64>
     576:	c6 30       	cpi	r28, 0x06	; 6
     578:	09 f0       	breq	.+2      	; 0x57c <_Z3aushh+0x32>
     57a:	5d c0       	rjmp	.+186    	; 0x636 <_Z3aushh+0xec>
     57c:	3f c0       	rjmp	.+126    	; 0x5fc <_Z3aushh+0xb2>
			{
				case 0:
					//Alles ohne Sekunden
					Kalenderaus(0);
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	68 df       	rcall	.-304    	; 0x452 <_Z11Kalenderaush>
					lcd_string(" ");
     582:	83 ea       	ldi	r24, 0xA3	; 163
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	67 de       	rcall	.-818    	; 0x256 <_Z10lcd_stringPKc>
					zeitaus(0);
     588:	80 e0       	ldi	r24, 0x00	; 0
     58a:	97 df       	rcall	.-210    	; 0x4ba <_Z7zeitaush>
					
					break;
     58c:	54 c0       	rjmp	.+168    	; 0x636 <_Z3aushh+0xec>
					
				case 1:
					//Alles
					Kalenderaus(0);
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	60 df       	rcall	.-320    	; 0x452 <_Z11Kalenderaush>
					lcd_string(" ");
     592:	83 ea       	ldi	r24, 0xA3	; 163
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	5f de       	rcall	.-834    	; 0x256 <_Z10lcd_stringPKc>
					zeitaus(1);
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	8f df       	rcall	.-226    	; 0x4ba <_Z7zeitaush>
					
					break;
     59c:	4c c0       	rjmp	.+152    	; 0x636 <_Z3aushh+0xec>
				case 2:
					//Nur Kalender
					Kalenderaus(0);
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	58 df       	rcall	.-336    	; 0x452 <_Z11Kalenderaush>
					
					break;
     5a2:	49 c0       	rjmp	.+146    	; 0x636 <_Z3aushh+0xec>
				case 3:
					//Nur Zeit mit Sekunden mit WDAY
					Kalenderaus(1);
     5a4:	81 e0       	ldi	r24, 0x01	; 1
     5a6:	55 df       	rcall	.-342    	; 0x452 <_Z11Kalenderaush>
					zeitaus(1);
     5a8:	81 e0       	ldi	r24, 0x01	; 1
     5aa:	87 df       	rcall	.-242    	; 0x4ba <_Z7zeitaush>
					
					break;
     5ac:	44 c0       	rjmp	.+136    	; 0x636 <_Z3aushh+0xec>
					
				case 4:
					lcd_string("Guten Tag");
     5ae:	83 e8       	ldi	r24, 0x83	; 131
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	51 de       	rcall	.-862    	; 0x256 <_Z10lcd_stringPKc>
					lcd_setcursor(0,2);
     5b4:	62 e0       	ldi	r22, 0x02	; 2
     5b6:	80 e0       	ldi	r24, 0x00	; 0
     5b8:	3a de       	rcall	.-908    	; 0x22e <_Z13lcd_setcursorhh>
					lcd_string("Wecker start");
     5ba:	8d e8       	ldi	r24, 0x8D	; 141
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	4b de       	rcall	.-874    	; 0x256 <_Z10lcd_stringPKc>
					
					break;
     5c0:	3a c0       	rjmp	.+116    	; 0x636 <_Z3aushh+0xec>
				
				case 5:
					//Wecker
					lcd_string("Weckzeit: ");
     5c2:	8a e9       	ldi	r24, 0x9A	; 154
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	47 de       	rcall	.-882    	; 0x256 <_Z10lcd_stringPKc>
					itoa(WStunden[0],Buffer,10);
     5c8:	4a e0       	ldi	r20, 0x0A	; 10
     5ca:	50 e0       	ldi	r21, 0x00	; 0
     5cc:	60 e5       	ldi	r22, 0x50	; 80
     5ce:	71 e0       	ldi	r23, 0x01	; 1
     5d0:	80 91 6d 01 	lds	r24, 0x016D
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	e2 d6       	rcall	.+3524   	; 0x139c <itoa>
					lcd_string(Buffer);
     5d8:	80 e5       	ldi	r24, 0x50	; 80
     5da:	91 e0       	ldi	r25, 0x01	; 1
     5dc:	3c de       	rcall	.-904    	; 0x256 <_Z10lcd_stringPKc>
					lcd_string(":");
     5de:	8c ec       	ldi	r24, 0xCC	; 204
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	39 de       	rcall	.-910    	; 0x256 <_Z10lcd_stringPKc>
					itoa(WMinuten[0],Buffer,10);
     5e4:	4a e0       	ldi	r20, 0x0A	; 10
     5e6:	50 e0       	ldi	r21, 0x00	; 0
     5e8:	60 e5       	ldi	r22, 0x50	; 80
     5ea:	71 e0       	ldi	r23, 0x01	; 1
     5ec:	80 91 6b 01 	lds	r24, 0x016B
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	d4 d6       	rcall	.+3496   	; 0x139c <itoa>
					lcd_string(Buffer);
     5f4:	80 e5       	ldi	r24, 0x50	; 80
     5f6:	91 e0       	ldi	r25, 0x01	; 1
     5f8:	2e de       	rcall	.-932    	; 0x256 <_Z10lcd_stringPKc>
					
					break;
     5fa:	1d c0       	rjmp	.+58     	; 0x636 <_Z3aushh+0xec>
					
				case 6:
					//Zeit ohne Sekunden mit WDAY
					Kalenderaus(1);
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	29 df       	rcall	.-430    	; 0x452 <_Z11Kalenderaush>
					zeitaus(0);
     600:	80 e0       	ldi	r24, 0x00	; 0
     602:	5b df       	rcall	.-330    	; 0x4ba <_Z7zeitaush>
					
					break;
     604:	18 c0       	rjmp	.+48     	; 0x636 <_Z3aushh+0xec>
			}
			break;
			
		case 2:
			lcd_setcursor(0,2);
     606:	62 e0       	ldi	r22, 0x02	; 2
     608:	80 e0       	ldi	r24, 0x00	; 0
     60a:	11 de       	rcall	.-990    	; 0x22e <_Z13lcd_setcursorhh>
				switch (pos)
     60c:	c1 30       	cpi	r28, 0x01	; 1
     60e:	99 f4       	brne	.+38     	; 0x636 <_Z3aushh+0xec>
					
						break;
						
					case 1:
						//Temperatur
						dtostrf(tempera,2,2,Buffer);
     610:	60 91 65 01 	lds	r22, 0x0165
     614:	70 91 66 01 	lds	r23, 0x0166
     618:	80 91 67 01 	lds	r24, 0x0167
     61c:	90 91 68 01 	lds	r25, 0x0168
     620:	00 e5       	ldi	r16, 0x50	; 80
     622:	11 e0       	ldi	r17, 0x01	; 1
     624:	22 e0       	ldi	r18, 0x02	; 2
     626:	42 e0       	ldi	r20, 0x02	; 2
     628:	99 d6       	rcall	.+3378   	; 0x135c <dtostrf>
						lcd_string(Buffer);
     62a:	c8 01       	movw	r24, r16
     62c:	14 de       	rcall	.-984    	; 0x256 <_Z10lcd_stringPKc>
						lcd_data(0b11011111); //°
     62e:	8f ed       	ldi	r24, 0xDF	; 223
     630:	a4 dd       	rcall	.-1208   	; 0x17a <_Z8lcd_datah>
						lcd_data(0b01000011); //C
     632:	83 e4       	ldi	r24, 0x43	; 67
     634:	a2 dd       	rcall	.-1212   	; 0x17a <_Z8lcd_datah>
						
						break;
				}
			break;
	}
}
     636:	cf 91       	pop	r28
     638:	1f 91       	pop	r17
     63a:	0f 91       	pop	r16
     63c:	08 95       	ret

0000063e <_Z8erhoehenPhhhPKc>:
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	e9 01       	movw	r28, r18
     644:	82 99       	sbic	0x10, 2	; 16
     646:	25 c0       	rjmp	.+74     	; 0x692 <_Z8erhoehenPhhhPKc+0x54>
     648:	ef ef       	ldi	r30, 0xFF	; 255
     64a:	f3 eb       	ldi	r31, 0xB3	; 179
     64c:	31 97       	sbiw	r30, 0x01	; 1
     64e:	f1 f7       	brne	.-4      	; 0x64c <_Z8erhoehenPhhhPKc+0xe>
     650:	00 c0       	rjmp	.+0      	; 0x652 <_Z8erhoehenPhhhPKc+0x14>
     652:	00 00       	nop
     654:	ef ef       	ldi	r30, 0xFF	; 255
     656:	f3 e2       	ldi	r31, 0x23	; 35
     658:	31 97       	sbiw	r30, 0x01	; 1
     65a:	f1 f7       	brne	.-4      	; 0x658 <_Z8erhoehenPhhhPKc+0x1a>
     65c:	00 c0       	rjmp	.+0      	; 0x65e <_Z8erhoehenPhhhPKc+0x20>
     65e:	00 00       	nop
	if(debounce(&PIND,2))
     660:	82 99       	sbic	0x10, 2	; 16
     662:	17 c0       	rjmp	.+46     	; 0x692 <_Z8erhoehenPhhhPKc+0x54>
	{
		*var +=1 ;
     664:	fc 01       	movw	r30, r24
     666:	20 81       	ld	r18, Z
     668:	2f 5f       	subi	r18, 0xFF	; 255
		if(*var>=obergrenze){
     66a:	26 17       	cp	r18, r22
     66c:	10 f4       	brcc	.+4      	; 0x672 <_Z8erhoehenPhhhPKc+0x34>
//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
	if(debounce(&PIND,2))
	{
		*var +=1 ;
     66e:	20 83       	st	Z, r18
     670:	02 c0       	rjmp	.+4      	; 0x676 <_Z8erhoehenPhhhPKc+0x38>
		if(*var>=obergrenze){
			*var=0;
     672:	fc 01       	movw	r30, r24
     674:	10 82       	st	Z, r1
		}
		aus(1,pos);
     676:	64 2f       	mov	r22, r20
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	67 df       	rcall	.-306    	; 0x54a <_Z3aushh>
		aus(2,0);
     67c:	60 e0       	ldi	r22, 0x00	; 0
     67e:	82 e0       	ldi	r24, 0x02	; 2
     680:	64 df       	rcall	.-312    	; 0x54a <_Z3aushh>
		while( *data != '\0' )
     682:	88 81       	ld	r24, Y
     684:	88 23       	and	r24, r24
     686:	29 f0       	breq	.+10     	; 0x692 <_Z8erhoehenPhhhPKc+0x54>
	
}

//Funktion um eine Variable, die mit Adreesse uebergeben wird zu erhoehen
//erhoeht wird erst, wenn die richtige Taste gedrueckt wird
void erhoehen(uint8_t *var, uint8_t obergrenze, uint8_t pos, const char *data){
     688:	21 96       	adiw	r28, 0x01	; 1
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
		lcd_data( *data++ );
     68a:	77 dd       	rcall	.-1298   	; 0x17a <_Z8lcd_datah>
		if(*var>=obergrenze){
			*var=0;
		}
		aus(1,pos);
		aus(2,0);
		while( *data != '\0' )
     68c:	89 91       	ld	r24, Y+
     68e:	81 11       	cpse	r24, r1
     690:	fc cf       	rjmp	.-8      	; 0x68a <_Z8erhoehenPhhhPKc+0x4c>
		lcd_data( *data++ );
		
	}
}
     692:	df 91       	pop	r29
     694:	cf 91       	pop	r28
     696:	08 95       	ret

00000698 <_Z5einsth>:


//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
     698:	1f 93       	push	r17
     69a:	cf 93       	push	r28
     69c:	df 93       	push	r29
	uint8_t temp=0;
	//abfrage wass eingestellt werden soll
	switch (posit)
     69e:	82 30       	cpi	r24, 0x02	; 2
     6a0:	09 f4       	brne	.+2      	; 0x6a4 <_Z5einsth+0xc>
     6a2:	b7 c0       	rjmp	.+366    	; 0x812 <_Z5einsth+0x17a>
     6a4:	30 f4       	brcc	.+12     	; 0x6b2 <_Z5einsth+0x1a>
     6a6:	88 23       	and	r24, r24
     6a8:	69 f0       	breq	.+26     	; 0x6c4 <_Z5einsth+0x2c>
     6aa:	81 30       	cpi	r24, 0x01	; 1
     6ac:	09 f0       	breq	.+2      	; 0x6b0 <_Z5einsth+0x18>
     6ae:	f3 c1       	rjmp	.+998    	; 0xa96 <_Z5einsth+0x3fe>
     6b0:	65 c0       	rjmp	.+202    	; 0x77c <_Z5einsth+0xe4>
     6b2:	84 30       	cpi	r24, 0x04	; 4
     6b4:	09 f4       	brne	.+2      	; 0x6b8 <_Z5einsth+0x20>
     6b6:	4b c1       	rjmp	.+662    	; 0x94e <_Z5einsth+0x2b6>
     6b8:	08 f4       	brcc	.+2      	; 0x6bc <_Z5einsth+0x24>
     6ba:	fa c0       	rjmp	.+500    	; 0x8b0 <_Z5einsth+0x218>
     6bc:	85 30       	cpi	r24, 0x05	; 5
     6be:	09 f0       	breq	.+2      	; 0x6c2 <_Z5einsth+0x2a>
     6c0:	ea c1       	rjmp	.+980    	; 0xa96 <_Z5einsth+0x3fe>
     6c2:	97 c1       	rjmp	.+814    	; 0x9f2 <_Z5einsth+0x35a>
	{
	case 0:
		//Einstellen Zeit
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,6);
     6c4:	66 e0       	ldi	r22, 0x06	; 6
     6c6:	81 e0       	ldi	r24, 0x01	; 1
     6c8:	40 df       	rcall	.-384    	; 0x54a <_Z3aushh>
		aus(2,0);
     6ca:	60 e0       	ldi	r22, 0x00	; 0
     6cc:	82 e0       	ldi	r24, 0x02	; 2
     6ce:	3d df       	rcall	.-390    	; 0x54a <_Z3aushh>
		lcd_string(NAME(Stunden));
     6d0:	85 ea       	ldi	r24, 0xA5	; 165
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	c0 dd       	rcall	.-1152   	; 0x256 <_Z10lcd_stringPKc>

//return 0 fuer kein Problem
//return 1 fuer falsche Eingabe

uint8_t einst(uint8_t posit){
	uint8_t temp=0;
     6d6:	c0 e0       	ldi	r28, 0x00	; 0
     6d8:	83 99       	sbic	0x10, 3	; 16
     6da:	28 c0       	rjmp	.+80     	; 0x72c <_Z5einsth+0x94>
     6dc:	8f ef       	ldi	r24, 0xFF	; 255
     6de:	93 eb       	ldi	r25, 0xB3	; 179
     6e0:	01 97       	sbiw	r24, 0x01	; 1
     6e2:	f1 f7       	brne	.-4      	; 0x6e0 <_Z5einsth+0x48>
     6e4:	00 c0       	rjmp	.+0      	; 0x6e6 <_Z5einsth+0x4e>
     6e6:	00 00       	nop
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	93 e2       	ldi	r25, 0x23	; 35
     6ec:	01 97       	sbiw	r24, 0x01	; 1
     6ee:	f1 f7       	brne	.-4      	; 0x6ec <_Z5einsth+0x54>
     6f0:	00 c0       	rjmp	.+0      	; 0x6f2 <_Z5einsth+0x5a>
     6f2:	00 00       	nop
		aus(1,6);
		aus(2,0);
		lcd_string(NAME(Stunden));
		while(temp<3)
		{
			if(debounce(&PIND,3))
     6f4:	83 99       	sbic	0x10, 3	; 16
     6f6:	1a c0       	rjmp	.+52     	; 0x72c <_Z5einsth+0x94>
			{
				temp++;
     6f8:	cf 5f       	subi	r28, 0xFF	; 255
				lcd_clear();
     6fa:	5b dd       	rcall	.-1354   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,6);
     6fc:	66 e0       	ldi	r22, 0x06	; 6
     6fe:	81 e0       	ldi	r24, 0x01	; 1
     700:	24 df       	rcall	.-440    	; 0x54a <_Z3aushh>
				aus(2,0);
     702:	60 e0       	ldi	r22, 0x00	; 0
     704:	82 e0       	ldi	r24, 0x02	; 2
     706:	21 df       	rcall	.-446    	; 0x54a <_Z3aushh>
				switch (temp)
     708:	c1 30       	cpi	r28, 0x01	; 1
     70a:	41 f0       	breq	.+16     	; 0x71c <_Z5einsth+0x84>
     70c:	18 f0       	brcs	.+6      	; 0x714 <_Z5einsth+0x7c>
     70e:	c2 30       	cpi	r28, 0x02	; 2
     710:	69 f4       	brne	.+26     	; 0x72c <_Z5einsth+0x94>
     712:	08 c0       	rjmp	.+16     	; 0x724 <_Z5einsth+0x8c>
				{
					case 0:
						lcd_string(NAME(Stunden));
     714:	85 ea       	ldi	r24, 0xA5	; 165
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	9e dd       	rcall	.-1220   	; 0x256 <_Z10lcd_stringPKc>
     71a:	0e c0       	rjmp	.+28     	; 0x738 <_Z5einsth+0xa0>
						break;
					case 1:
						lcd_string(NAME(Minuten));
     71c:	8d ea       	ldi	r24, 0xAD	; 173
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	9a dd       	rcall	.-1228   	; 0x256 <_Z10lcd_stringPKc>
     722:	13 c0       	rjmp	.+38     	; 0x74a <_Z5einsth+0xb2>
						break;
					case 2:
						lcd_string(NAME(WochenTag));
     724:	85 eb       	ldi	r24, 0xB5	; 181
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	96 dd       	rcall	.-1236   	; 0x256 <_Z10lcd_stringPKc>
     72a:	18 c0       	rjmp	.+48     	; 0x75c <_Z5einsth+0xc4>
				zeit();
				//ausgabe(0);
				//Es muss eine richtge Ausgabe speziell fuer dieses Einstellung geschrieben werden
				//besonders wichtig ist, dass die alte Ausgaba ersetzt werden muss
			}*/
			switch (temp)
     72c:	c1 30       	cpi	r28, 0x01	; 1
     72e:	69 f0       	breq	.+26     	; 0x74a <_Z5einsth+0xb2>
     730:	18 f0       	brcs	.+6      	; 0x738 <_Z5einsth+0xa0>
     732:	c2 30       	cpi	r28, 0x02	; 2
     734:	e1 f4       	brne	.+56     	; 0x76e <_Z5einsth+0xd6>
     736:	12 c0       	rjmp	.+36     	; 0x75c <_Z5einsth+0xc4>
			{
			case 0:
				erhoehen(&Stunden,60,6,NAME(Stunden));
     738:	25 ea       	ldi	r18, 0xA5	; 165
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	46 e0       	ldi	r20, 0x06	; 6
     73e:	6c e3       	ldi	r22, 0x3C	; 60
     740:	80 e7       	ldi	r24, 0x70	; 112
     742:	91 e0       	ldi	r25, 0x01	; 1
     744:	7c df       	rcall	.-264    	; 0x63e <_Z8erhoehenPhhhPKc>
				break;
     746:	c0 e0       	ldi	r28, 0x00	; 0
     748:	c7 cf       	rjmp	.-114    	; 0x6d8 <_Z5einsth+0x40>
			case 1:
				erhoehen(&Minuten,60,6,NAME(Minuten));
     74a:	2d ea       	ldi	r18, 0xAD	; 173
     74c:	30 e0       	ldi	r19, 0x00	; 0
     74e:	46 e0       	ldi	r20, 0x06	; 6
     750:	6c e3       	ldi	r22, 0x3C	; 60
     752:	81 e7       	ldi	r24, 0x71	; 113
     754:	91 e0       	ldi	r25, 0x01	; 1
     756:	73 df       	rcall	.-282    	; 0x63e <_Z8erhoehenPhhhPKc>
				break;
     758:	c1 e0       	ldi	r28, 0x01	; 1
     75a:	be cf       	rjmp	.-132    	; 0x6d8 <_Z5einsth+0x40>
			case 2:
				//nur jetzt WochenTag
				erhoehen(&WochenTag,7,6,NAME(WochenTag));
     75c:	25 eb       	ldi	r18, 0xB5	; 181
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	46 e0       	ldi	r20, 0x06	; 6
     762:	67 e0       	ldi	r22, 0x07	; 7
     764:	8f e6       	ldi	r24, 0x6F	; 111
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	6a df       	rcall	.-300    	; 0x63e <_Z8erhoehenPhhhPKc>
				break;
     76a:	c2 e0       	ldi	r28, 0x02	; 2
     76c:	b5 cf       	rjmp	.-150    	; 0x6d8 <_Z5einsth+0x40>
		//alles einstellen bis auf Sekunden
		//diese werden auf 0 gesetzt
		aus(1,6);
		aus(2,0);
		lcd_string(NAME(Stunden));
		while(temp<3)
     76e:	c3 30       	cpi	r28, 0x03	; 3
     770:	08 f4       	brcc	.+2      	; 0x774 <_Z5einsth+0xdc>
     772:	b2 cf       	rjmp	.-156    	; 0x6d8 <_Z5einsth+0x40>
				break;
			default:
				break;
			}
		}
		Sekunden=0;
     774:	10 92 72 01 	sts	0x0172, r1
		return 0;
     778:	80 e0       	ldi	r24, 0x00	; 0
     77a:	a0 c1       	rjmp	.+832    	; 0xabc <_Z5einsth+0x424>
		break;
	case 1:
		//Einstellen der Lampenstärke
		//default=1
		temp = 0;
		lcd_clear();
     77c:	1a dd       	rcall	.-1484   	; 0x1b2 <_Z9lcd_clearv>
		lcd_home();
     77e:	50 dd       	rcall	.-1376   	; 0x220 <_Z8lcd_homev>
		lcd_string("Lampenstärke:");
     780:	8f eb       	ldi	r24, 0xBF	; 191
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	68 dd       	rcall	.-1328   	; 0x256 <_Z10lcd_stringPKc>
		aus(2,0);
     786:	60 e0       	ldi	r22, 0x00	; 0
     788:	82 e0       	ldi	r24, 0x02	; 2
     78a:	df de       	rcall	.-578    	; 0x54a <_Z3aushh>
		itoa(lampenstaerke,Buffer,10);
     78c:	4a e0       	ldi	r20, 0x0A	; 10
     78e:	50 e0       	ldi	r21, 0x00	; 0
     790:	60 e5       	ldi	r22, 0x50	; 80
     792:	71 e0       	ldi	r23, 0x01	; 1
     794:	80 91 60 00 	lds	r24, 0x0060
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	00 d6       	rcall	.+3072   	; 0x139c <itoa>
		lcd_string(Buffer);
     79c:	80 e5       	ldi	r24, 0x50	; 80
     79e:	91 e0       	ldi	r25, 0x01	; 1
     7a0:	5a dd       	rcall	.-1356   	; 0x256 <_Z10lcd_stringPKc>
		if(Sekunden!=sektemp){
     7a2:	90 91 72 01 	lds	r25, 0x0172
     7a6:	80 91 69 01 	lds	r24, 0x0169
     7aa:	98 13       	cpse	r25, r24
			zeit();
     7ac:	f3 dd       	rcall	.-1050   	; 0x394 <_Z4zeitv>
     7ae:	82 99       	sbic	0x10, 2	; 16
     7b0:	74 c1       	rjmp	.+744    	; 0xa9a <_Z5einsth+0x402>
     7b2:	8f ef       	ldi	r24, 0xFF	; 255
     7b4:	93 eb       	ldi	r25, 0xB3	; 179
     7b6:	01 97       	sbiw	r24, 0x01	; 1
     7b8:	f1 f7       	brne	.-4      	; 0x7b6 <_Z5einsth+0x11e>
     7ba:	00 c0       	rjmp	.+0      	; 0x7bc <_Z5einsth+0x124>
     7bc:	00 00       	nop
     7be:	8f ef       	ldi	r24, 0xFF	; 255
     7c0:	93 e2       	ldi	r25, 0x23	; 35
     7c2:	01 97       	sbiw	r24, 0x01	; 1
     7c4:	f1 f7       	brne	.-4      	; 0x7c2 <_Z5einsth+0x12a>
     7c6:	00 c0       	rjmp	.+0      	; 0x7c8 <_Z5einsth+0x130>
     7c8:	00 00       	nop
		}
		if(debounce(&PIND,2))
     7ca:	82 99       	sbic	0x10, 2	; 16
     7cc:	68 c1       	rjmp	.+720    	; 0xa9e <_Z5einsth+0x406>
		{
			lampenstaerke++;
     7ce:	80 91 60 00 	lds	r24, 0x0060
     7d2:	8f 5f       	subi	r24, 0xFF	; 255
     7d4:	80 93 60 00 	sts	0x0060, r24
			lcd_clear();
     7d8:	ec dc       	rcall	.-1576   	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     7da:	22 dd       	rcall	.-1468   	; 0x220 <_Z8lcd_homev>
			lcd_string("Lampenstärke:");
     7dc:	8f eb       	ldi	r24, 0xBF	; 191
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	3a dd       	rcall	.-1420   	; 0x256 <_Z10lcd_stringPKc>
			aus(2,0);
     7e2:	60 e0       	ldi	r22, 0x00	; 0
     7e4:	82 e0       	ldi	r24, 0x02	; 2
     7e6:	b1 de       	rcall	.-670    	; 0x54a <_Z3aushh>
			itoa(lampenstaerke,Buffer,10);
     7e8:	4a e0       	ldi	r20, 0x0A	; 10
     7ea:	50 e0       	ldi	r21, 0x00	; 0
     7ec:	60 e5       	ldi	r22, 0x50	; 80
     7ee:	71 e0       	ldi	r23, 0x01	; 1
     7f0:	80 91 60 00 	lds	r24, 0x0060
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	d2 d5       	rcall	.+2980   	; 0x139c <itoa>
			lcd_string(Buffer);
     7f8:	80 e5       	ldi	r24, 0x50	; 80
     7fa:	91 e0       	ldi	r25, 0x01	; 1
     7fc:	2c dd       	rcall	.-1448   	; 0x256 <_Z10lcd_stringPKc>
			
			if (lampenstaerke>=3)
     7fe:	80 91 60 00 	lds	r24, 0x0060
     802:	83 30       	cpi	r24, 0x03	; 3
     804:	08 f4       	brcc	.+2      	; 0x808 <_Z5einsth+0x170>
     806:	4d c1       	rjmp	.+666    	; 0xaa2 <_Z5einsth+0x40a>
			{
				lampenstaerke=1;
     808:	81 e0       	ldi	r24, 0x01	; 1
     80a:	80 93 60 00 	sts	0x0060, r24
			}
			
		}
		return 0;
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	55 c1       	rjmp	.+682    	; 0xabc <_Z5einsth+0x424>
		break;
	case 2:
		//Einstellen Sekundenoffset
		//default =0
		lcd_clear();
     812:	cf dc       	rcall	.-1634   	; 0x1b2 <_Z9lcd_clearv>
		lcd_home();
     814:	05 dd       	rcall	.-1526   	; 0x220 <_Z8lcd_homev>
		lcd_string("Sekundenoffset:");
     816:	8e ec       	ldi	r24, 0xCE	; 206
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	1d dd       	rcall	.-1478   	; 0x256 <_Z10lcd_stringPKc>
		aus(2,0);
     81c:	60 e0       	ldi	r22, 0x00	; 0
     81e:	82 e0       	ldi	r24, 0x02	; 2
     820:	94 de       	rcall	.-728    	; 0x54a <_Z3aushh>
		itoa(sekoffset,Buffer,10);
     822:	80 91 64 01 	lds	r24, 0x0164
     826:	4a e0       	ldi	r20, 0x0A	; 10
     828:	50 e0       	ldi	r21, 0x00	; 0
     82a:	60 e5       	ldi	r22, 0x50	; 80
     82c:	71 e0       	ldi	r23, 0x01	; 1
     82e:	99 27       	eor	r25, r25
     830:	87 fd       	sbrc	r24, 7
     832:	90 95       	com	r25
     834:	b3 d5       	rcall	.+2918   	; 0x139c <itoa>
		lcd_string(Buffer);
     836:	80 e5       	ldi	r24, 0x50	; 80
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	0d dd       	rcall	.-1510   	; 0x256 <_Z10lcd_stringPKc>
		if(Sekunden!=sektemp){
     83c:	90 91 72 01 	lds	r25, 0x0172
     840:	80 91 69 01 	lds	r24, 0x0169
     844:	98 13       	cpse	r25, r24
			zeit();
     846:	a6 dd       	rcall	.-1204   	; 0x394 <_Z4zeitv>
     848:	82 99       	sbic	0x10, 2	; 16
     84a:	2d c1       	rjmp	.+602    	; 0xaa6 <_Z5einsth+0x40e>
     84c:	8f ef       	ldi	r24, 0xFF	; 255
     84e:	93 eb       	ldi	r25, 0xB3	; 179
     850:	01 97       	sbiw	r24, 0x01	; 1
     852:	f1 f7       	brne	.-4      	; 0x850 <_Z5einsth+0x1b8>
     854:	00 c0       	rjmp	.+0      	; 0x856 <_Z5einsth+0x1be>
     856:	00 00       	nop
     858:	8f ef       	ldi	r24, 0xFF	; 255
     85a:	93 e2       	ldi	r25, 0x23	; 35
     85c:	01 97       	sbiw	r24, 0x01	; 1
     85e:	f1 f7       	brne	.-4      	; 0x85c <_Z5einsth+0x1c4>
     860:	00 c0       	rjmp	.+0      	; 0x862 <_Z5einsth+0x1ca>
     862:	00 00       	nop
		}
		if(debounce(&PIND,2))
     864:	82 99       	sbic	0x10, 2	; 16
     866:	21 c1       	rjmp	.+578    	; 0xaaa <_Z5einsth+0x412>
		{
			sekoffset++;
     868:	80 91 64 01 	lds	r24, 0x0164
     86c:	8f 5f       	subi	r24, 0xFF	; 255
     86e:	80 93 64 01 	sts	0x0164, r24
			lcd_clear();
     872:	9f dc       	rcall	.-1730   	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     874:	d5 dc       	rcall	.-1622   	; 0x220 <_Z8lcd_homev>
			lcd_string("Sekundenoffset:");
     876:	8e ec       	ldi	r24, 0xCE	; 206
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	ed dc       	rcall	.-1574   	; 0x256 <_Z10lcd_stringPKc>
			aus(2,0);
     87c:	60 e0       	ldi	r22, 0x00	; 0
     87e:	82 e0       	ldi	r24, 0x02	; 2
     880:	64 de       	rcall	.-824    	; 0x54a <_Z3aushh>
			itoa(sekoffset,Buffer,10);
     882:	80 91 64 01 	lds	r24, 0x0164
     886:	4a e0       	ldi	r20, 0x0A	; 10
     888:	50 e0       	ldi	r21, 0x00	; 0
     88a:	60 e5       	ldi	r22, 0x50	; 80
     88c:	71 e0       	ldi	r23, 0x01	; 1
     88e:	99 27       	eor	r25, r25
     890:	87 fd       	sbrc	r24, 7
     892:	90 95       	com	r25
     894:	83 d5       	rcall	.+2822   	; 0x139c <itoa>
			lcd_string(Buffer);
     896:	80 e5       	ldi	r24, 0x50	; 80
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	dd dc       	rcall	.-1606   	; 0x256 <_Z10lcd_stringPKc>
			
			if (sekoffset>=5)
     89c:	80 91 64 01 	lds	r24, 0x0164
     8a0:	85 30       	cpi	r24, 0x05	; 5
     8a2:	0c f4       	brge	.+2      	; 0x8a6 <_Z5einsth+0x20e>
     8a4:	04 c1       	rjmp	.+520    	; 0xaae <_Z5einsth+0x416>
			{
				sekoffset=-5;
     8a6:	8b ef       	ldi	r24, 0xFB	; 251
     8a8:	80 93 64 01 	sts	0x0164, r24
			}
				
		}
		
		return 0;
     8ac:	80 e0       	ldi	r24, 0x00	; 0
     8ae:	06 c1       	rjmp	.+524    	; 0xabc <_Z5einsth+0x424>
		break;
	case 3:
		//Einstellen Temperaturoffset
		//default = 0;
		lcd_clear();
     8b0:	80 dc       	rcall	.-1792   	; 0x1b2 <_Z9lcd_clearv>
		lcd_home();
     8b2:	b6 dc       	rcall	.-1684   	; 0x220 <_Z8lcd_homev>
		lcd_string("Temperaturoffset:");
     8b4:	8e ed       	ldi	r24, 0xDE	; 222
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	ce dc       	rcall	.-1636   	; 0x256 <_Z10lcd_stringPKc>
		aus(2,0);
     8ba:	60 e0       	ldi	r22, 0x00	; 0
     8bc:	82 e0       	ldi	r24, 0x02	; 2
     8be:	45 de       	rcall	.-886    	; 0x54a <_Z3aushh>
		itoa(tempoffset,Buffer,10);
     8c0:	80 91 64 00 	lds	r24, 0x0064
     8c4:	4a e0       	ldi	r20, 0x0A	; 10
     8c6:	50 e0       	ldi	r21, 0x00	; 0
     8c8:	60 e5       	ldi	r22, 0x50	; 80
     8ca:	71 e0       	ldi	r23, 0x01	; 1
     8cc:	99 27       	eor	r25, r25
     8ce:	87 fd       	sbrc	r24, 7
     8d0:	90 95       	com	r25
     8d2:	64 d5       	rcall	.+2760   	; 0x139c <itoa>
		lcd_string(Buffer);
     8d4:	80 e5       	ldi	r24, 0x50	; 80
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	be dc       	rcall	.-1668   	; 0x256 <_Z10lcd_stringPKc>
		
		if(Sekunden!=sektemp){
     8da:	90 91 72 01 	lds	r25, 0x0172
     8de:	80 91 69 01 	lds	r24, 0x0169
     8e2:	98 13       	cpse	r25, r24
			zeit();
     8e4:	57 dd       	rcall	.-1362   	; 0x394 <_Z4zeitv>
     8e6:	82 99       	sbic	0x10, 2	; 16
     8e8:	e4 c0       	rjmp	.+456    	; 0xab2 <_Z5einsth+0x41a>
     8ea:	8f ef       	ldi	r24, 0xFF	; 255
     8ec:	93 eb       	ldi	r25, 0xB3	; 179
     8ee:	01 97       	sbiw	r24, 0x01	; 1
     8f0:	f1 f7       	brne	.-4      	; 0x8ee <_Z5einsth+0x256>
     8f2:	00 c0       	rjmp	.+0      	; 0x8f4 <_Z5einsth+0x25c>
     8f4:	00 00       	nop
     8f6:	8f ef       	ldi	r24, 0xFF	; 255
     8f8:	93 e2       	ldi	r25, 0x23	; 35
     8fa:	01 97       	sbiw	r24, 0x01	; 1
     8fc:	f1 f7       	brne	.-4      	; 0x8fa <_Z5einsth+0x262>
     8fe:	00 c0       	rjmp	.+0      	; 0x900 <_Z5einsth+0x268>
     900:	00 00       	nop
		}
		if(debounce(&PIND,2))
     902:	82 99       	sbic	0x10, 2	; 16
     904:	d8 c0       	rjmp	.+432    	; 0xab6 <_Z5einsth+0x41e>
		{
			tempoffset++;
     906:	80 91 64 00 	lds	r24, 0x0064
     90a:	8f 5f       	subi	r24, 0xFF	; 255
     90c:	80 93 64 00 	sts	0x0064, r24
			lcd_clear();
     910:	50 dc       	rcall	.-1888   	; 0x1b2 <_Z9lcd_clearv>
			lcd_home();
     912:	86 dc       	rcall	.-1780   	; 0x220 <_Z8lcd_homev>
			lcd_string("Temperaturoffset:");
     914:	8e ed       	ldi	r24, 0xDE	; 222
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	9e dc       	rcall	.-1732   	; 0x256 <_Z10lcd_stringPKc>
			aus(2,0);
     91a:	60 e0       	ldi	r22, 0x00	; 0
     91c:	82 e0       	ldi	r24, 0x02	; 2
     91e:	15 de       	rcall	.-982    	; 0x54a <_Z3aushh>
			itoa(tempoffset,Buffer,10);
     920:	80 91 64 00 	lds	r24, 0x0064
     924:	4a e0       	ldi	r20, 0x0A	; 10
     926:	50 e0       	ldi	r21, 0x00	; 0
     928:	60 e5       	ldi	r22, 0x50	; 80
     92a:	71 e0       	ldi	r23, 0x01	; 1
     92c:	99 27       	eor	r25, r25
     92e:	87 fd       	sbrc	r24, 7
     930:	90 95       	com	r25
     932:	34 d5       	rcall	.+2664   	; 0x139c <itoa>
			lcd_string(Buffer);
     934:	80 e5       	ldi	r24, 0x50	; 80
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	8e dc       	rcall	.-1764   	; 0x256 <_Z10lcd_stringPKc>
			
			if (tempoffset>=10)
     93a:	80 91 64 00 	lds	r24, 0x0064
     93e:	8a 30       	cpi	r24, 0x0A	; 10
     940:	0c f4       	brge	.+2      	; 0x944 <_Z5einsth+0x2ac>
     942:	bb c0       	rjmp	.+374    	; 0xaba <_Z5einsth+0x422>
			{
				tempoffset=-10;
     944:	86 ef       	ldi	r24, 0xF6	; 246
     946:	80 93 64 00 	sts	0x0064, r24
			}
			
		}
		
		return 0;
     94a:	80 e0       	ldi	r24, 0x00	; 0
     94c:	b7 c0       	rjmp	.+366    	; 0xabc <_Z5einsth+0x424>
		break;
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
     94e:	65 e0       	ldi	r22, 0x05	; 5
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	fb dd       	rcall	.-1034   	; 0x54a <_Z3aushh>
		aus(2,0);
     954:	60 e0       	ldi	r22, 0x00	; 0
     956:	82 e0       	ldi	r24, 0x02	; 2
     958:	f8 dd       	rcall	.-1040   	; 0x54a <_Z3aushh>
		lcd_string(NAME(WStunden[0]));
     95a:	80 ef       	ldi	r24, 0xF0	; 240
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	7b dc       	rcall	.-1802   	; 0x256 <_Z10lcd_stringPKc>
		}
		
		return 0;
		break;
	case 4: //Wecker einstellen
		temp = 0;
     960:	c0 e0       	ldi	r28, 0x00	; 0
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
					break;
				case 1:
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
					break;
     962:	11 e0       	ldi	r17, 0x01	; 1
			}
			switch (temp)
			{
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
					break;
     964:	d0 e0       	ldi	r29, 0x00	; 0
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[0]));
		while (temp<2)
		{
			if (Sekunden!=sektemp)
     966:	20 91 72 01 	lds	r18, 0x0172
     96a:	90 91 69 01 	lds	r25, 0x0169
     96e:	29 13       	cpse	r18, r25
			{
				zeit();
     970:	11 dd       	rcall	.-1502   	; 0x394 <_Z4zeitv>
     972:	83 99       	sbic	0x10, 3	; 16
     974:	22 c0       	rjmp	.+68     	; 0x9ba <_Z5einsth+0x322>
     976:	8f ef       	ldi	r24, 0xFF	; 255
     978:	93 eb       	ldi	r25, 0xB3	; 179
     97a:	01 97       	sbiw	r24, 0x01	; 1
     97c:	f1 f7       	brne	.-4      	; 0x97a <_Z5einsth+0x2e2>
     97e:	00 c0       	rjmp	.+0      	; 0x980 <_Z5einsth+0x2e8>
     980:	00 00       	nop
     982:	8f ef       	ldi	r24, 0xFF	; 255
     984:	93 e2       	ldi	r25, 0x23	; 35
     986:	01 97       	sbiw	r24, 0x01	; 1
     988:	f1 f7       	brne	.-4      	; 0x986 <_Z5einsth+0x2ee>
     98a:	00 c0       	rjmp	.+0      	; 0x98c <_Z5einsth+0x2f4>
     98c:	00 00       	nop
			}
			if(debounce(&PIND,3))
     98e:	83 99       	sbic	0x10, 3	; 16
     990:	14 c0       	rjmp	.+40     	; 0x9ba <_Z5einsth+0x322>
			{
				temp++;
     992:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,5);
     994:	65 e0       	ldi	r22, 0x05	; 5
     996:	81 2f       	mov	r24, r17
     998:	d8 dd       	rcall	.-1104   	; 0x54a <_Z3aushh>
				aus(2,0);
     99a:	6d 2f       	mov	r22, r29
     99c:	82 e0       	ldi	r24, 0x02	; 2
     99e:	d5 dd       	rcall	.-1110   	; 0x54a <_Z3aushh>
				switch (temp)
     9a0:	cc 23       	and	r28, r28
     9a2:	19 f0       	breq	.+6      	; 0x9aa <_Z5einsth+0x312>
     9a4:	c1 30       	cpi	r28, 0x01	; 1
     9a6:	49 f4       	brne	.+18     	; 0x9ba <_Z5einsth+0x322>
     9a8:	04 c0       	rjmp	.+8      	; 0x9b2 <_Z5einsth+0x31a>
				{
					case 0:
						lcd_string(NAME(WStunden[0]));
     9aa:	80 ef       	ldi	r24, 0xF0	; 240
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	53 dc       	rcall	.-1882   	; 0x256 <_Z10lcd_stringPKc>
     9b0:	09 c0       	rjmp	.+18     	; 0x9c4 <_Z5einsth+0x32c>
						break;
					case 1:
						lcd_string(NAME(WMinuten[0]));
     9b2:	8c ef       	ldi	r24, 0xFC	; 252
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	4f dc       	rcall	.-1890   	; 0x256 <_Z10lcd_stringPKc>
     9b8:	0e c0       	rjmp	.+28     	; 0x9d6 <_Z5einsth+0x33e>
						break;
					default:
						break;
				}
			}
			switch (temp)
     9ba:	cc 23       	and	r28, r28
     9bc:	19 f0       	breq	.+6      	; 0x9c4 <_Z5einsth+0x32c>
     9be:	c1 30       	cpi	r28, 0x01	; 1
     9c0:	99 f4       	brne	.+38     	; 0x9e8 <_Z5einsth+0x350>
     9c2:	09 c0       	rjmp	.+18     	; 0x9d6 <_Z5einsth+0x33e>
			{
				case 0:
					erhoehen(&WStunden[0],24,5,NAME(WStunden[0]));
     9c4:	20 ef       	ldi	r18, 0xF0	; 240
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	45 e0       	ldi	r20, 0x05	; 5
     9ca:	68 e1       	ldi	r22, 0x18	; 24
     9cc:	8d e6       	ldi	r24, 0x6D	; 109
     9ce:	91 e0       	ldi	r25, 0x01	; 1
     9d0:	36 de       	rcall	.-916    	; 0x63e <_Z8erhoehenPhhhPKc>
					break;
     9d2:	cd 2f       	mov	r28, r29
     9d4:	c8 cf       	rjmp	.-112    	; 0x966 <_Z5einsth+0x2ce>
				case 1:
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
     9d6:	2c ef       	ldi	r18, 0xFC	; 252
     9d8:	30 e0       	ldi	r19, 0x00	; 0
     9da:	45 e0       	ldi	r20, 0x05	; 5
     9dc:	6c e3       	ldi	r22, 0x3C	; 60
     9de:	8b e6       	ldi	r24, 0x6B	; 107
     9e0:	91 e0       	ldi	r25, 0x01	; 1
     9e2:	2d de       	rcall	.-934    	; 0x63e <_Z8erhoehenPhhhPKc>
					break;
     9e4:	c1 2f       	mov	r28, r17
     9e6:	bf cf       	rjmp	.-130    	; 0x966 <_Z5einsth+0x2ce>
	case 4: //Wecker einstellen
		temp = 0;
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[0]));
		while (temp<2)
     9e8:	c2 30       	cpi	r28, 0x02	; 2
     9ea:	08 f4       	brcc	.+2      	; 0x9ee <_Z5einsth+0x356>
     9ec:	bc cf       	rjmp	.-136    	; 0x966 <_Z5einsth+0x2ce>
					erhoehen(&WMinuten[0],60,5,NAME(WMinuten[0]));
					break;
			}
			
		}
		return 0;
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	65 c0       	rjmp	.+202    	; 0xabc <_Z5einsth+0x424>
		break;

	case 5:
		temp = 0;
		aus(1,5);
     9f2:	65 e0       	ldi	r22, 0x05	; 5
     9f4:	81 e0       	ldi	r24, 0x01	; 1
     9f6:	a9 dd       	rcall	.-1198   	; 0x54a <_Z3aushh>
		aus(2,0);
     9f8:	60 e0       	ldi	r22, 0x00	; 0
     9fa:	82 e0       	ldi	r24, 0x02	; 2
     9fc:	a6 dd       	rcall	.-1204   	; 0x54a <_Z3aushh>
		lcd_string(NAME(WStunden[1]));
     9fe:	88 e0       	ldi	r24, 0x08	; 8
     a00:	91 e0       	ldi	r25, 0x01	; 1
     a02:	29 dc       	rcall	.-1966   	; 0x256 <_Z10lcd_stringPKc>
		}
		return 0;
		break;

	case 5:
		temp = 0;
     a04:	c0 e0       	ldi	r28, 0x00	; 0
				case 0:
				erhoehen(&WStunden[1],24,5,NAME(WStunden[1]));
				break;
				case 1:
				erhoehen(&WMinuten[1],60,5,NAME(WMinuten[1]));
				break;
     a06:	11 e0       	ldi	r17, 0x01	; 1
			}
			switch (temp)
			{
				case 0:
				erhoehen(&WStunden[1],24,5,NAME(WStunden[1]));
				break;
     a08:	d0 e0       	ldi	r29, 0x00	; 0
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[1]));
		while (temp<2)
		{
			if (Sekunden!=sektemp)
     a0a:	20 91 72 01 	lds	r18, 0x0172
     a0e:	90 91 69 01 	lds	r25, 0x0169
     a12:	29 13       	cpse	r18, r25
			{
				zeit();
     a14:	bf dc       	rcall	.-1666   	; 0x394 <_Z4zeitv>
     a16:	83 99       	sbic	0x10, 3	; 16
     a18:	22 c0       	rjmp	.+68     	; 0xa5e <_Z5einsth+0x3c6>
     a1a:	8f ef       	ldi	r24, 0xFF	; 255
     a1c:	93 eb       	ldi	r25, 0xB3	; 179
     a1e:	01 97       	sbiw	r24, 0x01	; 1
     a20:	f1 f7       	brne	.-4      	; 0xa1e <_Z5einsth+0x386>
     a22:	00 c0       	rjmp	.+0      	; 0xa24 <_Z5einsth+0x38c>
     a24:	00 00       	nop
     a26:	8f ef       	ldi	r24, 0xFF	; 255
     a28:	93 e2       	ldi	r25, 0x23	; 35
     a2a:	01 97       	sbiw	r24, 0x01	; 1
     a2c:	f1 f7       	brne	.-4      	; 0xa2a <_Z5einsth+0x392>
     a2e:	00 c0       	rjmp	.+0      	; 0xa30 <_Z5einsth+0x398>
     a30:	00 00       	nop
			}
			if(debounce(&PIND,3))
     a32:	83 99       	sbic	0x10, 3	; 16
     a34:	14 c0       	rjmp	.+40     	; 0xa5e <_Z5einsth+0x3c6>
			{
				temp++;
     a36:	cf 5f       	subi	r28, 0xFF	; 255
				aus(1,5);
     a38:	65 e0       	ldi	r22, 0x05	; 5
     a3a:	81 2f       	mov	r24, r17
     a3c:	86 dd       	rcall	.-1268   	; 0x54a <_Z3aushh>
				aus(2,0);
     a3e:	6d 2f       	mov	r22, r29
     a40:	82 e0       	ldi	r24, 0x02	; 2
     a42:	83 dd       	rcall	.-1274   	; 0x54a <_Z3aushh>
				switch (temp)
     a44:	cc 23       	and	r28, r28
     a46:	19 f0       	breq	.+6      	; 0xa4e <_Z5einsth+0x3b6>
     a48:	c1 30       	cpi	r28, 0x01	; 1
     a4a:	49 f4       	brne	.+18     	; 0xa5e <_Z5einsth+0x3c6>
     a4c:	04 c0       	rjmp	.+8      	; 0xa56 <_Z5einsth+0x3be>
				{
					case 0:
					lcd_string(NAME(WStunden[1]));
     a4e:	88 e0       	ldi	r24, 0x08	; 8
     a50:	91 e0       	ldi	r25, 0x01	; 1
     a52:	01 dc       	rcall	.-2046   	; 0x256 <_Z10lcd_stringPKc>
     a54:	09 c0       	rjmp	.+18     	; 0xa68 <_Z5einsth+0x3d0>
					break;
					case 1:
					lcd_string(NAME(WMinuten[1]));
     a56:	84 e1       	ldi	r24, 0x14	; 20
     a58:	91 e0       	ldi	r25, 0x01	; 1
     a5a:	fd db       	rcall	.-2054   	; 0x256 <_Z10lcd_stringPKc>
     a5c:	0e c0       	rjmp	.+28     	; 0xa7a <_Z5einsth+0x3e2>
					break;
					default:
					break;
				}
			}
			switch (temp)
     a5e:	cc 23       	and	r28, r28
     a60:	19 f0       	breq	.+6      	; 0xa68 <_Z5einsth+0x3d0>
     a62:	c1 30       	cpi	r28, 0x01	; 1
     a64:	99 f4       	brne	.+38     	; 0xa8c <_Z5einsth+0x3f4>
     a66:	09 c0       	rjmp	.+18     	; 0xa7a <_Z5einsth+0x3e2>
			{
				case 0:
				erhoehen(&WStunden[1],24,5,NAME(WStunden[1]));
     a68:	28 e0       	ldi	r18, 0x08	; 8
     a6a:	31 e0       	ldi	r19, 0x01	; 1
     a6c:	45 e0       	ldi	r20, 0x05	; 5
     a6e:	68 e1       	ldi	r22, 0x18	; 24
     a70:	8e e6       	ldi	r24, 0x6E	; 110
     a72:	91 e0       	ldi	r25, 0x01	; 1
     a74:	e4 dd       	rcall	.-1080   	; 0x63e <_Z8erhoehenPhhhPKc>
				break;
     a76:	cd 2f       	mov	r28, r29
     a78:	c8 cf       	rjmp	.-112    	; 0xa0a <_Z5einsth+0x372>
				case 1:
				erhoehen(&WMinuten[1],60,5,NAME(WMinuten[1]));
     a7a:	24 e1       	ldi	r18, 0x14	; 20
     a7c:	31 e0       	ldi	r19, 0x01	; 1
     a7e:	45 e0       	ldi	r20, 0x05	; 5
     a80:	6c e3       	ldi	r22, 0x3C	; 60
     a82:	8c e6       	ldi	r24, 0x6C	; 108
     a84:	91 e0       	ldi	r25, 0x01	; 1
     a86:	db dd       	rcall	.-1098   	; 0x63e <_Z8erhoehenPhhhPKc>
				break;
     a88:	c1 2f       	mov	r28, r17
     a8a:	bf cf       	rjmp	.-130    	; 0xa0a <_Z5einsth+0x372>
	case 5:
		temp = 0;
		aus(1,5);
		aus(2,0);
		lcd_string(NAME(WStunden[1]));
		while (temp<2)
     a8c:	c2 30       	cpi	r28, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <_Z5einsth+0x3fa>
     a90:	bc cf       	rjmp	.-136    	; 0xa0a <_Z5einsth+0x372>
				erhoehen(&WMinuten[1],60,5,NAME(WMinuten[1]));
				break;
			}
			
		}
		return 0;
     a92:	80 e0       	ldi	r24, 0x00	; 0
     a94:	13 c0       	rjmp	.+38     	; 0xabc <_Z5einsth+0x424>
		break;

	default:
		return 1;
     a96:	81 e0       	ldi	r24, 0x01	; 1
     a98:	11 c0       	rjmp	.+34     	; 0xabc <_Z5einsth+0x424>
			{
				lampenstaerke=1;
			}
			
		}
		return 0;
     a9a:	80 e0       	ldi	r24, 0x00	; 0
     a9c:	0f c0       	rjmp	.+30     	; 0xabc <_Z5einsth+0x424>
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	0d c0       	rjmp	.+26     	; 0xabc <_Z5einsth+0x424>
     aa2:	80 e0       	ldi	r24, 0x00	; 0
     aa4:	0b c0       	rjmp	.+22     	; 0xabc <_Z5einsth+0x424>
				sekoffset=-5;
			}
				
		}
		
		return 0;
     aa6:	80 e0       	ldi	r24, 0x00	; 0
     aa8:	09 c0       	rjmp	.+18     	; 0xabc <_Z5einsth+0x424>
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	07 c0       	rjmp	.+14     	; 0xabc <_Z5einsth+0x424>
     aae:	80 e0       	ldi	r24, 0x00	; 0
     ab0:	05 c0       	rjmp	.+10     	; 0xabc <_Z5einsth+0x424>
				tempoffset=-10;
			}
			
		}
		
		return 0;
     ab2:	80 e0       	ldi	r24, 0x00	; 0
     ab4:	03 c0       	rjmp	.+6      	; 0xabc <_Z5einsth+0x424>
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	01 c0       	rjmp	.+2      	; 0xabc <_Z5einsth+0x424>
     aba:	80 e0       	ldi	r24, 0x00	; 0

	default:
		return 1;
		break;
	}
}
     abc:	df 91       	pop	r29
     abe:	cf 91       	pop	r28
     ac0:	1f 91       	pop	r17
     ac2:	08 95       	ret

00000ac4 <_Z10zeitsetzenv>:

#ifndef EINSTELLUNGEN_H_
#define EINSTELLUNGEN_H_

void zeitsetzen(){
	Minuten = 34;
     ac4:	82 e2       	ldi	r24, 0x22	; 34
     ac6:	80 93 71 01 	sts	0x0171, r24
	Stunden	= 5;
     aca:	85 e0       	ldi	r24, 0x05	; 5
     acc:	80 93 70 01 	sts	0x0170, r24
	Sekunden = 0;
     ad0:	10 92 72 01 	sts	0x0172, r1
	WochenTag=6;
     ad4:	96 e0       	ldi	r25, 0x06	; 6
     ad6:	90 93 6f 01 	sts	0x016F, r25
	WStunden[0]=5;
     ada:	80 93 6d 01 	sts	0x016D, r24
	WMinuten[0]=35;
     ade:	83 e2       	ldi	r24, 0x23	; 35
     ae0:	80 93 6b 01 	sts	0x016B, r24
	WStunden[1]=7;
     ae4:	97 e0       	ldi	r25, 0x07	; 7
     ae6:	90 93 6e 01 	sts	0x016E, r25
	WMinuten[1]=35;
     aea:	80 93 6c 01 	sts	0x016C, r24
//	einsweck();
//	einstzeit();
	einst(4);
     aee:	84 e0       	ldi	r24, 0x04	; 4
     af0:	d3 dd       	rcall	.-1114   	; 0x698 <_Z5einsth>
//	einst(1); //Noch keinen Kalender, da er in den Einstellungen zu komplex ist
	einst(0);
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	d1 dd       	rcall	.-1118   	; 0x698 <_Z5einsth>
	sekoffset=1;
     af6:	81 e0       	ldi	r24, 0x01	; 1
     af8:	80 93 64 01 	sts	0x0164, r24
     afc:	08 95       	ret

00000afe <_Z4menuv>:


#ifndef MENUE_H_
#define MENUE_H_

uint8_t menu(){
     afe:	cf 93       	push	r28
	uint8_t posit = 0;
     b00:	80 e0       	ldi	r24, 0x00	; 0
						temperatur();
						return 1;
					}
				}
				temperatur();
				posit++;
     b02:	c6 e0       	ldi	r28, 0x06	; 6

uint8_t menu(){
	uint8_t posit = 0;
	while (true)
	{
		switch (posit)
     b04:	83 30       	cpi	r24, 0x03	; 3
     b06:	09 f4       	brne	.+2      	; 0xb0a <_Z4menuv+0xc>
     b08:	e5 c0       	rjmp	.+458    	; 0xcd4 <_Z4menuv+0x1d6>
     b0a:	30 f4       	brcc	.+12     	; 0xb18 <_Z4menuv+0x1a>
     b0c:	81 30       	cpi	r24, 0x01	; 1
     b0e:	09 f4       	brne	.+2      	; 0xb12 <_Z4menuv+0x14>
     b10:	51 c0       	rjmp	.+162    	; 0xbb4 <_Z4menuv+0xb6>
     b12:	82 30       	cpi	r24, 0x02	; 2
     b14:	39 f4       	brne	.+14     	; 0xb24 <_Z4menuv+0x26>
     b16:	96 c0       	rjmp	.+300    	; 0xc44 <_Z4menuv+0x146>
     b18:	84 30       	cpi	r24, 0x04	; 4
     b1a:	09 f4       	brne	.+2      	; 0xb1e <_Z4menuv+0x20>
     b1c:	23 c1       	rjmp	.+582    	; 0xd64 <_Z4menuv+0x266>
     b1e:	85 30       	cpi	r24, 0x05	; 5
     b20:	09 f4       	brne	.+2      	; 0xb24 <_Z4menuv+0x26>
     b22:	70 c1       	rjmp	.+736    	; 0xe04 <_Z4menuv+0x306>
		{
			case 0:
				//Weckzeit anzeigen und einstellen mit PD2
				lcd_clear();
     b24:	46 db       	rcall	.-2420   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,5);
     b26:	65 e0       	ldi	r22, 0x05	; 5
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	0f dd       	rcall	.-1506   	; 0x54a <_Z3aushh>
				aus(2,0);
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	82 e0       	ldi	r24, 0x02	; 2
     b30:	0c dd       	rcall	.-1512   	; 0x54a <_Z3aushh>
				lcd_string("Werktags");
     b32:	80 e2       	ldi	r24, 0x20	; 32
     b34:	91 e0       	ldi	r25, 0x01	; 1
     b36:	8f db       	rcall	.-2274   	; 0x256 <_Z10lcd_stringPKc>
				posit = posit + 1;
				while(!debounce(&PIND,PD3))
     b38:	2b c0       	rjmp	.+86     	; 0xb90 <_Z4menuv+0x92>
				{
					//Zeitabfrage mit einbauen
					if(Sekunden!=sektemp){
     b3a:	90 91 72 01 	lds	r25, 0x0172
     b3e:	80 91 69 01 	lds	r24, 0x0169
     b42:	98 13       	cpse	r25, r24
						zeit();
     b44:	27 dc       	rcall	.-1970   	; 0x394 <_Z4zeitv>
     b46:	82 99       	sbic	0x10, 2	; 16
     b48:	13 c0       	rjmp	.+38     	; 0xb70 <_Z4menuv+0x72>
     b4a:	8f ef       	ldi	r24, 0xFF	; 255
     b4c:	93 eb       	ldi	r25, 0xB3	; 179
     b4e:	01 97       	sbiw	r24, 0x01	; 1
     b50:	f1 f7       	brne	.-4      	; 0xb4e <_Z4menuv+0x50>
     b52:	00 c0       	rjmp	.+0      	; 0xb54 <_Z4menuv+0x56>
     b54:	00 00       	nop
     b56:	8f ef       	ldi	r24, 0xFF	; 255
     b58:	93 e2       	ldi	r25, 0x23	; 35
     b5a:	01 97       	sbiw	r24, 0x01	; 1
     b5c:	f1 f7       	brne	.-4      	; 0xb5a <_Z4menuv+0x5c>
     b5e:	00 c0       	rjmp	.+0      	; 0xb60 <_Z4menuv+0x62>
     b60:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     b62:	82 99       	sbic	0x10, 2	; 16
     b64:	05 c0       	rjmp	.+10     	; 0xb70 <_Z4menuv+0x72>
					{
						einst(4);
     b66:	84 e0       	ldi	r24, 0x04	; 4
     b68:	97 dd       	rcall	.-1234   	; 0x698 <_Z5einsth>
						lcd_string("Werktags");
     b6a:	80 e2       	ldi	r24, 0x20	; 32
     b6c:	91 e0       	ldi	r25, 0x01	; 1
     b6e:	73 db       	rcall	.-2330   	; 0x256 <_Z10lcd_stringPKc>
     b70:	84 99       	sbic	0x10, 4	; 16
     b72:	0e c0       	rjmp	.+28     	; 0xb90 <_Z4menuv+0x92>
     b74:	8f ef       	ldi	r24, 0xFF	; 255
     b76:	93 eb       	ldi	r25, 0xB3	; 179
     b78:	01 97       	sbiw	r24, 0x01	; 1
     b7a:	f1 f7       	brne	.-4      	; 0xb78 <_Z4menuv+0x7a>
     b7c:	00 c0       	rjmp	.+0      	; 0xb7e <_Z4menuv+0x80>
     b7e:	00 00       	nop
     b80:	8f ef       	ldi	r24, 0xFF	; 255
     b82:	93 e2       	ldi	r25, 0x23	; 35
     b84:	01 97       	sbiw	r24, 0x01	; 1
     b86:	f1 f7       	brne	.-4      	; 0xb84 <_Z4menuv+0x86>
     b88:	00 c0       	rjmp	.+0      	; 0xb8a <_Z4menuv+0x8c>
     b8a:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     b8c:	84 9b       	sbis	0x10, 4	; 16
     b8e:	8d c1       	rjmp	.+794    	; 0xeaa <_Z4menuv+0x3ac>
     b90:	83 99       	sbic	0x10, 3	; 16
     b92:	d3 cf       	rjmp	.-90     	; 0xb3a <_Z4menuv+0x3c>
     b94:	8f ef       	ldi	r24, 0xFF	; 255
     b96:	93 eb       	ldi	r25, 0xB3	; 179
     b98:	01 97       	sbiw	r24, 0x01	; 1
     b9a:	f1 f7       	brne	.-4      	; 0xb98 <_Z4menuv+0x9a>
     b9c:	00 c0       	rjmp	.+0      	; 0xb9e <_Z4menuv+0xa0>
     b9e:	00 00       	nop
     ba0:	8f ef       	ldi	r24, 0xFF	; 255
     ba2:	93 e2       	ldi	r25, 0x23	; 35
     ba4:	01 97       	sbiw	r24, 0x01	; 1
     ba6:	f1 f7       	brne	.-4      	; 0xba4 <_Z4menuv+0xa6>
     ba8:	00 c0       	rjmp	.+0      	; 0xbaa <_Z4menuv+0xac>
     baa:	00 00       	nop
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Werktags");
				posit = posit + 1;
				while(!debounce(&PIND,PD3))
     bac:	83 99       	sbic	0x10, 3	; 16
     bae:	c5 cf       	rjmp	.-118    	; 0xb3a <_Z4menuv+0x3c>
				//Weckzeit anzeigen und einstellen mit PD2
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Werktags");
				posit = posit + 1;
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	a8 cf       	rjmp	.-176    	; 0xb04 <_Z4menuv+0x6>
				}
				break;
			
			case 1:
			//Weckzeit anzeige und einstellungen am Wochenende
				lcd_clear();
     bb4:	fe da       	rcall	.-2564   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,5);
     bb6:	65 e0       	ldi	r22, 0x05	; 5
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	c7 dc       	rcall	.-1650   	; 0x54a <_Z3aushh>
				aus(2,0);
     bbc:	60 e0       	ldi	r22, 0x00	; 0
     bbe:	82 e0       	ldi	r24, 0x02	; 2
     bc0:	c4 dc       	rcall	.-1656   	; 0x54a <_Z3aushh>
				lcd_string("Wohenende");
     bc2:	89 e2       	ldi	r24, 0x29	; 41
     bc4:	91 e0       	ldi	r25, 0x01	; 1
     bc6:	47 db       	rcall	.-2418   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     bc8:	2b c0       	rjmp	.+86     	; 0xc20 <_Z4menuv+0x122>
				{
					if(Sekunden!=sektemp){
     bca:	90 91 72 01 	lds	r25, 0x0172
     bce:	80 91 69 01 	lds	r24, 0x0169
     bd2:	98 13       	cpse	r25, r24
						zeit();
     bd4:	df db       	rcall	.-2114   	; 0x394 <_Z4zeitv>
     bd6:	82 99       	sbic	0x10, 2	; 16
     bd8:	13 c0       	rjmp	.+38     	; 0xc00 <_Z4menuv+0x102>
     bda:	8f ef       	ldi	r24, 0xFF	; 255
     bdc:	93 eb       	ldi	r25, 0xB3	; 179
     bde:	01 97       	sbiw	r24, 0x01	; 1
     be0:	f1 f7       	brne	.-4      	; 0xbde <_Z4menuv+0xe0>
     be2:	00 c0       	rjmp	.+0      	; 0xbe4 <_Z4menuv+0xe6>
     be4:	00 00       	nop
     be6:	8f ef       	ldi	r24, 0xFF	; 255
     be8:	93 e2       	ldi	r25, 0x23	; 35
     bea:	01 97       	sbiw	r24, 0x01	; 1
     bec:	f1 f7       	brne	.-4      	; 0xbea <_Z4menuv+0xec>
     bee:	00 c0       	rjmp	.+0      	; 0xbf0 <_Z4menuv+0xf2>
     bf0:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     bf2:	82 99       	sbic	0x10, 2	; 16
     bf4:	05 c0       	rjmp	.+10     	; 0xc00 <_Z4menuv+0x102>
					{
						einst(5);
     bf6:	85 e0       	ldi	r24, 0x05	; 5
     bf8:	4f dd       	rcall	.-1378   	; 0x698 <_Z5einsth>
						lcd_string("Wohenende");
     bfa:	89 e2       	ldi	r24, 0x29	; 41
     bfc:	91 e0       	ldi	r25, 0x01	; 1
     bfe:	2b db       	rcall	.-2474   	; 0x256 <_Z10lcd_stringPKc>
     c00:	84 99       	sbic	0x10, 4	; 16
     c02:	0e c0       	rjmp	.+28     	; 0xc20 <_Z4menuv+0x122>
     c04:	8f ef       	ldi	r24, 0xFF	; 255
     c06:	93 eb       	ldi	r25, 0xB3	; 179
     c08:	01 97       	sbiw	r24, 0x01	; 1
     c0a:	f1 f7       	brne	.-4      	; 0xc08 <_Z4menuv+0x10a>
     c0c:	00 c0       	rjmp	.+0      	; 0xc0e <_Z4menuv+0x110>
     c0e:	00 00       	nop
     c10:	8f ef       	ldi	r24, 0xFF	; 255
     c12:	93 e2       	ldi	r25, 0x23	; 35
     c14:	01 97       	sbiw	r24, 0x01	; 1
     c16:	f1 f7       	brne	.-4      	; 0xc14 <_Z4menuv+0x116>
     c18:	00 c0       	rjmp	.+0      	; 0xc1a <_Z4menuv+0x11c>
     c1a:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     c1c:	84 9b       	sbis	0x10, 4	; 16
     c1e:	45 c1       	rjmp	.+650    	; 0xeaa <_Z4menuv+0x3ac>
     c20:	83 99       	sbic	0x10, 3	; 16
     c22:	d3 cf       	rjmp	.-90     	; 0xbca <_Z4menuv+0xcc>
     c24:	8f ef       	ldi	r24, 0xFF	; 255
     c26:	93 eb       	ldi	r25, 0xB3	; 179
     c28:	01 97       	sbiw	r24, 0x01	; 1
     c2a:	f1 f7       	brne	.-4      	; 0xc28 <_Z4menuv+0x12a>
     c2c:	00 c0       	rjmp	.+0      	; 0xc2e <_Z4menuv+0x130>
     c2e:	00 00       	nop
     c30:	8f ef       	ldi	r24, 0xFF	; 255
     c32:	93 e2       	ldi	r25, 0x23	; 35
     c34:	01 97       	sbiw	r24, 0x01	; 1
     c36:	f1 f7       	brne	.-4      	; 0xc34 <_Z4menuv+0x136>
     c38:	00 c0       	rjmp	.+0      	; 0xc3a <_Z4menuv+0x13c>
     c3a:	00 00       	nop
			//Weckzeit anzeige und einstellungen am Wochenende
				lcd_clear();
				aus(1,5);
				aus(2,0);
				lcd_string("Wohenende");
				while (!debounce(&PIND,PD3))
     c3c:	83 99       	sbic	0x10, 3	; 16
     c3e:	c5 cf       	rjmp	.-118    	; 0xbca <_Z4menuv+0xcc>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     c40:	82 e0       	ldi	r24, 0x02	; 2
     c42:	60 cf       	rjmp	.-320    	; 0xb04 <_Z4menuv+0x6>
				break;
			
			case 2:
				//Lampe einstellen
				//Jetzt noch nicht implementiert
				lcd_clear();
     c44:	b6 da       	rcall	.-2708   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,2);
     c46:	62 e0       	ldi	r22, 0x02	; 2
     c48:	81 e0       	ldi	r24, 0x01	; 1
     c4a:	7f dc       	rcall	.-1794   	; 0x54a <_Z3aushh>
				aus(2,0);
     c4c:	60 e0       	ldi	r22, 0x00	; 0
     c4e:	82 e0       	ldi	r24, 0x02	; 2
     c50:	7c dc       	rcall	.-1800   	; 0x54a <_Z3aushh>
				lcd_string("Lampenstärke:");
     c52:	8f eb       	ldi	r24, 0xBF	; 191
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	ff da       	rcall	.-2562   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     c58:	2b c0       	rjmp	.+86     	; 0xcb0 <_Z4menuv+0x1b2>
				{
					if(Sekunden!=sektemp){
     c5a:	90 91 72 01 	lds	r25, 0x0172
     c5e:	80 91 69 01 	lds	r24, 0x0169
     c62:	98 13       	cpse	r25, r24
						zeit();
     c64:	97 db       	rcall	.-2258   	; 0x394 <_Z4zeitv>
     c66:	82 99       	sbic	0x10, 2	; 16
     c68:	13 c0       	rjmp	.+38     	; 0xc90 <_Z4menuv+0x192>
     c6a:	8f ef       	ldi	r24, 0xFF	; 255
     c6c:	93 eb       	ldi	r25, 0xB3	; 179
     c6e:	01 97       	sbiw	r24, 0x01	; 1
     c70:	f1 f7       	brne	.-4      	; 0xc6e <_Z4menuv+0x170>
     c72:	00 c0       	rjmp	.+0      	; 0xc74 <_Z4menuv+0x176>
     c74:	00 00       	nop
     c76:	8f ef       	ldi	r24, 0xFF	; 255
     c78:	93 e2       	ldi	r25, 0x23	; 35
     c7a:	01 97       	sbiw	r24, 0x01	; 1
     c7c:	f1 f7       	brne	.-4      	; 0xc7a <_Z4menuv+0x17c>
     c7e:	00 c0       	rjmp	.+0      	; 0xc80 <_Z4menuv+0x182>
     c80:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     c82:	82 99       	sbic	0x10, 2	; 16
     c84:	05 c0       	rjmp	.+10     	; 0xc90 <_Z4menuv+0x192>
					{
						einst(1);
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	07 dd       	rcall	.-1522   	; 0x698 <_Z5einsth>
						lcd_string("Lampenstärke");
     c8a:	83 e3       	ldi	r24, 0x33	; 51
     c8c:	91 e0       	ldi	r25, 0x01	; 1
     c8e:	e3 da       	rcall	.-2618   	; 0x256 <_Z10lcd_stringPKc>
     c90:	84 99       	sbic	0x10, 4	; 16
     c92:	0e c0       	rjmp	.+28     	; 0xcb0 <_Z4menuv+0x1b2>
     c94:	8f ef       	ldi	r24, 0xFF	; 255
     c96:	93 eb       	ldi	r25, 0xB3	; 179
     c98:	01 97       	sbiw	r24, 0x01	; 1
     c9a:	f1 f7       	brne	.-4      	; 0xc98 <_Z4menuv+0x19a>
     c9c:	00 c0       	rjmp	.+0      	; 0xc9e <_Z4menuv+0x1a0>
     c9e:	00 00       	nop
     ca0:	8f ef       	ldi	r24, 0xFF	; 255
     ca2:	93 e2       	ldi	r25, 0x23	; 35
     ca4:	01 97       	sbiw	r24, 0x01	; 1
     ca6:	f1 f7       	brne	.-4      	; 0xca4 <_Z4menuv+0x1a6>
     ca8:	00 c0       	rjmp	.+0      	; 0xcaa <_Z4menuv+0x1ac>
     caa:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     cac:	84 9b       	sbis	0x10, 4	; 16
     cae:	fd c0       	rjmp	.+506    	; 0xeaa <_Z4menuv+0x3ac>
     cb0:	83 99       	sbic	0x10, 3	; 16
     cb2:	d3 cf       	rjmp	.-90     	; 0xc5a <_Z4menuv+0x15c>
     cb4:	8f ef       	ldi	r24, 0xFF	; 255
     cb6:	93 eb       	ldi	r25, 0xB3	; 179
     cb8:	01 97       	sbiw	r24, 0x01	; 1
     cba:	f1 f7       	brne	.-4      	; 0xcb8 <_Z4menuv+0x1ba>
     cbc:	00 c0       	rjmp	.+0      	; 0xcbe <_Z4menuv+0x1c0>
     cbe:	00 00       	nop
     cc0:	8f ef       	ldi	r24, 0xFF	; 255
     cc2:	93 e2       	ldi	r25, 0x23	; 35
     cc4:	01 97       	sbiw	r24, 0x01	; 1
     cc6:	f1 f7       	brne	.-4      	; 0xcc4 <_Z4menuv+0x1c6>
     cc8:	00 c0       	rjmp	.+0      	; 0xcca <_Z4menuv+0x1cc>
     cca:	00 00       	nop
				//Jetzt noch nicht implementiert
				lcd_clear();
				aus(1,2);
				aus(2,0);
				lcd_string("Lampenstärke:");
				while (!debounce(&PIND,PD3))
     ccc:	83 99       	sbic	0x10, 3	; 16
     cce:	c5 cf       	rjmp	.-118    	; 0xc5a <_Z4menuv+0x15c>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     cd0:	83 e0       	ldi	r24, 0x03	; 3
     cd2:	18 cf       	rjmp	.-464    	; 0xb04 <_Z4menuv+0x6>
				break;
			
			case 3:
				//Zeit einstellen ohnen Sekunden
				lcd_clear();
     cd4:	6e da       	rcall	.-2852   	; 0x1b2 <_Z9lcd_clearv>
				aus(1,3);
     cd6:	63 e0       	ldi	r22, 0x03	; 3
     cd8:	81 e0       	ldi	r24, 0x01	; 1
     cda:	37 dc       	rcall	.-1938   	; 0x54a <_Z3aushh>
				aus(2,0);
     cdc:	60 e0       	ldi	r22, 0x00	; 0
     cde:	82 e0       	ldi	r24, 0x02	; 2
     ce0:	34 dc       	rcall	.-1944   	; 0x54a <_Z3aushh>
				lcd_string("Zeit");
     ce2:	81 e4       	ldi	r24, 0x41	; 65
     ce4:	91 e0       	ldi	r25, 0x01	; 1
     ce6:	b7 da       	rcall	.-2706   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     ce8:	2b c0       	rjmp	.+86     	; 0xd40 <_Z4menuv+0x242>
				{
					if(Sekunden!=sektemp){
     cea:	90 91 72 01 	lds	r25, 0x0172
     cee:	80 91 69 01 	lds	r24, 0x0169
     cf2:	98 13       	cpse	r25, r24
						zeit();
     cf4:	4f db       	rcall	.-2402   	; 0x394 <_Z4zeitv>
     cf6:	82 99       	sbic	0x10, 2	; 16
     cf8:	13 c0       	rjmp	.+38     	; 0xd20 <_Z4menuv+0x222>
     cfa:	8f ef       	ldi	r24, 0xFF	; 255
     cfc:	93 eb       	ldi	r25, 0xB3	; 179
     cfe:	01 97       	sbiw	r24, 0x01	; 1
     d00:	f1 f7       	brne	.-4      	; 0xcfe <_Z4menuv+0x200>
     d02:	00 c0       	rjmp	.+0      	; 0xd04 <_Z4menuv+0x206>
     d04:	00 00       	nop
     d06:	8f ef       	ldi	r24, 0xFF	; 255
     d08:	93 e2       	ldi	r25, 0x23	; 35
     d0a:	01 97       	sbiw	r24, 0x01	; 1
     d0c:	f1 f7       	brne	.-4      	; 0xd0a <_Z4menuv+0x20c>
     d0e:	00 c0       	rjmp	.+0      	; 0xd10 <_Z4menuv+0x212>
     d10:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     d12:	82 99       	sbic	0x10, 2	; 16
     d14:	05 c0       	rjmp	.+10     	; 0xd20 <_Z4menuv+0x222>
					{
						einst(0);
     d16:	80 e0       	ldi	r24, 0x00	; 0
     d18:	bf dc       	rcall	.-1666   	; 0x698 <_Z5einsth>
						lcd_string("Zeit");
     d1a:	81 e4       	ldi	r24, 0x41	; 65
     d1c:	91 e0       	ldi	r25, 0x01	; 1
     d1e:	9b da       	rcall	.-2762   	; 0x256 <_Z10lcd_stringPKc>
     d20:	84 99       	sbic	0x10, 4	; 16
     d22:	0e c0       	rjmp	.+28     	; 0xd40 <_Z4menuv+0x242>
     d24:	8f ef       	ldi	r24, 0xFF	; 255
     d26:	93 eb       	ldi	r25, 0xB3	; 179
     d28:	01 97       	sbiw	r24, 0x01	; 1
     d2a:	f1 f7       	brne	.-4      	; 0xd28 <_Z4menuv+0x22a>
     d2c:	00 c0       	rjmp	.+0      	; 0xd2e <_Z4menuv+0x230>
     d2e:	00 00       	nop
     d30:	8f ef       	ldi	r24, 0xFF	; 255
     d32:	93 e2       	ldi	r25, 0x23	; 35
     d34:	01 97       	sbiw	r24, 0x01	; 1
     d36:	f1 f7       	brne	.-4      	; 0xd34 <_Z4menuv+0x236>
     d38:	00 c0       	rjmp	.+0      	; 0xd3a <_Z4menuv+0x23c>
     d3a:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     d3c:	84 9b       	sbis	0x10, 4	; 16
     d3e:	b5 c0       	rjmp	.+362    	; 0xeaa <_Z4menuv+0x3ac>
     d40:	83 99       	sbic	0x10, 3	; 16
     d42:	d3 cf       	rjmp	.-90     	; 0xcea <_Z4menuv+0x1ec>
     d44:	8f ef       	ldi	r24, 0xFF	; 255
     d46:	93 eb       	ldi	r25, 0xB3	; 179
     d48:	01 97       	sbiw	r24, 0x01	; 1
     d4a:	f1 f7       	brne	.-4      	; 0xd48 <_Z4menuv+0x24a>
     d4c:	00 c0       	rjmp	.+0      	; 0xd4e <_Z4menuv+0x250>
     d4e:	00 00       	nop
     d50:	8f ef       	ldi	r24, 0xFF	; 255
     d52:	93 e2       	ldi	r25, 0x23	; 35
     d54:	01 97       	sbiw	r24, 0x01	; 1
     d56:	f1 f7       	brne	.-4      	; 0xd54 <_Z4menuv+0x256>
     d58:	00 c0       	rjmp	.+0      	; 0xd5a <_Z4menuv+0x25c>
     d5a:	00 00       	nop
				//Zeit einstellen ohnen Sekunden
				lcd_clear();
				aus(1,3);
				aus(2,0);
				lcd_string("Zeit");
				while (!debounce(&PIND,PD3))
     d5c:	83 99       	sbic	0x10, 3	; 16
     d5e:	c5 cf       	rjmp	.-118    	; 0xcea <_Z4menuv+0x1ec>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     d60:	84 e0       	ldi	r24, 0x04	; 4
     d62:	d0 ce       	rjmp	.-608    	; 0xb04 <_Z4menuv+0x6>
				break;
				
			case 4:
				//Sekundenoffset einstellen
				lcd_clear();
     d64:	26 da       	rcall	.-2996   	; 0x1b2 <_Z9lcd_clearv>
				lcd_home();
     d66:	5c da       	rcall	.-2888   	; 0x220 <_Z8lcd_homev>
				lcd_string("Sekundenoffset:");
     d68:	8e ec       	ldi	r24, 0xCE	; 206
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	74 da       	rcall	.-2840   	; 0x256 <_Z10lcd_stringPKc>
				aus(2,0);
     d6e:	60 e0       	ldi	r22, 0x00	; 0
     d70:	82 e0       	ldi	r24, 0x02	; 2
     d72:	eb db       	rcall	.-2090   	; 0x54a <_Z3aushh>
				itoa(sekoffset,Buffer,10);
     d74:	80 91 64 01 	lds	r24, 0x0164
     d78:	4a e0       	ldi	r20, 0x0A	; 10
     d7a:	50 e0       	ldi	r21, 0x00	; 0
     d7c:	60 e5       	ldi	r22, 0x50	; 80
     d7e:	71 e0       	ldi	r23, 0x01	; 1
     d80:	99 27       	eor	r25, r25
     d82:	87 fd       	sbrc	r24, 7
     d84:	90 95       	com	r25
     d86:	0a d3       	rcall	.+1556   	; 0x139c <itoa>
				lcd_string(Buffer);
     d88:	80 e5       	ldi	r24, 0x50	; 80
     d8a:	91 e0       	ldi	r25, 0x01	; 1
     d8c:	64 da       	rcall	.-2872   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     d8e:	28 c0       	rjmp	.+80     	; 0xde0 <_Z4menuv+0x2e2>
				{
					if(Sekunden!=sektemp){
     d90:	90 91 72 01 	lds	r25, 0x0172
     d94:	80 91 69 01 	lds	r24, 0x0169
     d98:	98 13       	cpse	r25, r24
						zeit();
     d9a:	fc da       	rcall	.-2568   	; 0x394 <_Z4zeitv>
     d9c:	82 99       	sbic	0x10, 2	; 16
     d9e:	10 c0       	rjmp	.+32     	; 0xdc0 <_Z4menuv+0x2c2>
     da0:	8f ef       	ldi	r24, 0xFF	; 255
     da2:	93 eb       	ldi	r25, 0xB3	; 179
     da4:	01 97       	sbiw	r24, 0x01	; 1
     da6:	f1 f7       	brne	.-4      	; 0xda4 <_Z4menuv+0x2a6>
     da8:	00 c0       	rjmp	.+0      	; 0xdaa <_Z4menuv+0x2ac>
     daa:	00 00       	nop
     dac:	8f ef       	ldi	r24, 0xFF	; 255
     dae:	93 e2       	ldi	r25, 0x23	; 35
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	f1 f7       	brne	.-4      	; 0xdb0 <_Z4menuv+0x2b2>
     db4:	00 c0       	rjmp	.+0      	; 0xdb6 <_Z4menuv+0x2b8>
     db6:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     db8:	82 99       	sbic	0x10, 2	; 16
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <_Z4menuv+0x2c2>
					{
						einst(2);
     dbc:	82 e0       	ldi	r24, 0x02	; 2
     dbe:	6c dc       	rcall	.-1832   	; 0x698 <_Z5einsth>
     dc0:	84 99       	sbic	0x10, 4	; 16
     dc2:	0e c0       	rjmp	.+28     	; 0xde0 <_Z4menuv+0x2e2>
     dc4:	8f ef       	ldi	r24, 0xFF	; 255
     dc6:	93 eb       	ldi	r25, 0xB3	; 179
     dc8:	01 97       	sbiw	r24, 0x01	; 1
     dca:	f1 f7       	brne	.-4      	; 0xdc8 <_Z4menuv+0x2ca>
     dcc:	00 c0       	rjmp	.+0      	; 0xdce <_Z4menuv+0x2d0>
     dce:	00 00       	nop
     dd0:	8f ef       	ldi	r24, 0xFF	; 255
     dd2:	93 e2       	ldi	r25, 0x23	; 35
     dd4:	01 97       	sbiw	r24, 0x01	; 1
     dd6:	f1 f7       	brne	.-4      	; 0xdd4 <_Z4menuv+0x2d6>
     dd8:	00 c0       	rjmp	.+0      	; 0xdda <_Z4menuv+0x2dc>
     dda:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     ddc:	84 9b       	sbis	0x10, 4	; 16
     dde:	65 c0       	rjmp	.+202    	; 0xeaa <_Z4menuv+0x3ac>
     de0:	83 99       	sbic	0x10, 3	; 16
     de2:	d6 cf       	rjmp	.-84     	; 0xd90 <_Z4menuv+0x292>
     de4:	8f ef       	ldi	r24, 0xFF	; 255
     de6:	93 eb       	ldi	r25, 0xB3	; 179
     de8:	01 97       	sbiw	r24, 0x01	; 1
     dea:	f1 f7       	brne	.-4      	; 0xde8 <_Z4menuv+0x2ea>
     dec:	00 c0       	rjmp	.+0      	; 0xdee <_Z4menuv+0x2f0>
     dee:	00 00       	nop
     df0:	8f ef       	ldi	r24, 0xFF	; 255
     df2:	93 e2       	ldi	r25, 0x23	; 35
     df4:	01 97       	sbiw	r24, 0x01	; 1
     df6:	f1 f7       	brne	.-4      	; 0xdf4 <_Z4menuv+0x2f6>
     df8:	00 c0       	rjmp	.+0      	; 0xdfa <_Z4menuv+0x2fc>
     dfa:	00 00       	nop
				lcd_home();
				lcd_string("Sekundenoffset:");
				aus(2,0);
				itoa(sekoffset,Buffer,10);
				lcd_string(Buffer);
				while (!debounce(&PIND,PD3))
     dfc:	83 99       	sbic	0x10, 3	; 16
     dfe:	c8 cf       	rjmp	.-112    	; 0xd90 <_Z4menuv+0x292>
					if (debounce(&PIND,PD4))
					{
						return 1;
					}
				}
				posit++;
     e00:	85 e0       	ldi	r24, 0x05	; 5
     e02:	80 ce       	rjmp	.-768    	; 0xb04 <_Z4menuv+0x6>
				break;
				
			case 5:
				//Temperaturoffset einstellen
				lcd_clear();
     e04:	d6 d9       	rcall	.-3156   	; 0x1b2 <_Z9lcd_clearv>
				lcd_home();
     e06:	0c da       	rcall	.-3048   	; 0x220 <_Z8lcd_homev>
				lcd_string("Temperaturoffset:");
     e08:	8e ed       	ldi	r24, 0xDE	; 222
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	24 da       	rcall	.-3000   	; 0x256 <_Z10lcd_stringPKc>
				aus(2,0);
     e0e:	60 e0       	ldi	r22, 0x00	; 0
     e10:	82 e0       	ldi	r24, 0x02	; 2
     e12:	9b db       	rcall	.-2250   	; 0x54a <_Z3aushh>
				itoa(tempoffset,Buffer,10);
     e14:	80 91 64 00 	lds	r24, 0x0064
     e18:	4a e0       	ldi	r20, 0x0A	; 10
     e1a:	50 e0       	ldi	r21, 0x00	; 0
     e1c:	60 e5       	ldi	r22, 0x50	; 80
     e1e:	71 e0       	ldi	r23, 0x01	; 1
     e20:	99 27       	eor	r25, r25
     e22:	87 fd       	sbrc	r24, 7
     e24:	90 95       	com	r25
     e26:	ba d2       	rcall	.+1396   	; 0x139c <itoa>
				lcd_string(Buffer);
     e28:	80 e5       	ldi	r24, 0x50	; 80
     e2a:	91 e0       	ldi	r25, 0x01	; 1
     e2c:	14 da       	rcall	.-3032   	; 0x256 <_Z10lcd_stringPKc>
				while (!debounce(&PIND,PD3))
     e2e:	2a c0       	rjmp	.+84     	; 0xe84 <_Z4menuv+0x386>
				{
					if(Sekunden!=sektemp){
     e30:	90 91 72 01 	lds	r25, 0x0172
     e34:	80 91 69 01 	lds	r24, 0x0169
     e38:	98 13       	cpse	r25, r24
						zeit();
     e3a:	ac da       	rcall	.-2728   	; 0x394 <_Z4zeitv>
     e3c:	82 99       	sbic	0x10, 2	; 16
     e3e:	10 c0       	rjmp	.+32     	; 0xe60 <_Z4menuv+0x362>
     e40:	8f ef       	ldi	r24, 0xFF	; 255
     e42:	93 eb       	ldi	r25, 0xB3	; 179
     e44:	01 97       	sbiw	r24, 0x01	; 1
     e46:	f1 f7       	brne	.-4      	; 0xe44 <_Z4menuv+0x346>
     e48:	00 c0       	rjmp	.+0      	; 0xe4a <_Z4menuv+0x34c>
     e4a:	00 00       	nop
     e4c:	8f ef       	ldi	r24, 0xFF	; 255
     e4e:	93 e2       	ldi	r25, 0x23	; 35
     e50:	01 97       	sbiw	r24, 0x01	; 1
     e52:	f1 f7       	brne	.-4      	; 0xe50 <_Z4menuv+0x352>
     e54:	00 c0       	rjmp	.+0      	; 0xe56 <_Z4menuv+0x358>
     e56:	00 00       	nop
					}
					if (debounce(&PIND,PD2))
     e58:	82 99       	sbic	0x10, 2	; 16
     e5a:	02 c0       	rjmp	.+4      	; 0xe60 <_Z4menuv+0x362>
					{
						einst(3);
     e5c:	83 e0       	ldi	r24, 0x03	; 3
     e5e:	1c dc       	rcall	.-1992   	; 0x698 <_Z5einsth>
     e60:	84 99       	sbic	0x10, 4	; 16
     e62:	10 c0       	rjmp	.+32     	; 0xe84 <_Z4menuv+0x386>
     e64:	8f ef       	ldi	r24, 0xFF	; 255
     e66:	93 eb       	ldi	r25, 0xB3	; 179
     e68:	01 97       	sbiw	r24, 0x01	; 1
     e6a:	f1 f7       	brne	.-4      	; 0xe68 <_Z4menuv+0x36a>
     e6c:	00 c0       	rjmp	.+0      	; 0xe6e <_Z4menuv+0x370>
     e6e:	00 00       	nop
     e70:	8f ef       	ldi	r24, 0xFF	; 255
     e72:	93 e2       	ldi	r25, 0x23	; 35
     e74:	01 97       	sbiw	r24, 0x01	; 1
     e76:	f1 f7       	brne	.-4      	; 0xe74 <_Z4menuv+0x376>
     e78:	00 c0       	rjmp	.+0      	; 0xe7a <_Z4menuv+0x37c>
     e7a:	00 00       	nop
					}
					if (debounce(&PIND,PD4))
     e7c:	84 99       	sbic	0x10, 4	; 16
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <_Z4menuv+0x386>
					{
						temperatur();
     e80:	2d da       	rcall	.-2982   	; 0x2dc <_Z10temperaturv>
						return 1;
     e82:	13 c0       	rjmp	.+38     	; 0xeaa <_Z4menuv+0x3ac>
     e84:	83 99       	sbic	0x10, 3	; 16
     e86:	d4 cf       	rjmp	.-88     	; 0xe30 <_Z4menuv+0x332>
     e88:	8f ef       	ldi	r24, 0xFF	; 255
     e8a:	93 eb       	ldi	r25, 0xB3	; 179
     e8c:	01 97       	sbiw	r24, 0x01	; 1
     e8e:	f1 f7       	brne	.-4      	; 0xe8c <_Z4menuv+0x38e>
     e90:	00 c0       	rjmp	.+0      	; 0xe92 <_Z4menuv+0x394>
     e92:	00 00       	nop
     e94:	8f ef       	ldi	r24, 0xFF	; 255
     e96:	93 e2       	ldi	r25, 0x23	; 35
     e98:	01 97       	sbiw	r24, 0x01	; 1
     e9a:	f1 f7       	brne	.-4      	; 0xe98 <_Z4menuv+0x39a>
     e9c:	00 c0       	rjmp	.+0      	; 0xe9e <_Z4menuv+0x3a0>
     e9e:	00 00       	nop
				lcd_home();
				lcd_string("Temperaturoffset:");
				aus(2,0);
				itoa(tempoffset,Buffer,10);
				lcd_string(Buffer);
				while (!debounce(&PIND,PD3))
     ea0:	83 99       	sbic	0x10, 3	; 16
     ea2:	c6 cf       	rjmp	.-116    	; 0xe30 <_Z4menuv+0x332>
					{
						temperatur();
						return 1;
					}
				}
				temperatur();
     ea4:	1b da       	rcall	.-3018   	; 0x2dc <_Z10temperaturv>
				posit++;
     ea6:	8c 2f       	mov	r24, r28
				break;
     ea8:	2d ce       	rjmp	.-934    	; 0xb04 <_Z4menuv+0x6>
				posit=0;
				break;
		}
	}
return 0;
}
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	cf 91       	pop	r28
     eae:	08 95       	ret

00000eb0 <_Z4initv>:
}

void init(){
	//LCD einstellen und erste Ausgabe
	lcd_init();
     eb0:	87 d9       	rcall	.-3314   	; 0x1c0 <_Z8lcd_initv>
	aus(1,4);
     eb2:	64 e0       	ldi	r22, 0x04	; 4
     eb4:	81 e0       	ldi	r24, 0x01	; 1
     eb6:	49 db       	rcall	.-2414   	; 0x54a <_Z3aushh>
     eb8:	2f ef       	ldi	r18, 0xFF	; 255
     eba:	8f ed       	ldi	r24, 0xDF	; 223
     ebc:	90 e1       	ldi	r25, 0x10	; 16
     ebe:	21 50       	subi	r18, 0x01	; 1
     ec0:	80 40       	sbci	r24, 0x00	; 0
     ec2:	90 40       	sbci	r25, 0x00	; 0
     ec4:	e1 f7       	brne	.-8      	; 0xebe <_Z4initv+0xe>
     ec6:	00 c0       	rjmp	.+0      	; 0xec8 <_Z4initv+0x18>
     ec8:	00 00       	nop
	//lcd_string("Wecker");
	//lcd_setcursor( 0, 2 );
	//lcd_string("Start!");
	_delay_ms(1500);
	lcd_clear();
     eca:	73 d9       	rcall	.-3354   	; 0x1b2 <_Z9lcd_clearv>
	//SPCR = (1<<SPE) | (1<<MSTR) | (1<<DORD);
	//SPSR = (1<<SPI2X);
	//SPDR = 0;
	
	//ADC
	ADMUX = (1<<REFS0);
     ecc:	80 e4       	ldi	r24, 0x40	; 64
     ece:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
     ed0:	83 e0       	ldi	r24, 0x03	; 3
     ed2:	86 b9       	out	0x06, r24	; 6
	ADCSRA |= (1<<ADEN);
     ed4:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1<<ADSC);
     ed6:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC) ) {
     ed8:	36 99       	sbic	0x06, 6	; 6
     eda:	fe cf       	rjmp	.-4      	; 0xed8 <_Z4initv+0x28>
	}
	(void) ADCW;
     edc:	84 b1       	in	r24, 0x04	; 4
     ede:	95 b1       	in	r25, 0x05	; 5
	
	//Eingänge
	PORTD |= (1<<PD2) | (1<<PD3) | (1<<PD4);
     ee0:	82 b3       	in	r24, 0x12	; 18
     ee2:	8c 61       	ori	r24, 0x1C	; 28
     ee4:	82 bb       	out	0x12, r24	; 18
	
	//Ausgänge
	DDRC = (1<<PC5);
     ee6:	80 e2       	ldi	r24, 0x20	; 32
     ee8:	84 bb       	out	0x14, r24	; 20
	
	//erste zeiteinstellung
	zeitsetzen();
     eea:	ec dd       	rcall	.-1064   	; 0xac4 <_Z10zeitsetzenv>
	
	//Timer 1 Einstelungen
	TCNT1H = 0b11110001;
     eec:	81 ef       	ldi	r24, 0xF1	; 241
     eee:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     ef0:	80 ef       	ldi	r24, 0xF0	; 240
     ef2:	8c bd       	out	0x2c, r24	; 44
	TIMSK = (1<<TOIE1);
     ef4:	84 e0       	ldi	r24, 0x04	; 4
     ef6:	89 bf       	out	0x39, r24	; 57
	TCCR1B = (1<<CS10) | (1<<CS12);
     ef8:	85 e0       	ldi	r24, 0x05	; 5
     efa:	8e bd       	out	0x2e, r24	; 46
	
	//Interupts aktivieren
	sei();
     efc:	78 94       	sei
	
	//Wecker einschalten
	Wan=0;
     efe:	10 92 6a 01 	sts	0x016A, r1
     f02:	08 95       	ret

00000f04 <__vector_8>:
#include "einstellungen.h"
#include "zeit.h"
#include "menue.h"
#include "ausgabe.h"

ISR(TIMER1_OVF_vect){
     f04:	1f 92       	push	r1
     f06:	0f 92       	push	r0
     f08:	0f b6       	in	r0, 0x3f	; 63
     f0a:	0f 92       	push	r0
     f0c:	11 24       	eor	r1, r1
     f0e:	8f 93       	push	r24
	TCNT1H = 0b11110001;
     f10:	81 ef       	ldi	r24, 0xF1	; 241
     f12:	8d bd       	out	0x2d, r24	; 45
	TCNT1L = 0b11110000;
     f14:	80 ef       	ldi	r24, 0xF0	; 240
     f16:	8c bd       	out	0x2c, r24	; 44
	Sekunden++;
     f18:	80 91 72 01 	lds	r24, 0x0172
     f1c:	8f 5f       	subi	r24, 0xFF	; 255
     f1e:	80 93 72 01 	sts	0x0172, r24
}
     f22:	8f 91       	pop	r24
     f24:	0f 90       	pop	r0
     f26:	0f be       	out	0x3f, r0	; 63
     f28:	0f 90       	pop	r0
     f2a:	1f 90       	pop	r1
     f2c:	18 95       	reti

00000f2e <main>:

int main(void)
{
	init();
     f2e:	c0 df       	rcall	.-128    	; 0xeb0 <_Z4initv>
	
	while(1)
	{
		if (Sekunden!=sektemp)
     f30:	90 91 72 01 	lds	r25, 0x0172
     f34:	80 91 69 01 	lds	r24, 0x0169
     f38:	98 17       	cp	r25, r24
     f3a:	39 f0       	breq	.+14     	; 0xf4a <main+0x1c>
		{
			zeit();
     f3c:	2b da       	rcall	.-2986   	; 0x394 <_Z4zeitv>
			aus(1,3);
     f3e:	63 e0       	ldi	r22, 0x03	; 3
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	03 db       	rcall	.-2554   	; 0x54a <_Z3aushh>
			aus(2,1);
     f44:	61 e0       	ldi	r22, 0x01	; 1
     f46:	82 e0       	ldi	r24, 0x02	; 2
     f48:	00 db       	rcall	.-2560   	; 0x54a <_Z3aushh>
     f4a:	82 99       	sbic	0x10, 2	; 16
     f4c:	11 c0       	rjmp	.+34     	; 0xf70 <main+0x42>
     f4e:	8f ef       	ldi	r24, 0xFF	; 255
     f50:	93 eb       	ldi	r25, 0xB3	; 179
     f52:	01 97       	sbiw	r24, 0x01	; 1
     f54:	f1 f7       	brne	.-4      	; 0xf52 <main+0x24>
     f56:	00 c0       	rjmp	.+0      	; 0xf58 <main+0x2a>
     f58:	00 00       	nop
     f5a:	8f ef       	ldi	r24, 0xFF	; 255
     f5c:	93 e2       	ldi	r25, 0x23	; 35
     f5e:	01 97       	sbiw	r24, 0x01	; 1
     f60:	f1 f7       	brne	.-4      	; 0xf5e <main+0x30>
     f62:	00 c0       	rjmp	.+0      	; 0xf64 <main+0x36>
     f64:	00 00       	nop
		}
		if(debounce(&PIND,2))
     f66:	82 99       	sbic	0x10, 2	; 16
     f68:	03 c0       	rjmp	.+6      	; 0xf70 <main+0x42>
		{
			Wan=0;
     f6a:	10 92 6a 01 	sts	0x016A, r1
			PORTC &= ~(1<<PC5);
     f6e:	ad 98       	cbi	0x15, 5	; 21
     f70:	84 99       	sbic	0x10, 4	; 16
     f72:	15 c0       	rjmp	.+42     	; 0xf9e <main+0x70>
     f74:	8f ef       	ldi	r24, 0xFF	; 255
     f76:	93 eb       	ldi	r25, 0xB3	; 179
     f78:	01 97       	sbiw	r24, 0x01	; 1
     f7a:	f1 f7       	brne	.-4      	; 0xf78 <main+0x4a>
     f7c:	00 c0       	rjmp	.+0      	; 0xf7e <main+0x50>
     f7e:	00 00       	nop
     f80:	8f ef       	ldi	r24, 0xFF	; 255
     f82:	93 e2       	ldi	r25, 0x23	; 35
     f84:	01 97       	sbiw	r24, 0x01	; 1
     f86:	f1 f7       	brne	.-4      	; 0xf84 <main+0x56>
     f88:	00 c0       	rjmp	.+0      	; 0xf8a <main+0x5c>
     f8a:	00 00       	nop
		}
		if (debounce(&PIND,PD4))
     f8c:	84 99       	sbic	0x10, 4	; 16
     f8e:	07 c0       	rjmp	.+14     	; 0xf9e <main+0x70>
		{
			menu();
     f90:	b6 dd       	rcall	.-1172   	; 0xafe <_Z4menuv>
			aus(1,3);
     f92:	63 e0       	ldi	r22, 0x03	; 3
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	d9 da       	rcall	.-2638   	; 0x54a <_Z3aushh>
			aus(2,1);
     f98:	61 e0       	ldi	r22, 0x01	; 1
     f9a:	82 e0       	ldi	r24, 0x02	; 2
     f9c:	d6 da       	rcall	.-2644   	; 0x54a <_Z3aushh>
     f9e:	83 99       	sbic	0x10, 3	; 16
     fa0:	c7 cf       	rjmp	.-114    	; 0xf30 <main+0x2>
     fa2:	8f ef       	ldi	r24, 0xFF	; 255
     fa4:	93 eb       	ldi	r25, 0xB3	; 179
     fa6:	01 97       	sbiw	r24, 0x01	; 1
     fa8:	f1 f7       	brne	.-4      	; 0xfa6 <main+0x78>
     faa:	00 c0       	rjmp	.+0      	; 0xfac <main+0x7e>
     fac:	00 00       	nop
     fae:	8f ef       	ldi	r24, 0xFF	; 255
     fb0:	93 e2       	ldi	r25, 0x23	; 35
     fb2:	01 97       	sbiw	r24, 0x01	; 1
     fb4:	f1 f7       	brne	.-4      	; 0xfb2 <main+0x84>
     fb6:	00 c0       	rjmp	.+0      	; 0xfb8 <main+0x8a>
     fb8:	00 00       	nop
		}
		if (debounce(&PIND,PD3))
     fba:	83 99       	sbic	0x10, 3	; 16
     fbc:	b9 cf       	rjmp	.-142    	; 0xf30 <main+0x2>
		{
			switch (lampenstaerke)
     fbe:	80 91 60 00 	lds	r24, 0x0060
     fc2:	82 30       	cpi	r24, 0x02	; 2
     fc4:	31 f0       	breq	.+12     	; 0xfd2 <main+0xa4>
     fc6:	83 30       	cpi	r24, 0x03	; 3
     fc8:	31 f0       	breq	.+12     	; 0xfd6 <main+0xa8>
     fca:	81 30       	cpi	r24, 0x01	; 1
     fcc:	29 f4       	brne	.+10     	; 0xfd8 <main+0xaa>
			{
				case 1:
					PORTC |= (1<<PC5);
     fce:	ad 9a       	sbi	0x15, 5	; 21
					break;
     fd0:	03 c0       	rjmp	.+6      	; 0xfd8 <main+0xaa>
					
				case 2:
					PORTC |= (1<<PC5);
     fd2:	ad 9a       	sbi	0x15, 5	; 21
					break;
     fd4:	01 c0       	rjmp	.+2      	; 0xfd8 <main+0xaa>
					
				case 3:
					PORTC |= (1<<PC5);
     fd6:	ad 9a       	sbi	0x15, 5	; 21
					break;
					
				default:
					break;
			}
			if ( PORTC& (1<<PC3))
     fd8:	ab 9b       	sbis	0x15, 3	; 21
     fda:	aa cf       	rjmp	.-172    	; 0xf30 <main+0x2>
			{
				PORTC &= ~(1<<PC5);
     fdc:	ad 98       	cbi	0x15, 5	; 21
     fde:	a8 cf       	rjmp	.-176    	; 0xf30 <main+0x2>

00000fe0 <__subsf3>:
     fe0:	50 58       	subi	r21, 0x80	; 128

00000fe2 <__addsf3>:
     fe2:	bb 27       	eor	r27, r27
     fe4:	aa 27       	eor	r26, r26
     fe6:	0e d0       	rcall	.+28     	; 0x1004 <__addsf3x>
     fe8:	1c c1       	rjmp	.+568    	; 0x1222 <__fp_round>
     fea:	0d d1       	rcall	.+538    	; 0x1206 <__fp_pscA>
     fec:	30 f0       	brcs	.+12     	; 0xffa <__addsf3+0x18>
     fee:	12 d1       	rcall	.+548    	; 0x1214 <__fp_pscB>
     ff0:	20 f0       	brcs	.+8      	; 0xffa <__addsf3+0x18>
     ff2:	31 f4       	brne	.+12     	; 0x1000 <__addsf3+0x1e>
     ff4:	9f 3f       	cpi	r25, 0xFF	; 255
     ff6:	11 f4       	brne	.+4      	; 0xffc <__addsf3+0x1a>
     ff8:	1e f4       	brtc	.+6      	; 0x1000 <__addsf3+0x1e>
     ffa:	02 c1       	rjmp	.+516    	; 0x1200 <__fp_nan>
     ffc:	0e f4       	brtc	.+2      	; 0x1000 <__addsf3+0x1e>
     ffe:	e0 95       	com	r30
    1000:	e7 fb       	bst	r30, 7
    1002:	f8 c0       	rjmp	.+496    	; 0x11f4 <__fp_inf>

00001004 <__addsf3x>:
    1004:	e9 2f       	mov	r30, r25
    1006:	1e d1       	rcall	.+572    	; 0x1244 <__fp_split3>
    1008:	80 f3       	brcs	.-32     	; 0xfea <__addsf3+0x8>
    100a:	ba 17       	cp	r27, r26
    100c:	62 07       	cpc	r22, r18
    100e:	73 07       	cpc	r23, r19
    1010:	84 07       	cpc	r24, r20
    1012:	95 07       	cpc	r25, r21
    1014:	18 f0       	brcs	.+6      	; 0x101c <__addsf3x+0x18>
    1016:	71 f4       	brne	.+28     	; 0x1034 <__addsf3x+0x30>
    1018:	9e f5       	brtc	.+102    	; 0x1080 <__addsf3x+0x7c>
    101a:	36 c1       	rjmp	.+620    	; 0x1288 <__fp_zero>
    101c:	0e f4       	brtc	.+2      	; 0x1020 <__addsf3x+0x1c>
    101e:	e0 95       	com	r30
    1020:	0b 2e       	mov	r0, r27
    1022:	ba 2f       	mov	r27, r26
    1024:	a0 2d       	mov	r26, r0
    1026:	0b 01       	movw	r0, r22
    1028:	b9 01       	movw	r22, r18
    102a:	90 01       	movw	r18, r0
    102c:	0c 01       	movw	r0, r24
    102e:	ca 01       	movw	r24, r20
    1030:	a0 01       	movw	r20, r0
    1032:	11 24       	eor	r1, r1
    1034:	ff 27       	eor	r31, r31
    1036:	59 1b       	sub	r21, r25
    1038:	99 f0       	breq	.+38     	; 0x1060 <__addsf3x+0x5c>
    103a:	59 3f       	cpi	r21, 0xF9	; 249
    103c:	50 f4       	brcc	.+20     	; 0x1052 <__addsf3x+0x4e>
    103e:	50 3e       	cpi	r21, 0xE0	; 224
    1040:	68 f1       	brcs	.+90     	; 0x109c <__addsf3x+0x98>
    1042:	1a 16       	cp	r1, r26
    1044:	f0 40       	sbci	r31, 0x00	; 0
    1046:	a2 2f       	mov	r26, r18
    1048:	23 2f       	mov	r18, r19
    104a:	34 2f       	mov	r19, r20
    104c:	44 27       	eor	r20, r20
    104e:	58 5f       	subi	r21, 0xF8	; 248
    1050:	f3 cf       	rjmp	.-26     	; 0x1038 <__addsf3x+0x34>
    1052:	46 95       	lsr	r20
    1054:	37 95       	ror	r19
    1056:	27 95       	ror	r18
    1058:	a7 95       	ror	r26
    105a:	f0 40       	sbci	r31, 0x00	; 0
    105c:	53 95       	inc	r21
    105e:	c9 f7       	brne	.-14     	; 0x1052 <__addsf3x+0x4e>
    1060:	7e f4       	brtc	.+30     	; 0x1080 <__addsf3x+0x7c>
    1062:	1f 16       	cp	r1, r31
    1064:	ba 0b       	sbc	r27, r26
    1066:	62 0b       	sbc	r22, r18
    1068:	73 0b       	sbc	r23, r19
    106a:	84 0b       	sbc	r24, r20
    106c:	ba f0       	brmi	.+46     	; 0x109c <__addsf3x+0x98>
    106e:	91 50       	subi	r25, 0x01	; 1
    1070:	a1 f0       	breq	.+40     	; 0x109a <__addsf3x+0x96>
    1072:	ff 0f       	add	r31, r31
    1074:	bb 1f       	adc	r27, r27
    1076:	66 1f       	adc	r22, r22
    1078:	77 1f       	adc	r23, r23
    107a:	88 1f       	adc	r24, r24
    107c:	c2 f7       	brpl	.-16     	; 0x106e <__addsf3x+0x6a>
    107e:	0e c0       	rjmp	.+28     	; 0x109c <__addsf3x+0x98>
    1080:	ba 0f       	add	r27, r26
    1082:	62 1f       	adc	r22, r18
    1084:	73 1f       	adc	r23, r19
    1086:	84 1f       	adc	r24, r20
    1088:	48 f4       	brcc	.+18     	; 0x109c <__addsf3x+0x98>
    108a:	87 95       	ror	r24
    108c:	77 95       	ror	r23
    108e:	67 95       	ror	r22
    1090:	b7 95       	ror	r27
    1092:	f7 95       	ror	r31
    1094:	9e 3f       	cpi	r25, 0xFE	; 254
    1096:	08 f0       	brcs	.+2      	; 0x109a <__addsf3x+0x96>
    1098:	b3 cf       	rjmp	.-154    	; 0x1000 <__addsf3+0x1e>
    109a:	93 95       	inc	r25
    109c:	88 0f       	add	r24, r24
    109e:	08 f0       	brcs	.+2      	; 0x10a2 <__addsf3x+0x9e>
    10a0:	99 27       	eor	r25, r25
    10a2:	ee 0f       	add	r30, r30
    10a4:	97 95       	ror	r25
    10a6:	87 95       	ror	r24
    10a8:	08 95       	ret

000010aa <__divsf3>:
    10aa:	0c d0       	rcall	.+24     	; 0x10c4 <__divsf3x>
    10ac:	ba c0       	rjmp	.+372    	; 0x1222 <__fp_round>
    10ae:	b2 d0       	rcall	.+356    	; 0x1214 <__fp_pscB>
    10b0:	40 f0       	brcs	.+16     	; 0x10c2 <__divsf3+0x18>
    10b2:	a9 d0       	rcall	.+338    	; 0x1206 <__fp_pscA>
    10b4:	30 f0       	brcs	.+12     	; 0x10c2 <__divsf3+0x18>
    10b6:	21 f4       	brne	.+8      	; 0x10c0 <__divsf3+0x16>
    10b8:	5f 3f       	cpi	r21, 0xFF	; 255
    10ba:	19 f0       	breq	.+6      	; 0x10c2 <__divsf3+0x18>
    10bc:	9b c0       	rjmp	.+310    	; 0x11f4 <__fp_inf>
    10be:	51 11       	cpse	r21, r1
    10c0:	e4 c0       	rjmp	.+456    	; 0x128a <__fp_szero>
    10c2:	9e c0       	rjmp	.+316    	; 0x1200 <__fp_nan>

000010c4 <__divsf3x>:
    10c4:	bf d0       	rcall	.+382    	; 0x1244 <__fp_split3>
    10c6:	98 f3       	brcs	.-26     	; 0x10ae <__divsf3+0x4>

000010c8 <__divsf3_pse>:
    10c8:	99 23       	and	r25, r25
    10ca:	c9 f3       	breq	.-14     	; 0x10be <__divsf3+0x14>
    10cc:	55 23       	and	r21, r21
    10ce:	b1 f3       	breq	.-20     	; 0x10bc <__divsf3+0x12>
    10d0:	95 1b       	sub	r25, r21
    10d2:	55 0b       	sbc	r21, r21
    10d4:	bb 27       	eor	r27, r27
    10d6:	aa 27       	eor	r26, r26
    10d8:	62 17       	cp	r22, r18
    10da:	73 07       	cpc	r23, r19
    10dc:	84 07       	cpc	r24, r20
    10de:	38 f0       	brcs	.+14     	; 0x10ee <__divsf3_pse+0x26>
    10e0:	9f 5f       	subi	r25, 0xFF	; 255
    10e2:	5f 4f       	sbci	r21, 0xFF	; 255
    10e4:	22 0f       	add	r18, r18
    10e6:	33 1f       	adc	r19, r19
    10e8:	44 1f       	adc	r20, r20
    10ea:	aa 1f       	adc	r26, r26
    10ec:	a9 f3       	breq	.-22     	; 0x10d8 <__divsf3_pse+0x10>
    10ee:	33 d0       	rcall	.+102    	; 0x1156 <__divsf3_pse+0x8e>
    10f0:	0e 2e       	mov	r0, r30
    10f2:	3a f0       	brmi	.+14     	; 0x1102 <__divsf3_pse+0x3a>
    10f4:	e0 e8       	ldi	r30, 0x80	; 128
    10f6:	30 d0       	rcall	.+96     	; 0x1158 <__divsf3_pse+0x90>
    10f8:	91 50       	subi	r25, 0x01	; 1
    10fa:	50 40       	sbci	r21, 0x00	; 0
    10fc:	e6 95       	lsr	r30
    10fe:	00 1c       	adc	r0, r0
    1100:	ca f7       	brpl	.-14     	; 0x10f4 <__divsf3_pse+0x2c>
    1102:	29 d0       	rcall	.+82     	; 0x1156 <__divsf3_pse+0x8e>
    1104:	fe 2f       	mov	r31, r30
    1106:	27 d0       	rcall	.+78     	; 0x1156 <__divsf3_pse+0x8e>
    1108:	66 0f       	add	r22, r22
    110a:	77 1f       	adc	r23, r23
    110c:	88 1f       	adc	r24, r24
    110e:	bb 1f       	adc	r27, r27
    1110:	26 17       	cp	r18, r22
    1112:	37 07       	cpc	r19, r23
    1114:	48 07       	cpc	r20, r24
    1116:	ab 07       	cpc	r26, r27
    1118:	b0 e8       	ldi	r27, 0x80	; 128
    111a:	09 f0       	breq	.+2      	; 0x111e <__divsf3_pse+0x56>
    111c:	bb 0b       	sbc	r27, r27
    111e:	80 2d       	mov	r24, r0
    1120:	bf 01       	movw	r22, r30
    1122:	ff 27       	eor	r31, r31
    1124:	93 58       	subi	r25, 0x83	; 131
    1126:	5f 4f       	sbci	r21, 0xFF	; 255
    1128:	2a f0       	brmi	.+10     	; 0x1134 <__divsf3_pse+0x6c>
    112a:	9e 3f       	cpi	r25, 0xFE	; 254
    112c:	51 05       	cpc	r21, r1
    112e:	68 f0       	brcs	.+26     	; 0x114a <__divsf3_pse+0x82>
    1130:	61 c0       	rjmp	.+194    	; 0x11f4 <__fp_inf>
    1132:	ab c0       	rjmp	.+342    	; 0x128a <__fp_szero>
    1134:	5f 3f       	cpi	r21, 0xFF	; 255
    1136:	ec f3       	brlt	.-6      	; 0x1132 <__divsf3_pse+0x6a>
    1138:	98 3e       	cpi	r25, 0xE8	; 232
    113a:	dc f3       	brlt	.-10     	; 0x1132 <__divsf3_pse+0x6a>
    113c:	86 95       	lsr	r24
    113e:	77 95       	ror	r23
    1140:	67 95       	ror	r22
    1142:	b7 95       	ror	r27
    1144:	f7 95       	ror	r31
    1146:	9f 5f       	subi	r25, 0xFF	; 255
    1148:	c9 f7       	brne	.-14     	; 0x113c <__divsf3_pse+0x74>
    114a:	88 0f       	add	r24, r24
    114c:	91 1d       	adc	r25, r1
    114e:	96 95       	lsr	r25
    1150:	87 95       	ror	r24
    1152:	97 f9       	bld	r25, 7
    1154:	08 95       	ret
    1156:	e1 e0       	ldi	r30, 0x01	; 1
    1158:	66 0f       	add	r22, r22
    115a:	77 1f       	adc	r23, r23
    115c:	88 1f       	adc	r24, r24
    115e:	bb 1f       	adc	r27, r27
    1160:	62 17       	cp	r22, r18
    1162:	73 07       	cpc	r23, r19
    1164:	84 07       	cpc	r24, r20
    1166:	ba 07       	cpc	r27, r26
    1168:	20 f0       	brcs	.+8      	; 0x1172 <__divsf3_pse+0xaa>
    116a:	62 1b       	sub	r22, r18
    116c:	73 0b       	sbc	r23, r19
    116e:	84 0b       	sbc	r24, r20
    1170:	ba 0b       	sbc	r27, r26
    1172:	ee 1f       	adc	r30, r30
    1174:	88 f7       	brcc	.-30     	; 0x1158 <__divsf3_pse+0x90>
    1176:	e0 95       	com	r30
    1178:	08 95       	ret

0000117a <__floatunsisf>:
    117a:	e8 94       	clt
    117c:	09 c0       	rjmp	.+18     	; 0x1190 <__floatsisf+0x12>

0000117e <__floatsisf>:
    117e:	97 fb       	bst	r25, 7
    1180:	3e f4       	brtc	.+14     	; 0x1190 <__floatsisf+0x12>
    1182:	90 95       	com	r25
    1184:	80 95       	com	r24
    1186:	70 95       	com	r23
    1188:	61 95       	neg	r22
    118a:	7f 4f       	sbci	r23, 0xFF	; 255
    118c:	8f 4f       	sbci	r24, 0xFF	; 255
    118e:	9f 4f       	sbci	r25, 0xFF	; 255
    1190:	99 23       	and	r25, r25
    1192:	a9 f0       	breq	.+42     	; 0x11be <__floatsisf+0x40>
    1194:	f9 2f       	mov	r31, r25
    1196:	96 e9       	ldi	r25, 0x96	; 150
    1198:	bb 27       	eor	r27, r27
    119a:	93 95       	inc	r25
    119c:	f6 95       	lsr	r31
    119e:	87 95       	ror	r24
    11a0:	77 95       	ror	r23
    11a2:	67 95       	ror	r22
    11a4:	b7 95       	ror	r27
    11a6:	f1 11       	cpse	r31, r1
    11a8:	f8 cf       	rjmp	.-16     	; 0x119a <__floatsisf+0x1c>
    11aa:	fa f4       	brpl	.+62     	; 0x11ea <__floatsisf+0x6c>
    11ac:	bb 0f       	add	r27, r27
    11ae:	11 f4       	brne	.+4      	; 0x11b4 <__floatsisf+0x36>
    11b0:	60 ff       	sbrs	r22, 0
    11b2:	1b c0       	rjmp	.+54     	; 0x11ea <__floatsisf+0x6c>
    11b4:	6f 5f       	subi	r22, 0xFF	; 255
    11b6:	7f 4f       	sbci	r23, 0xFF	; 255
    11b8:	8f 4f       	sbci	r24, 0xFF	; 255
    11ba:	9f 4f       	sbci	r25, 0xFF	; 255
    11bc:	16 c0       	rjmp	.+44     	; 0x11ea <__floatsisf+0x6c>
    11be:	88 23       	and	r24, r24
    11c0:	11 f0       	breq	.+4      	; 0x11c6 <__floatsisf+0x48>
    11c2:	96 e9       	ldi	r25, 0x96	; 150
    11c4:	11 c0       	rjmp	.+34     	; 0x11e8 <__floatsisf+0x6a>
    11c6:	77 23       	and	r23, r23
    11c8:	21 f0       	breq	.+8      	; 0x11d2 <__floatsisf+0x54>
    11ca:	9e e8       	ldi	r25, 0x8E	; 142
    11cc:	87 2f       	mov	r24, r23
    11ce:	76 2f       	mov	r23, r22
    11d0:	05 c0       	rjmp	.+10     	; 0x11dc <__floatsisf+0x5e>
    11d2:	66 23       	and	r22, r22
    11d4:	71 f0       	breq	.+28     	; 0x11f2 <__floatsisf+0x74>
    11d6:	96 e8       	ldi	r25, 0x86	; 134
    11d8:	86 2f       	mov	r24, r22
    11da:	70 e0       	ldi	r23, 0x00	; 0
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	2a f0       	brmi	.+10     	; 0x11ea <__floatsisf+0x6c>
    11e0:	9a 95       	dec	r25
    11e2:	66 0f       	add	r22, r22
    11e4:	77 1f       	adc	r23, r23
    11e6:	88 1f       	adc	r24, r24
    11e8:	da f7       	brpl	.-10     	; 0x11e0 <__floatsisf+0x62>
    11ea:	88 0f       	add	r24, r24
    11ec:	96 95       	lsr	r25
    11ee:	87 95       	ror	r24
    11f0:	97 f9       	bld	r25, 7
    11f2:	08 95       	ret

000011f4 <__fp_inf>:
    11f4:	97 f9       	bld	r25, 7
    11f6:	9f 67       	ori	r25, 0x7F	; 127
    11f8:	80 e8       	ldi	r24, 0x80	; 128
    11fa:	70 e0       	ldi	r23, 0x00	; 0
    11fc:	60 e0       	ldi	r22, 0x00	; 0
    11fe:	08 95       	ret

00001200 <__fp_nan>:
    1200:	9f ef       	ldi	r25, 0xFF	; 255
    1202:	80 ec       	ldi	r24, 0xC0	; 192
    1204:	08 95       	ret

00001206 <__fp_pscA>:
    1206:	00 24       	eor	r0, r0
    1208:	0a 94       	dec	r0
    120a:	16 16       	cp	r1, r22
    120c:	17 06       	cpc	r1, r23
    120e:	18 06       	cpc	r1, r24
    1210:	09 06       	cpc	r0, r25
    1212:	08 95       	ret

00001214 <__fp_pscB>:
    1214:	00 24       	eor	r0, r0
    1216:	0a 94       	dec	r0
    1218:	12 16       	cp	r1, r18
    121a:	13 06       	cpc	r1, r19
    121c:	14 06       	cpc	r1, r20
    121e:	05 06       	cpc	r0, r21
    1220:	08 95       	ret

00001222 <__fp_round>:
    1222:	09 2e       	mov	r0, r25
    1224:	03 94       	inc	r0
    1226:	00 0c       	add	r0, r0
    1228:	11 f4       	brne	.+4      	; 0x122e <__fp_round+0xc>
    122a:	88 23       	and	r24, r24
    122c:	52 f0       	brmi	.+20     	; 0x1242 <__fp_round+0x20>
    122e:	bb 0f       	add	r27, r27
    1230:	40 f4       	brcc	.+16     	; 0x1242 <__fp_round+0x20>
    1232:	bf 2b       	or	r27, r31
    1234:	11 f4       	brne	.+4      	; 0x123a <__fp_round+0x18>
    1236:	60 ff       	sbrs	r22, 0
    1238:	04 c0       	rjmp	.+8      	; 0x1242 <__fp_round+0x20>
    123a:	6f 5f       	subi	r22, 0xFF	; 255
    123c:	7f 4f       	sbci	r23, 0xFF	; 255
    123e:	8f 4f       	sbci	r24, 0xFF	; 255
    1240:	9f 4f       	sbci	r25, 0xFF	; 255
    1242:	08 95       	ret

00001244 <__fp_split3>:
    1244:	57 fd       	sbrc	r21, 7
    1246:	90 58       	subi	r25, 0x80	; 128
    1248:	44 0f       	add	r20, r20
    124a:	55 1f       	adc	r21, r21
    124c:	59 f0       	breq	.+22     	; 0x1264 <__fp_splitA+0x10>
    124e:	5f 3f       	cpi	r21, 0xFF	; 255
    1250:	71 f0       	breq	.+28     	; 0x126e <__fp_splitA+0x1a>
    1252:	47 95       	ror	r20

00001254 <__fp_splitA>:
    1254:	88 0f       	add	r24, r24
    1256:	97 fb       	bst	r25, 7
    1258:	99 1f       	adc	r25, r25
    125a:	61 f0       	breq	.+24     	; 0x1274 <__fp_splitA+0x20>
    125c:	9f 3f       	cpi	r25, 0xFF	; 255
    125e:	79 f0       	breq	.+30     	; 0x127e <__fp_splitA+0x2a>
    1260:	87 95       	ror	r24
    1262:	08 95       	ret
    1264:	12 16       	cp	r1, r18
    1266:	13 06       	cpc	r1, r19
    1268:	14 06       	cpc	r1, r20
    126a:	55 1f       	adc	r21, r21
    126c:	f2 cf       	rjmp	.-28     	; 0x1252 <__fp_split3+0xe>
    126e:	46 95       	lsr	r20
    1270:	f1 df       	rcall	.-30     	; 0x1254 <__fp_splitA>
    1272:	08 c0       	rjmp	.+16     	; 0x1284 <__fp_splitA+0x30>
    1274:	16 16       	cp	r1, r22
    1276:	17 06       	cpc	r1, r23
    1278:	18 06       	cpc	r1, r24
    127a:	99 1f       	adc	r25, r25
    127c:	f1 cf       	rjmp	.-30     	; 0x1260 <__fp_splitA+0xc>
    127e:	86 95       	lsr	r24
    1280:	71 05       	cpc	r23, r1
    1282:	61 05       	cpc	r22, r1
    1284:	08 94       	sec
    1286:	08 95       	ret

00001288 <__fp_zero>:
    1288:	e8 94       	clt

0000128a <__fp_szero>:
    128a:	bb 27       	eor	r27, r27
    128c:	66 27       	eor	r22, r22
    128e:	77 27       	eor	r23, r23
    1290:	cb 01       	movw	r24, r22
    1292:	97 f9       	bld	r25, 7
    1294:	08 95       	ret

00001296 <__mulsf3>:
    1296:	0b d0       	rcall	.+22     	; 0x12ae <__mulsf3x>
    1298:	c4 cf       	rjmp	.-120    	; 0x1222 <__fp_round>
    129a:	b5 df       	rcall	.-150    	; 0x1206 <__fp_pscA>
    129c:	28 f0       	brcs	.+10     	; 0x12a8 <__mulsf3+0x12>
    129e:	ba df       	rcall	.-140    	; 0x1214 <__fp_pscB>
    12a0:	18 f0       	brcs	.+6      	; 0x12a8 <__mulsf3+0x12>
    12a2:	95 23       	and	r25, r21
    12a4:	09 f0       	breq	.+2      	; 0x12a8 <__mulsf3+0x12>
    12a6:	a6 cf       	rjmp	.-180    	; 0x11f4 <__fp_inf>
    12a8:	ab cf       	rjmp	.-170    	; 0x1200 <__fp_nan>
    12aa:	11 24       	eor	r1, r1
    12ac:	ee cf       	rjmp	.-36     	; 0x128a <__fp_szero>

000012ae <__mulsf3x>:
    12ae:	ca df       	rcall	.-108    	; 0x1244 <__fp_split3>
    12b0:	a0 f3       	brcs	.-24     	; 0x129a <__mulsf3+0x4>

000012b2 <__mulsf3_pse>:
    12b2:	95 9f       	mul	r25, r21
    12b4:	d1 f3       	breq	.-12     	; 0x12aa <__mulsf3+0x14>
    12b6:	95 0f       	add	r25, r21
    12b8:	50 e0       	ldi	r21, 0x00	; 0
    12ba:	55 1f       	adc	r21, r21
    12bc:	62 9f       	mul	r22, r18
    12be:	f0 01       	movw	r30, r0
    12c0:	72 9f       	mul	r23, r18
    12c2:	bb 27       	eor	r27, r27
    12c4:	f0 0d       	add	r31, r0
    12c6:	b1 1d       	adc	r27, r1
    12c8:	63 9f       	mul	r22, r19
    12ca:	aa 27       	eor	r26, r26
    12cc:	f0 0d       	add	r31, r0
    12ce:	b1 1d       	adc	r27, r1
    12d0:	aa 1f       	adc	r26, r26
    12d2:	64 9f       	mul	r22, r20
    12d4:	66 27       	eor	r22, r22
    12d6:	b0 0d       	add	r27, r0
    12d8:	a1 1d       	adc	r26, r1
    12da:	66 1f       	adc	r22, r22
    12dc:	82 9f       	mul	r24, r18
    12de:	22 27       	eor	r18, r18
    12e0:	b0 0d       	add	r27, r0
    12e2:	a1 1d       	adc	r26, r1
    12e4:	62 1f       	adc	r22, r18
    12e6:	73 9f       	mul	r23, r19
    12e8:	b0 0d       	add	r27, r0
    12ea:	a1 1d       	adc	r26, r1
    12ec:	62 1f       	adc	r22, r18
    12ee:	83 9f       	mul	r24, r19
    12f0:	a0 0d       	add	r26, r0
    12f2:	61 1d       	adc	r22, r1
    12f4:	22 1f       	adc	r18, r18
    12f6:	74 9f       	mul	r23, r20
    12f8:	33 27       	eor	r19, r19
    12fa:	a0 0d       	add	r26, r0
    12fc:	61 1d       	adc	r22, r1
    12fe:	23 1f       	adc	r18, r19
    1300:	84 9f       	mul	r24, r20
    1302:	60 0d       	add	r22, r0
    1304:	21 1d       	adc	r18, r1
    1306:	82 2f       	mov	r24, r18
    1308:	76 2f       	mov	r23, r22
    130a:	6a 2f       	mov	r22, r26
    130c:	11 24       	eor	r1, r1
    130e:	9f 57       	subi	r25, 0x7F	; 127
    1310:	50 40       	sbci	r21, 0x00	; 0
    1312:	8a f0       	brmi	.+34     	; 0x1336 <__mulsf3_pse+0x84>
    1314:	e1 f0       	breq	.+56     	; 0x134e <__mulsf3_pse+0x9c>
    1316:	88 23       	and	r24, r24
    1318:	4a f0       	brmi	.+18     	; 0x132c <__mulsf3_pse+0x7a>
    131a:	ee 0f       	add	r30, r30
    131c:	ff 1f       	adc	r31, r31
    131e:	bb 1f       	adc	r27, r27
    1320:	66 1f       	adc	r22, r22
    1322:	77 1f       	adc	r23, r23
    1324:	88 1f       	adc	r24, r24
    1326:	91 50       	subi	r25, 0x01	; 1
    1328:	50 40       	sbci	r21, 0x00	; 0
    132a:	a9 f7       	brne	.-22     	; 0x1316 <__mulsf3_pse+0x64>
    132c:	9e 3f       	cpi	r25, 0xFE	; 254
    132e:	51 05       	cpc	r21, r1
    1330:	70 f0       	brcs	.+28     	; 0x134e <__mulsf3_pse+0x9c>
    1332:	60 cf       	rjmp	.-320    	; 0x11f4 <__fp_inf>
    1334:	aa cf       	rjmp	.-172    	; 0x128a <__fp_szero>
    1336:	5f 3f       	cpi	r21, 0xFF	; 255
    1338:	ec f3       	brlt	.-6      	; 0x1334 <__mulsf3_pse+0x82>
    133a:	98 3e       	cpi	r25, 0xE8	; 232
    133c:	dc f3       	brlt	.-10     	; 0x1334 <__mulsf3_pse+0x82>
    133e:	86 95       	lsr	r24
    1340:	77 95       	ror	r23
    1342:	67 95       	ror	r22
    1344:	b7 95       	ror	r27
    1346:	f7 95       	ror	r31
    1348:	e7 95       	ror	r30
    134a:	9f 5f       	subi	r25, 0xFF	; 255
    134c:	c1 f7       	brne	.-16     	; 0x133e <__mulsf3_pse+0x8c>
    134e:	fe 2b       	or	r31, r30
    1350:	88 0f       	add	r24, r24
    1352:	91 1d       	adc	r25, r1
    1354:	96 95       	lsr	r25
    1356:	87 95       	ror	r24
    1358:	97 f9       	bld	r25, 7
    135a:	08 95       	ret

0000135c <dtostrf>:
    135c:	ef 92       	push	r14
    135e:	0f 93       	push	r16
    1360:	1f 93       	push	r17
    1362:	cf 93       	push	r28
    1364:	c0 2f       	mov	r28, r16
    1366:	47 ff       	sbrs	r20, 7
    1368:	02 c0       	rjmp	.+4      	; 0x136e <dtostrf+0x12>
    136a:	34 e1       	ldi	r19, 0x14	; 20
    136c:	01 c0       	rjmp	.+2      	; 0x1370 <dtostrf+0x14>
    136e:	34 e0       	ldi	r19, 0x04	; 4
    1370:	e4 2f       	mov	r30, r20
    1372:	ff 27       	eor	r31, r31
    1374:	e7 fd       	sbrc	r30, 7
    1376:	f0 95       	com	r31
    1378:	f7 ff       	sbrs	r31, 7
    137a:	03 c0       	rjmp	.+6      	; 0x1382 <dtostrf+0x26>
    137c:	f1 95       	neg	r31
    137e:	e1 95       	neg	r30
    1380:	f1 09       	sbc	r31, r1
    1382:	e3 2e       	mov	r14, r19
    1384:	02 2f       	mov	r16, r18
    1386:	2e 2f       	mov	r18, r30
    1388:	4c 2f       	mov	r20, r28
    138a:	51 2f       	mov	r21, r17
    138c:	26 d0       	rcall	.+76     	; 0x13da <dtoa_prf>
    138e:	8c 2f       	mov	r24, r28
    1390:	91 2f       	mov	r25, r17
    1392:	cf 91       	pop	r28
    1394:	1f 91       	pop	r17
    1396:	0f 91       	pop	r16
    1398:	ef 90       	pop	r14
    139a:	08 95       	ret

0000139c <itoa>:
    139c:	fb 01       	movw	r30, r22
    139e:	9f 01       	movw	r18, r30
    13a0:	e8 94       	clt
    13a2:	42 30       	cpi	r20, 0x02	; 2
    13a4:	bc f0       	brlt	.+46     	; 0x13d4 <itoa+0x38>
    13a6:	45 32       	cpi	r20, 0x25	; 37
    13a8:	ac f4       	brge	.+42     	; 0x13d4 <itoa+0x38>
    13aa:	4a 30       	cpi	r20, 0x0A	; 10
    13ac:	29 f4       	brne	.+10     	; 0x13b8 <itoa+0x1c>
    13ae:	97 fb       	bst	r25, 7
    13b0:	1e f4       	brtc	.+6      	; 0x13b8 <itoa+0x1c>
    13b2:	90 95       	com	r25
    13b4:	81 95       	neg	r24
    13b6:	9f 4f       	sbci	r25, 0xFF	; 255
    13b8:	64 2f       	mov	r22, r20
    13ba:	77 27       	eor	r23, r23
    13bc:	72 d2       	rcall	.+1252   	; 0x18a2 <__udivmodhi4>
    13be:	80 5d       	subi	r24, 0xD0	; 208
    13c0:	8a 33       	cpi	r24, 0x3A	; 58
    13c2:	0c f0       	brlt	.+2      	; 0x13c6 <itoa+0x2a>
    13c4:	89 5d       	subi	r24, 0xD9	; 217
    13c6:	81 93       	st	Z+, r24
    13c8:	cb 01       	movw	r24, r22
    13ca:	00 97       	sbiw	r24, 0x00	; 0
    13cc:	a9 f7       	brne	.-22     	; 0x13b8 <itoa+0x1c>
    13ce:	16 f4       	brtc	.+4      	; 0x13d4 <itoa+0x38>
    13d0:	5d e2       	ldi	r21, 0x2D	; 45
    13d2:	51 93       	st	Z+, r21
    13d4:	10 82       	st	Z, r1
    13d6:	c9 01       	movw	r24, r18
    13d8:	54 c2       	rjmp	.+1192   	; 0x1882 <strrev>

000013da <dtoa_prf>:
    13da:	6f 92       	push	r6
    13dc:	7f 92       	push	r7
    13de:	9f 92       	push	r9
    13e0:	af 92       	push	r10
    13e2:	bf 92       	push	r11
    13e4:	cf 92       	push	r12
    13e6:	df 92       	push	r13
    13e8:	ef 92       	push	r14
    13ea:	ff 92       	push	r15
    13ec:	0f 93       	push	r16
    13ee:	1f 93       	push	r17
    13f0:	cf 93       	push	r28
    13f2:	df 93       	push	r29
    13f4:	cd b7       	in	r28, 0x3d	; 61
    13f6:	de b7       	in	r29, 0x3e	; 62
    13f8:	29 97       	sbiw	r28, 0x09	; 9
    13fa:	0f b6       	in	r0, 0x3f	; 63
    13fc:	f8 94       	cli
    13fe:	de bf       	out	0x3e, r29	; 62
    1400:	0f be       	out	0x3f, r0	; 63
    1402:	cd bf       	out	0x3d, r28	; 61
    1404:	6a 01       	movw	r12, r20
    1406:	b2 2e       	mov	r11, r18
    1408:	10 2f       	mov	r17, r16
    140a:	0c 33       	cpi	r16, 0x3C	; 60
    140c:	18 f4       	brcc	.+6      	; 0x1414 <dtoa_prf+0x3a>
    140e:	f0 2e       	mov	r15, r16
    1410:	f3 94       	inc	r15
    1412:	02 c0       	rjmp	.+4      	; 0x1418 <dtoa_prf+0x3e>
    1414:	5c e3       	ldi	r21, 0x3C	; 60
    1416:	f5 2e       	mov	r15, r21
    1418:	0f 2d       	mov	r16, r15
    141a:	27 e0       	ldi	r18, 0x07	; 7
    141c:	ae 01       	movw	r20, r28
    141e:	4f 5f       	subi	r20, 0xFF	; 255
    1420:	5f 4f       	sbci	r21, 0xFF	; 255
    1422:	57 d1       	rcall	.+686    	; 0x16d2 <__ftoa_engine>
    1424:	79 81       	ldd	r23, Y+1	; 0x01
    1426:	27 2f       	mov	r18, r23
    1428:	29 70       	andi	r18, 0x09	; 9
    142a:	21 30       	cpi	r18, 0x01	; 1
    142c:	31 f0       	breq	.+12     	; 0x143a <dtoa_prf+0x60>
    142e:	e1 fc       	sbrc	r14, 1
    1430:	06 c0       	rjmp	.+12     	; 0x143e <dtoa_prf+0x64>
    1432:	e0 fe       	sbrs	r14, 0
    1434:	06 c0       	rjmp	.+12     	; 0x1442 <dtoa_prf+0x68>
    1436:	60 e2       	ldi	r22, 0x20	; 32
    1438:	05 c0       	rjmp	.+10     	; 0x1444 <dtoa_prf+0x6a>
    143a:	6d e2       	ldi	r22, 0x2D	; 45
    143c:	03 c0       	rjmp	.+6      	; 0x1444 <dtoa_prf+0x6a>
    143e:	6b e2       	ldi	r22, 0x2B	; 43
    1440:	01 c0       	rjmp	.+2      	; 0x1444 <dtoa_prf+0x6a>
    1442:	60 e0       	ldi	r22, 0x00	; 0
    1444:	73 ff       	sbrs	r23, 3
    1446:	3d c0       	rjmp	.+122    	; 0x14c2 <dtoa_prf+0xe8>
    1448:	66 23       	and	r22, r22
    144a:	11 f0       	breq	.+4      	; 0x1450 <dtoa_prf+0x76>
    144c:	84 e0       	ldi	r24, 0x04	; 4
    144e:	01 c0       	rjmp	.+2      	; 0x1452 <dtoa_prf+0x78>
    1450:	83 e0       	ldi	r24, 0x03	; 3
    1452:	8b 15       	cp	r24, r11
    1454:	10 f4       	brcc	.+4      	; 0x145a <dtoa_prf+0x80>
    1456:	b8 1a       	sub	r11, r24
    1458:	01 c0       	rjmp	.+2      	; 0x145c <dtoa_prf+0x82>
    145a:	b1 2c       	mov	r11, r1
    145c:	e4 fc       	sbrc	r14, 4
    145e:	0b c0       	rjmp	.+22     	; 0x1476 <dtoa_prf+0x9c>
    1460:	8b 2d       	mov	r24, r11
    1462:	f6 01       	movw	r30, r12
    1464:	90 e2       	ldi	r25, 0x20	; 32
    1466:	02 c0       	rjmp	.+4      	; 0x146c <dtoa_prf+0x92>
    1468:	91 93       	st	Z+, r25
    146a:	81 50       	subi	r24, 0x01	; 1
    146c:	81 11       	cpse	r24, r1
    146e:	fc cf       	rjmp	.-8      	; 0x1468 <dtoa_prf+0x8e>
    1470:	cb 0c       	add	r12, r11
    1472:	d1 1c       	adc	r13, r1
    1474:	b1 2c       	mov	r11, r1
    1476:	66 23       	and	r22, r22
    1478:	19 f0       	breq	.+6      	; 0x1480 <dtoa_prf+0xa6>
    147a:	d6 01       	movw	r26, r12
    147c:	6d 93       	st	X+, r22
    147e:	6d 01       	movw	r12, r26
    1480:	e2 fe       	sbrs	r14, 2
    1482:	0a c0       	rjmp	.+20     	; 0x1498 <dtoa_prf+0xbe>
    1484:	8e e4       	ldi	r24, 0x4E	; 78
    1486:	f6 01       	movw	r30, r12
    1488:	80 83       	st	Z, r24
    148a:	91 e4       	ldi	r25, 0x41	; 65
    148c:	91 83       	std	Z+1, r25	; 0x01
    148e:	82 83       	std	Z+2, r24	; 0x02
    1490:	f3 e0       	ldi	r31, 0x03	; 3
    1492:	cf 0e       	add	r12, r31
    1494:	d1 1c       	adc	r13, r1
    1496:	0c c0       	rjmp	.+24     	; 0x14b0 <dtoa_prf+0xd6>
    1498:	8e e6       	ldi	r24, 0x6E	; 110
    149a:	d6 01       	movw	r26, r12
    149c:	8c 93       	st	X, r24
    149e:	91 e6       	ldi	r25, 0x61	; 97
    14a0:	11 96       	adiw	r26, 0x01	; 1
    14a2:	9c 93       	st	X, r25
    14a4:	11 97       	sbiw	r26, 0x01	; 1
    14a6:	12 96       	adiw	r26, 0x02	; 2
    14a8:	8c 93       	st	X, r24
    14aa:	b3 e0       	ldi	r27, 0x03	; 3
    14ac:	cb 0e       	add	r12, r27
    14ae:	d1 1c       	adc	r13, r1
    14b0:	8b 2d       	mov	r24, r11
    14b2:	f6 01       	movw	r30, r12
    14b4:	90 e2       	ldi	r25, 0x20	; 32
    14b6:	02 c0       	rjmp	.+4      	; 0x14bc <dtoa_prf+0xe2>
    14b8:	91 93       	st	Z+, r25
    14ba:	81 50       	subi	r24, 0x01	; 1
    14bc:	81 11       	cpse	r24, r1
    14be:	fc cf       	rjmp	.-8      	; 0x14b8 <dtoa_prf+0xde>
    14c0:	40 c0       	rjmp	.+128    	; 0x1542 <dtoa_prf+0x168>
    14c2:	72 ff       	sbrs	r23, 2
    14c4:	45 c0       	rjmp	.+138    	; 0x1550 <dtoa_prf+0x176>
    14c6:	66 23       	and	r22, r22
    14c8:	11 f0       	breq	.+4      	; 0x14ce <dtoa_prf+0xf4>
    14ca:	84 e0       	ldi	r24, 0x04	; 4
    14cc:	01 c0       	rjmp	.+2      	; 0x14d0 <dtoa_prf+0xf6>
    14ce:	83 e0       	ldi	r24, 0x03	; 3
    14d0:	8b 15       	cp	r24, r11
    14d2:	10 f4       	brcc	.+4      	; 0x14d8 <dtoa_prf+0xfe>
    14d4:	b8 1a       	sub	r11, r24
    14d6:	01 c0       	rjmp	.+2      	; 0x14da <dtoa_prf+0x100>
    14d8:	b1 2c       	mov	r11, r1
    14da:	e4 fc       	sbrc	r14, 4
    14dc:	0b c0       	rjmp	.+22     	; 0x14f4 <dtoa_prf+0x11a>
    14de:	8b 2d       	mov	r24, r11
    14e0:	f6 01       	movw	r30, r12
    14e2:	90 e2       	ldi	r25, 0x20	; 32
    14e4:	02 c0       	rjmp	.+4      	; 0x14ea <dtoa_prf+0x110>
    14e6:	91 93       	st	Z+, r25
    14e8:	81 50       	subi	r24, 0x01	; 1
    14ea:	81 11       	cpse	r24, r1
    14ec:	fc cf       	rjmp	.-8      	; 0x14e6 <dtoa_prf+0x10c>
    14ee:	cb 0c       	add	r12, r11
    14f0:	d1 1c       	adc	r13, r1
    14f2:	b1 2c       	mov	r11, r1
    14f4:	66 23       	and	r22, r22
    14f6:	19 f0       	breq	.+6      	; 0x14fe <dtoa_prf+0x124>
    14f8:	f6 01       	movw	r30, r12
    14fa:	61 93       	st	Z+, r22
    14fc:	6f 01       	movw	r12, r30
    14fe:	e2 fe       	sbrs	r14, 2
    1500:	0e c0       	rjmp	.+28     	; 0x151e <dtoa_prf+0x144>
    1502:	89 e4       	ldi	r24, 0x49	; 73
    1504:	d6 01       	movw	r26, r12
    1506:	8c 93       	st	X, r24
    1508:	8e e4       	ldi	r24, 0x4E	; 78
    150a:	11 96       	adiw	r26, 0x01	; 1
    150c:	8c 93       	st	X, r24
    150e:	11 97       	sbiw	r26, 0x01	; 1
    1510:	86 e4       	ldi	r24, 0x46	; 70
    1512:	12 96       	adiw	r26, 0x02	; 2
    1514:	8c 93       	st	X, r24
    1516:	b3 e0       	ldi	r27, 0x03	; 3
    1518:	cb 0e       	add	r12, r27
    151a:	d1 1c       	adc	r13, r1
    151c:	0a c0       	rjmp	.+20     	; 0x1532 <dtoa_prf+0x158>
    151e:	89 e6       	ldi	r24, 0x69	; 105
    1520:	f6 01       	movw	r30, r12
    1522:	80 83       	st	Z, r24
    1524:	8e e6       	ldi	r24, 0x6E	; 110
    1526:	81 83       	std	Z+1, r24	; 0x01
    1528:	86 e6       	ldi	r24, 0x66	; 102
    152a:	82 83       	std	Z+2, r24	; 0x02
    152c:	f3 e0       	ldi	r31, 0x03	; 3
    152e:	cf 0e       	add	r12, r31
    1530:	d1 1c       	adc	r13, r1
    1532:	8b 2d       	mov	r24, r11
    1534:	f6 01       	movw	r30, r12
    1536:	90 e2       	ldi	r25, 0x20	; 32
    1538:	02 c0       	rjmp	.+4      	; 0x153e <dtoa_prf+0x164>
    153a:	91 93       	st	Z+, r25
    153c:	81 50       	subi	r24, 0x01	; 1
    153e:	81 11       	cpse	r24, r1
    1540:	fc cf       	rjmp	.-8      	; 0x153a <dtoa_prf+0x160>
    1542:	f6 01       	movw	r30, r12
    1544:	eb 0d       	add	r30, r11
    1546:	f1 1d       	adc	r31, r1
    1548:	10 82       	st	Z, r1
    154a:	2e ef       	ldi	r18, 0xFE	; 254
    154c:	3f ef       	ldi	r19, 0xFF	; 255
    154e:	ac c0       	rjmp	.+344    	; 0x16a8 <dtoa_prf+0x2ce>
    1550:	a1 e0       	ldi	r26, 0x01	; 1
    1552:	61 11       	cpse	r22, r1
    1554:	01 c0       	rjmp	.+2      	; 0x1558 <dtoa_prf+0x17e>
    1556:	a0 e0       	ldi	r26, 0x00	; 0
    1558:	4a 2f       	mov	r20, r26
    155a:	50 e0       	ldi	r21, 0x00	; 0
    155c:	18 16       	cp	r1, r24
    155e:	19 06       	cpc	r1, r25
    1560:	24 f4       	brge	.+8      	; 0x156a <dtoa_prf+0x190>
    1562:	9c 01       	movw	r18, r24
    1564:	2f 5f       	subi	r18, 0xFF	; 255
    1566:	3f 4f       	sbci	r19, 0xFF	; 255
    1568:	02 c0       	rjmp	.+4      	; 0x156e <dtoa_prf+0x194>
    156a:	21 e0       	ldi	r18, 0x01	; 1
    156c:	30 e0       	ldi	r19, 0x00	; 0
    156e:	24 0f       	add	r18, r20
    1570:	35 1f       	adc	r19, r21
    1572:	11 23       	and	r17, r17
    1574:	29 f0       	breq	.+10     	; 0x1580 <dtoa_prf+0x1a6>
    1576:	41 2f       	mov	r20, r17
    1578:	50 e0       	ldi	r21, 0x00	; 0
    157a:	4f 5f       	subi	r20, 0xFF	; 255
    157c:	5f 4f       	sbci	r21, 0xFF	; 255
    157e:	02 c0       	rjmp	.+4      	; 0x1584 <dtoa_prf+0x1aa>
    1580:	40 e0       	ldi	r20, 0x00	; 0
    1582:	50 e0       	ldi	r21, 0x00	; 0
    1584:	42 0f       	add	r20, r18
    1586:	53 1f       	adc	r21, r19
    1588:	2b 2d       	mov	r18, r11
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	42 17       	cp	r20, r18
    158e:	53 07       	cpc	r21, r19
    1590:	14 f4       	brge	.+4      	; 0x1596 <dtoa_prf+0x1bc>
    1592:	b4 1a       	sub	r11, r20
    1594:	01 c0       	rjmp	.+2      	; 0x1598 <dtoa_prf+0x1be>
    1596:	b1 2c       	mov	r11, r1
    1598:	3e 2d       	mov	r19, r14
    159a:	30 71       	andi	r19, 0x10	; 16
    159c:	e4 fc       	sbrc	r14, 4
    159e:	0d c0       	rjmp	.+26     	; 0x15ba <dtoa_prf+0x1e0>
    15a0:	e3 fc       	sbrc	r14, 3
    15a2:	0b c0       	rjmp	.+22     	; 0x15ba <dtoa_prf+0x1e0>
    15a4:	2b 2d       	mov	r18, r11
    15a6:	f6 01       	movw	r30, r12
    15a8:	40 e2       	ldi	r20, 0x20	; 32
    15aa:	02 c0       	rjmp	.+4      	; 0x15b0 <dtoa_prf+0x1d6>
    15ac:	41 93       	st	Z+, r20
    15ae:	21 50       	subi	r18, 0x01	; 1
    15b0:	21 11       	cpse	r18, r1
    15b2:	fc cf       	rjmp	.-8      	; 0x15ac <dtoa_prf+0x1d2>
    15b4:	cb 0c       	add	r12, r11
    15b6:	d1 1c       	adc	r13, r1
    15b8:	b1 2c       	mov	r11, r1
    15ba:	aa 23       	and	r26, r26
    15bc:	19 f0       	breq	.+6      	; 0x15c4 <dtoa_prf+0x1ea>
    15be:	d6 01       	movw	r26, r12
    15c0:	6d 93       	st	X+, r22
    15c2:	6d 01       	movw	r12, r26
    15c4:	31 11       	cpse	r19, r1
    15c6:	0b c0       	rjmp	.+22     	; 0x15de <dtoa_prf+0x204>
    15c8:	2b 2d       	mov	r18, r11
    15ca:	f6 01       	movw	r30, r12
    15cc:	30 e3       	ldi	r19, 0x30	; 48
    15ce:	02 c0       	rjmp	.+4      	; 0x15d4 <dtoa_prf+0x1fa>
    15d0:	31 93       	st	Z+, r19
    15d2:	21 50       	subi	r18, 0x01	; 1
    15d4:	21 11       	cpse	r18, r1
    15d6:	fc cf       	rjmp	.-8      	; 0x15d0 <dtoa_prf+0x1f6>
    15d8:	cb 0c       	add	r12, r11
    15da:	d1 1c       	adc	r13, r1
    15dc:	b1 2c       	mov	r11, r1
    15de:	f8 0e       	add	r15, r24
    15e0:	0a 81       	ldd	r16, Y+2	; 0x02
    15e2:	40 e1       	ldi	r20, 0x10	; 16
    15e4:	a4 2e       	mov	r10, r20
    15e6:	a7 22       	and	r10, r23
    15e8:	74 ff       	sbrs	r23, 4
    15ea:	03 c0       	rjmp	.+6      	; 0x15f2 <dtoa_prf+0x218>
    15ec:	01 33       	cpi	r16, 0x31	; 49
    15ee:	09 f4       	brne	.+2      	; 0x15f2 <dtoa_prf+0x218>
    15f0:	fa 94       	dec	r15
    15f2:	1f 14       	cp	r1, r15
    15f4:	2c f4       	brge	.+10     	; 0x1600 <dtoa_prf+0x226>
    15f6:	2f 2d       	mov	r18, r15
    15f8:	29 30       	cpi	r18, 0x09	; 9
    15fa:	18 f0       	brcs	.+6      	; 0x1602 <dtoa_prf+0x228>
    15fc:	28 e0       	ldi	r18, 0x08	; 8
    15fe:	01 c0       	rjmp	.+2      	; 0x1602 <dtoa_prf+0x228>
    1600:	21 e0       	ldi	r18, 0x01	; 1
    1602:	ac 01       	movw	r20, r24
    1604:	97 ff       	sbrs	r25, 7
    1606:	02 c0       	rjmp	.+4      	; 0x160c <dtoa_prf+0x232>
    1608:	40 e0       	ldi	r20, 0x00	; 0
    160a:	50 e0       	ldi	r21, 0x00	; 0
    160c:	60 e0       	ldi	r22, 0x00	; 0
    160e:	70 e0       	ldi	r23, 0x00	; 0
    1610:	3e e2       	ldi	r19, 0x2E	; 46
    1612:	93 2e       	mov	r9, r19
    1614:	fc 01       	movw	r30, r24
    1616:	e2 1b       	sub	r30, r18
    1618:	f1 09       	sbc	r31, r1
    161a:	9f 01       	movw	r18, r30
    161c:	dc 01       	movw	r26, r24
    161e:	a4 1b       	sub	r26, r20
    1620:	b5 0b       	sbc	r27, r21
    1622:	fe 01       	movw	r30, r28
    1624:	31 96       	adiw	r30, 0x01	; 1
    1626:	ea 0f       	add	r30, r26
    1628:	fb 1f       	adc	r31, r27
    162a:	a1 2f       	mov	r26, r17
    162c:	b0 e0       	ldi	r27, 0x00	; 0
    162e:	66 24       	eor	r6, r6
    1630:	77 24       	eor	r7, r7
    1632:	6a 1a       	sub	r6, r26
    1634:	7b 0a       	sbc	r7, r27
    1636:	4f 3f       	cpi	r20, 0xFF	; 255
    1638:	1f ef       	ldi	r17, 0xFF	; 255
    163a:	51 07       	cpc	r21, r17
    163c:	19 f4       	brne	.+6      	; 0x1644 <dtoa_prf+0x26a>
    163e:	d6 01       	movw	r26, r12
    1640:	9d 92       	st	X+, r9
    1642:	6d 01       	movw	r12, r26
    1644:	84 17       	cp	r24, r20
    1646:	95 07       	cpc	r25, r21
    1648:	54 f0       	brlt	.+20     	; 0x165e <dtoa_prf+0x284>
    164a:	24 17       	cp	r18, r20
    164c:	35 07       	cpc	r19, r21
    164e:	3c f4       	brge	.+14     	; 0x165e <dtoa_prf+0x284>
    1650:	7f 01       	movw	r14, r30
    1652:	e6 0e       	add	r14, r22
    1654:	f7 1e       	adc	r15, r23
    1656:	d7 01       	movw	r26, r14
    1658:	11 96       	adiw	r26, 0x01	; 1
    165a:	1c 91       	ld	r17, X
    165c:	01 c0       	rjmp	.+2      	; 0x1660 <dtoa_prf+0x286>
    165e:	10 e3       	ldi	r17, 0x30	; 48
    1660:	41 50       	subi	r20, 0x01	; 1
    1662:	51 09       	sbc	r21, r1
    1664:	6f 5f       	subi	r22, 0xFF	; 255
    1666:	7f 4f       	sbci	r23, 0xFF	; 255
    1668:	46 15       	cp	r20, r6
    166a:	57 05       	cpc	r21, r7
    166c:	24 f0       	brlt	.+8      	; 0x1676 <dtoa_prf+0x29c>
    166e:	d6 01       	movw	r26, r12
    1670:	1d 93       	st	X+, r17
    1672:	6d 01       	movw	r12, r26
    1674:	e0 cf       	rjmp	.-64     	; 0x1636 <dtoa_prf+0x25c>
    1676:	48 17       	cp	r20, r24
    1678:	59 07       	cpc	r21, r25
    167a:	39 f4       	brne	.+14     	; 0x168a <dtoa_prf+0x2b0>
    167c:	06 33       	cpi	r16, 0x36	; 54
    167e:	20 f4       	brcc	.+8      	; 0x1688 <dtoa_prf+0x2ae>
    1680:	05 33       	cpi	r16, 0x35	; 53
    1682:	19 f4       	brne	.+6      	; 0x168a <dtoa_prf+0x2b0>
    1684:	a1 10       	cpse	r10, r1
    1686:	01 c0       	rjmp	.+2      	; 0x168a <dtoa_prf+0x2b0>
    1688:	11 e3       	ldi	r17, 0x31	; 49
    168a:	f6 01       	movw	r30, r12
    168c:	11 93       	st	Z+, r17
    168e:	8b 2d       	mov	r24, r11
    1690:	df 01       	movw	r26, r30
    1692:	90 e2       	ldi	r25, 0x20	; 32
    1694:	02 c0       	rjmp	.+4      	; 0x169a <dtoa_prf+0x2c0>
    1696:	9d 93       	st	X+, r25
    1698:	81 50       	subi	r24, 0x01	; 1
    169a:	81 11       	cpse	r24, r1
    169c:	fc cf       	rjmp	.-8      	; 0x1696 <dtoa_prf+0x2bc>
    169e:	eb 0d       	add	r30, r11
    16a0:	f1 1d       	adc	r31, r1
    16a2:	10 82       	st	Z, r1
    16a4:	20 e0       	ldi	r18, 0x00	; 0
    16a6:	30 e0       	ldi	r19, 0x00	; 0
    16a8:	c9 01       	movw	r24, r18
    16aa:	29 96       	adiw	r28, 0x09	; 9
    16ac:	0f b6       	in	r0, 0x3f	; 63
    16ae:	f8 94       	cli
    16b0:	de bf       	out	0x3e, r29	; 62
    16b2:	0f be       	out	0x3f, r0	; 63
    16b4:	cd bf       	out	0x3d, r28	; 61
    16b6:	df 91       	pop	r29
    16b8:	cf 91       	pop	r28
    16ba:	1f 91       	pop	r17
    16bc:	0f 91       	pop	r16
    16be:	ff 90       	pop	r15
    16c0:	ef 90       	pop	r14
    16c2:	df 90       	pop	r13
    16c4:	cf 90       	pop	r12
    16c6:	bf 90       	pop	r11
    16c8:	af 90       	pop	r10
    16ca:	9f 90       	pop	r9
    16cc:	7f 90       	pop	r7
    16ce:	6f 90       	pop	r6
    16d0:	08 95       	ret

000016d2 <__ftoa_engine>:
    16d2:	28 30       	cpi	r18, 0x08	; 8
    16d4:	08 f0       	brcs	.+2      	; 0x16d8 <__ftoa_engine+0x6>
    16d6:	27 e0       	ldi	r18, 0x07	; 7
    16d8:	33 27       	eor	r19, r19
    16da:	da 01       	movw	r26, r20
    16dc:	99 0f       	add	r25, r25
    16de:	31 1d       	adc	r19, r1
    16e0:	87 fd       	sbrc	r24, 7
    16e2:	91 60       	ori	r25, 0x01	; 1
    16e4:	00 96       	adiw	r24, 0x00	; 0
    16e6:	61 05       	cpc	r22, r1
    16e8:	71 05       	cpc	r23, r1
    16ea:	39 f4       	brne	.+14     	; 0x16fa <__ftoa_engine+0x28>
    16ec:	32 60       	ori	r19, 0x02	; 2
    16ee:	2e 5f       	subi	r18, 0xFE	; 254
    16f0:	3d 93       	st	X+, r19
    16f2:	30 e3       	ldi	r19, 0x30	; 48
    16f4:	2a 95       	dec	r18
    16f6:	e1 f7       	brne	.-8      	; 0x16f0 <__ftoa_engine+0x1e>
    16f8:	08 95       	ret
    16fa:	9f 3f       	cpi	r25, 0xFF	; 255
    16fc:	30 f0       	brcs	.+12     	; 0x170a <__ftoa_engine+0x38>
    16fe:	80 38       	cpi	r24, 0x80	; 128
    1700:	71 05       	cpc	r23, r1
    1702:	61 05       	cpc	r22, r1
    1704:	09 f0       	breq	.+2      	; 0x1708 <__ftoa_engine+0x36>
    1706:	3c 5f       	subi	r19, 0xFC	; 252
    1708:	3c 5f       	subi	r19, 0xFC	; 252
    170a:	3d 93       	st	X+, r19
    170c:	91 30       	cpi	r25, 0x01	; 1
    170e:	08 f0       	brcs	.+2      	; 0x1712 <__ftoa_engine+0x40>
    1710:	80 68       	ori	r24, 0x80	; 128
    1712:	91 1d       	adc	r25, r1
    1714:	df 93       	push	r29
    1716:	cf 93       	push	r28
    1718:	1f 93       	push	r17
    171a:	0f 93       	push	r16
    171c:	ff 92       	push	r15
    171e:	ef 92       	push	r14
    1720:	19 2f       	mov	r17, r25
    1722:	98 7f       	andi	r25, 0xF8	; 248
    1724:	96 95       	lsr	r25
    1726:	e9 2f       	mov	r30, r25
    1728:	96 95       	lsr	r25
    172a:	96 95       	lsr	r25
    172c:	e9 0f       	add	r30, r25
    172e:	ff 27       	eor	r31, r31
    1730:	e0 58       	subi	r30, 0x80	; 128
    1732:	ff 4f       	sbci	r31, 0xFF	; 255
    1734:	99 27       	eor	r25, r25
    1736:	33 27       	eor	r19, r19
    1738:	ee 24       	eor	r14, r14
    173a:	ff 24       	eor	r15, r15
    173c:	a7 01       	movw	r20, r14
    173e:	e7 01       	movw	r28, r14
    1740:	05 90       	lpm	r0, Z+
    1742:	08 94       	sec
    1744:	07 94       	ror	r0
    1746:	28 f4       	brcc	.+10     	; 0x1752 <__ftoa_engine+0x80>
    1748:	36 0f       	add	r19, r22
    174a:	e7 1e       	adc	r14, r23
    174c:	f8 1e       	adc	r15, r24
    174e:	49 1f       	adc	r20, r25
    1750:	51 1d       	adc	r21, r1
    1752:	66 0f       	add	r22, r22
    1754:	77 1f       	adc	r23, r23
    1756:	88 1f       	adc	r24, r24
    1758:	99 1f       	adc	r25, r25
    175a:	06 94       	lsr	r0
    175c:	a1 f7       	brne	.-24     	; 0x1746 <__ftoa_engine+0x74>
    175e:	05 90       	lpm	r0, Z+
    1760:	07 94       	ror	r0
    1762:	28 f4       	brcc	.+10     	; 0x176e <__ftoa_engine+0x9c>
    1764:	e7 0e       	add	r14, r23
    1766:	f8 1e       	adc	r15, r24
    1768:	49 1f       	adc	r20, r25
    176a:	56 1f       	adc	r21, r22
    176c:	c1 1d       	adc	r28, r1
    176e:	77 0f       	add	r23, r23
    1770:	88 1f       	adc	r24, r24
    1772:	99 1f       	adc	r25, r25
    1774:	66 1f       	adc	r22, r22
    1776:	06 94       	lsr	r0
    1778:	a1 f7       	brne	.-24     	; 0x1762 <__ftoa_engine+0x90>
    177a:	05 90       	lpm	r0, Z+
    177c:	07 94       	ror	r0
    177e:	28 f4       	brcc	.+10     	; 0x178a <__ftoa_engine+0xb8>
    1780:	f8 0e       	add	r15, r24
    1782:	49 1f       	adc	r20, r25
    1784:	56 1f       	adc	r21, r22
    1786:	c7 1f       	adc	r28, r23
    1788:	d1 1d       	adc	r29, r1
    178a:	88 0f       	add	r24, r24
    178c:	99 1f       	adc	r25, r25
    178e:	66 1f       	adc	r22, r22
    1790:	77 1f       	adc	r23, r23
    1792:	06 94       	lsr	r0
    1794:	a1 f7       	brne	.-24     	; 0x177e <__ftoa_engine+0xac>
    1796:	05 90       	lpm	r0, Z+
    1798:	07 94       	ror	r0
    179a:	20 f4       	brcc	.+8      	; 0x17a4 <__ftoa_engine+0xd2>
    179c:	49 0f       	add	r20, r25
    179e:	56 1f       	adc	r21, r22
    17a0:	c7 1f       	adc	r28, r23
    17a2:	d8 1f       	adc	r29, r24
    17a4:	99 0f       	add	r25, r25
    17a6:	66 1f       	adc	r22, r22
    17a8:	77 1f       	adc	r23, r23
    17aa:	88 1f       	adc	r24, r24
    17ac:	06 94       	lsr	r0
    17ae:	a9 f7       	brne	.-22     	; 0x179a <__ftoa_engine+0xc8>
    17b0:	84 91       	lpm	r24, Z
    17b2:	10 95       	com	r17
    17b4:	17 70       	andi	r17, 0x07	; 7
    17b6:	41 f0       	breq	.+16     	; 0x17c8 <__ftoa_engine+0xf6>
    17b8:	d6 95       	lsr	r29
    17ba:	c7 95       	ror	r28
    17bc:	57 95       	ror	r21
    17be:	47 95       	ror	r20
    17c0:	f7 94       	ror	r15
    17c2:	e7 94       	ror	r14
    17c4:	1a 95       	dec	r17
    17c6:	c1 f7       	brne	.-16     	; 0x17b8 <__ftoa_engine+0xe6>
    17c8:	e6 e2       	ldi	r30, 0x26	; 38
    17ca:	f0 e0       	ldi	r31, 0x00	; 0
    17cc:	68 94       	set
    17ce:	15 90       	lpm	r1, Z+
    17d0:	15 91       	lpm	r17, Z+
    17d2:	35 91       	lpm	r19, Z+
    17d4:	65 91       	lpm	r22, Z+
    17d6:	95 91       	lpm	r25, Z+
    17d8:	05 90       	lpm	r0, Z+
    17da:	7f e2       	ldi	r23, 0x2F	; 47
    17dc:	73 95       	inc	r23
    17de:	e1 18       	sub	r14, r1
    17e0:	f1 0a       	sbc	r15, r17
    17e2:	43 0b       	sbc	r20, r19
    17e4:	56 0b       	sbc	r21, r22
    17e6:	c9 0b       	sbc	r28, r25
    17e8:	d0 09       	sbc	r29, r0
    17ea:	c0 f7       	brcc	.-16     	; 0x17dc <__ftoa_engine+0x10a>
    17ec:	e1 0c       	add	r14, r1
    17ee:	f1 1e       	adc	r15, r17
    17f0:	43 1f       	adc	r20, r19
    17f2:	56 1f       	adc	r21, r22
    17f4:	c9 1f       	adc	r28, r25
    17f6:	d0 1d       	adc	r29, r0
    17f8:	7e f4       	brtc	.+30     	; 0x1818 <__ftoa_engine+0x146>
    17fa:	70 33       	cpi	r23, 0x30	; 48
    17fc:	11 f4       	brne	.+4      	; 0x1802 <__ftoa_engine+0x130>
    17fe:	8a 95       	dec	r24
    1800:	e6 cf       	rjmp	.-52     	; 0x17ce <__ftoa_engine+0xfc>
    1802:	e8 94       	clt
    1804:	01 50       	subi	r16, 0x01	; 1
    1806:	30 f0       	brcs	.+12     	; 0x1814 <__ftoa_engine+0x142>
    1808:	08 0f       	add	r16, r24
    180a:	0a f4       	brpl	.+2      	; 0x180e <__ftoa_engine+0x13c>
    180c:	00 27       	eor	r16, r16
    180e:	02 17       	cp	r16, r18
    1810:	08 f4       	brcc	.+2      	; 0x1814 <__ftoa_engine+0x142>
    1812:	20 2f       	mov	r18, r16
    1814:	23 95       	inc	r18
    1816:	02 2f       	mov	r16, r18
    1818:	7a 33       	cpi	r23, 0x3A	; 58
    181a:	28 f0       	brcs	.+10     	; 0x1826 <__ftoa_engine+0x154>
    181c:	79 e3       	ldi	r23, 0x39	; 57
    181e:	7d 93       	st	X+, r23
    1820:	2a 95       	dec	r18
    1822:	e9 f7       	brne	.-6      	; 0x181e <__ftoa_engine+0x14c>
    1824:	10 c0       	rjmp	.+32     	; 0x1846 <__ftoa_engine+0x174>
    1826:	7d 93       	st	X+, r23
    1828:	2a 95       	dec	r18
    182a:	89 f6       	brne	.-94     	; 0x17ce <__ftoa_engine+0xfc>
    182c:	06 94       	lsr	r0
    182e:	97 95       	ror	r25
    1830:	67 95       	ror	r22
    1832:	37 95       	ror	r19
    1834:	17 95       	ror	r17
    1836:	17 94       	ror	r1
    1838:	e1 18       	sub	r14, r1
    183a:	f1 0a       	sbc	r15, r17
    183c:	43 0b       	sbc	r20, r19
    183e:	56 0b       	sbc	r21, r22
    1840:	c9 0b       	sbc	r28, r25
    1842:	d0 09       	sbc	r29, r0
    1844:	98 f0       	brcs	.+38     	; 0x186c <__ftoa_engine+0x19a>
    1846:	23 95       	inc	r18
    1848:	7e 91       	ld	r23, -X
    184a:	73 95       	inc	r23
    184c:	7a 33       	cpi	r23, 0x3A	; 58
    184e:	08 f0       	brcs	.+2      	; 0x1852 <__ftoa_engine+0x180>
    1850:	70 e3       	ldi	r23, 0x30	; 48
    1852:	7c 93       	st	X, r23
    1854:	20 13       	cpse	r18, r16
    1856:	b8 f7       	brcc	.-18     	; 0x1846 <__ftoa_engine+0x174>
    1858:	7e 91       	ld	r23, -X
    185a:	70 61       	ori	r23, 0x10	; 16
    185c:	7d 93       	st	X+, r23
    185e:	30 f0       	brcs	.+12     	; 0x186c <__ftoa_engine+0x19a>
    1860:	83 95       	inc	r24
    1862:	71 e3       	ldi	r23, 0x31	; 49
    1864:	7d 93       	st	X+, r23
    1866:	70 e3       	ldi	r23, 0x30	; 48
    1868:	2a 95       	dec	r18
    186a:	e1 f7       	brne	.-8      	; 0x1864 <__ftoa_engine+0x192>
    186c:	11 24       	eor	r1, r1
    186e:	ef 90       	pop	r14
    1870:	ff 90       	pop	r15
    1872:	0f 91       	pop	r16
    1874:	1f 91       	pop	r17
    1876:	cf 91       	pop	r28
    1878:	df 91       	pop	r29
    187a:	99 27       	eor	r25, r25
    187c:	87 fd       	sbrc	r24, 7
    187e:	90 95       	com	r25
    1880:	08 95       	ret

00001882 <strrev>:
    1882:	dc 01       	movw	r26, r24
    1884:	fc 01       	movw	r30, r24
    1886:	67 2f       	mov	r22, r23
    1888:	71 91       	ld	r23, Z+
    188a:	77 23       	and	r23, r23
    188c:	e1 f7       	brne	.-8      	; 0x1886 <strrev+0x4>
    188e:	32 97       	sbiw	r30, 0x02	; 2
    1890:	04 c0       	rjmp	.+8      	; 0x189a <strrev+0x18>
    1892:	7c 91       	ld	r23, X
    1894:	6d 93       	st	X+, r22
    1896:	70 83       	st	Z, r23
    1898:	62 91       	ld	r22, -Z
    189a:	ae 17       	cp	r26, r30
    189c:	bf 07       	cpc	r27, r31
    189e:	c8 f3       	brcs	.-14     	; 0x1892 <strrev+0x10>
    18a0:	08 95       	ret

000018a2 <__udivmodhi4>:
    18a2:	aa 1b       	sub	r26, r26
    18a4:	bb 1b       	sub	r27, r27
    18a6:	51 e1       	ldi	r21, 0x11	; 17
    18a8:	07 c0       	rjmp	.+14     	; 0x18b8 <__udivmodhi4_ep>

000018aa <__udivmodhi4_loop>:
    18aa:	aa 1f       	adc	r26, r26
    18ac:	bb 1f       	adc	r27, r27
    18ae:	a6 17       	cp	r26, r22
    18b0:	b7 07       	cpc	r27, r23
    18b2:	10 f0       	brcs	.+4      	; 0x18b8 <__udivmodhi4_ep>
    18b4:	a6 1b       	sub	r26, r22
    18b6:	b7 0b       	sbc	r27, r23

000018b8 <__udivmodhi4_ep>:
    18b8:	88 1f       	adc	r24, r24
    18ba:	99 1f       	adc	r25, r25
    18bc:	5a 95       	dec	r21
    18be:	a9 f7       	brne	.-22     	; 0x18aa <__udivmodhi4_loop>
    18c0:	80 95       	com	r24
    18c2:	90 95       	com	r25
    18c4:	bc 01       	movw	r22, r24
    18c6:	cd 01       	movw	r24, r26
    18c8:	08 95       	ret

000018ca <_exit>:
    18ca:	f8 94       	cli

000018cc <__stop_program>:
    18cc:	ff cf       	rjmp	.-2      	; 0x18cc <__stop_program>
